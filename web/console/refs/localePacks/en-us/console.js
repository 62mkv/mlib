/* Copyright Â© 2016 JDA Software Group, Inc. All rights reserved. */
RP.locale.Dispatch.setMessages("rp.moca.common", {
"console" : "Console",
"menu" : "Menu",
"threadId" : "Thread ID",
"threadId_bold_tablerow_colon_arg" : "<td><b>Thread ID:</b></td><td>{value}</td>",
"threadName" : "Thread Name",
"threadState" : "Thread State",
"type" : "Type",
"type_bold_tablerow_colon_arg" : "<td><b>Type:</b></td><td>{value}</td>",
"status" : "Status",
"environment" : "Environment",
"name" : "Name",
"time" : "Time",
"timeAm" : "AM",
"timePm" : "PM",
"name_bold_tablerow_colon_arg" : "<td><b>Name:</b></td><td>{value}</td>",
"value_bold_tablerow_colon_arg" : "<td><b>Value:</b></td><td>{value}</td>",
"value" : "Value",
"node" : "Node",
"nodes" : "Nodes",
"nodes_bold_tablerow_colon_arg" : "<td><b>Nodes:</b></td><td>{value}</td>",
"role" : "Role",
"role_bold_tablerow_colon_arg" : "<td><b>Role:</b></td><td>{value}</td>",
"roles" : "Roles",
"roles_bold_tablerow_colon_arg" : "<td><b>Roles:</b></td><td>{value}</td>",
"roleId" : "Role ID",
"milliseconds" : "ms",
"min" : "Min",
"min_bold_tablerow_colon_arg" : "<td><b>Min:</b></td><td>{value}</td>",
"max" : "Max",
"max_bold_tablerow_colon_arg" : "<td><b>Max:</b></td><td>{value}</td>",
"avg" : "Avg",
"avg_bold_tablerow_colon_arg" : "<td><b>Avg:</b></td><td>{value}</td>",
"total" : "Total",
"total_bold_tablerow_colon_arg" : "<td><b>Total:</b></td><td>{value}</td>",
"command" : "Command",
"command_bold_tablerow_colon_arg" : "<td><b>Command:</b></td><td>{value}</td>",
"level" : "Level",
"executions" : "Executions",
"add" : "Add",
"copy" : "Copy",
"modify" : "Modify",
"delete" : "Delete",
"save" : "Save",
"cancel" : "Cancel",
"enabled" : "Auto Schedule",
"enabled_bold_tablerow_colon_arg" : "<td><b>Auto Schedule:</b></td><td>{value}</td>",
"enable" : "Enable",
"disable" : "Disable",
"groupName" : "Group Name",
"groupName_bold_tablerow_colon_arg" : "<td><b>Group Name:</b></td><td>{value}</td>",
"logFile" : "Log File",
"logFile_bold_tablerow_colon_arg" : "<td><b>Log File:</b></td><td>{value}</td>",
"tracing" : "Tracing",
"tracing_bold_tablerow_colon_arg" : "<td><b>Tracing:</b></td><td>{value}</td>",
"nodeUrl_bold_tablerow_colon_arg" : "<td><b>Node URL:</b></td><td>{value}</td>",
"status_bold_tablerow_colon_arg" : "<td><b>Status:</b></td><td>{value}</td>",
"message_bold_tablerow_colon_arg" : "<td><b>Message:</b></td><td>{value}</td>",
"startDate_bold_tablerow_colon_arg" : "<td><b>Start Date:</b></td><td>{value}</td>",
"endDate_bold_tablerow_colon_arg" : "<td><b>End Date:</b></td><td>{value}</td>",
"startCause_bold_tablerow_colon_arg" : "<td><b>Start Cause:</b></td><td>{value}</td>",
"tracingEnabled" : "Tracing Enabled",
"traceFile" : "Trace File",
"traceLevels" : "Trace Levels",
"sessionTracing" : "Session Tracing",
"unableEnableTracing" : "Could not enable tracing.",
"behavior" : "Behavior",
"warning" : "Warning",
"error" : "Error",
"invalidEnvVar" : "Invalid environment variable. Name and Value are required.",
"percentCompleted_arg" : "{percent}% completed",
"unableLogoutRequest" : "Could not send the logout request to the server.",
"support" : "Support",
"logout" : "Logout",
"confirmSupport" : "Are you sure you want to create a support file for download?",
"comfirmSupportFile" : "Are you sure you want to create a support file for download?",
"unableSupportZipRequest" : "Could not download the support zip from the server.",
"noServerConnection" : "A connection with the server could not be established. Check to make sure the server has not been shutdown and try again.",
"localSyntax" : "Local Syntax",
"cFunction" : "C Function",
"comMethod" : "COM Method",
"javaMethod" : "Java Method",
"managedMethod" : "Managed Method",
"trigger" : "Trigger",
"unknown" : "Unknown",
"inactive" : "Inactive",
"inEngine" : "In Engine",
"executingJava" : "Executing Java",
"executingC" : "Executing C",
"executingCom" : "Executing COM",
"executingSql" : "Executing SQL",
"executingScript" : "Executing Script",
"executingLocalSyntax" : "Executing Local Syntax",
"executingRemote" : "Executing Remote",
"executingDotNet" : "Executing .NET",
"client" : "Client",
"server" : "Server",
"legacyClient" : "Client (Legacy)",
"administrator" : "Administrator",
"readOnly" : "Read Only",
"noConsoleAccess" : "No Console Access",
"timeFormat" : "Y-m-d H:i:s",
"sunday" : "Sunday",
"monday" : "Monday",
"tuesday" : "Tuesday",
"tuesday" : "Tuesday",
"wednesday" : "Wednesday",
"thursday" : "Thursday",
"friday" : "Friday",
"saturday" : "Saturday",
"sunday" : "Sunday",
"everyHour" : "Every Hour",
"on" : "On",
"notAvailable" : "n/a",
"bytesBase2Suffix" : "bytes",
"bytesBase10Suffix" : "bytes",
"kibbibyteBase2Suffix" : "KiB",
"kilobyteBase10Suffix" : "kB",
"mebibyteBase2Suffix" : "MiB",
"megabyteBase10Suffix" : "MB",
"gibibyteBase2Suffix" : "GiB",
"gigabyteBase10Suffix" : "GB",
"tebibyteBase2Suffix" : "TiB",
"terabyteBase10Suffix" : "TB",
"pebibyteBase2Suffix" : "PiB",
"petabyteBase10Suffix" : "PB",
"exbibyteBase2Suffix" : "EiB",
"exabyteBase10Suffix" : "EB",
"off" : "Off",
"off" : "Off",
"general" : "General",
"addVariable" : "Add Variable",
"removeVariable" : "Remove Variable",
"confirmDelete" : "Confirm Delete",
"envVars" : "Environment Variables",
"confirmDeleteVar" : "Are you sure you want to delete the selected variable?",
"unableToLogIn" : "Unable to log in. Please try again.",
"restartServer" : "Restart Server",
"serverRestarted" : "The server restarted.",
"restartingServer" : "Restarting the server... this could take some time.",
"errorRestarting_arg" : "An error occurred attempting to restart the server: {message}",
"unableRestartRequest" : "Could not send restart request to the server.",
"restartCluster" : "Restart Cluster",
"clusterRestarted" : "The cluster restarted.",
"restartingCluster" : "Restarting the cluster... this could take some time.",
"errorRestartingCluster_arg" : "An error occurred attempting to restart the cluster: {message}",
"unableRestartClusterRequest" : "Could not send restart cluster request to the server.",
"server_colon_arg" : "Server: {name}",
"active" : "Active",
"poolType" : "Pool Type",
"idleCount" : "Idle Count",
"busyCount" : "Busy Count",
"buildMean" : "Build Mean",
"requestCount" : "Request Count",
"requestMean" : "Request Mean",
"requestTimeoutCount" : "Request Timeout Count",
"noStats" : "Stats could not be retreived.",
"noDatabase" : "You are running without a database set up.  Some functionality will be limited.",
"fieldsTruncated" : "Some data was truncated to fit the maximum field limits.",
"pagedDisplayCount" : "Displaying {0} - {1} of {2}",
"noHistory" : "No data.",
"nodeUrl" : "Node URL",
"message" : "Message",
"endDate" : "End Date"});
RP.locale.Dispatch.setMessages("rp.moca.sessions", {
"header" : "Sessions",
"session" : "Session",
"connectedAddress" : "Connected IP Address",
"curCommandPath" : "Current Command Path",
"lastCommandPath" : "Last Command Time",
"lastCommand" : "Last Command",
"lastSqlTime" : "Last SQL Time",
"lastSql" : "Last SQL",
"inNative" : "In Native",
"suspended" : "Suspended",
"blockedTime" : "Blocked Time",
"lockOwnerId" : "Lock Owner ID",
"blockedCount" : "Blocked Count",
"waitedCount" : "Waited Count",
"waitedTime" : "Waited Time",
"interruptThread" : "Interrupt Server Thread",
"toggleTracing" : "Enable/Disable Tracing",
"selectActiveSession" : "Please select an active session to interrupt and try again.",
"unableInterrupptThread" : "Could not interrupt server thread.",
"selectSessionForTrace" : "Please select a session to configure tracing on and try again.",
"typeAndStatus" : "Type / Status",
"startedAndLastCmdTime" : "Started / Last Command Time",
"startedCmdTime" : "Started Command Time",
"lastCmdTime" : "Last Command Time",
"lastScriptTime" : "Last Script Time",
"connectedIpAddress" : "Connected IP Address",
"isIdle" : "Is Idle",
"execution" : "Execution",
"serverThread" : "Server Thread",
"callStack" : "Call Stack",
"noSessions" : "No sessions to display."});
RP.locale.Dispatch.setMessages("rp.moca.nativeprocesses", {
"header" : "Native Processes",
"nativeProcess" : "Native Process",
"nativeProcess_bold_tablerow_colon_arg" : "<td><b>Native Process:</b></td><td>{value}</td>",
"createdTime" : "Created Time",
"createdTime_bold_tablerow_colon_arg" : "<td><b>Created Time:</b></td><td>{value}</td>",
"lastReqTime" : "Last Request Time",
"lastReqTime_bold_tablerow_colon_arg" : "<td><b>Last Request Time:</b></td><td>{value}</td>",
"lastReq" : "Last Request",
"lastReq_bold_tablerow_colon_arg" : "<td><b>Last Request:</b></td><td>{value}</td>",
"requests" : "Requests",
"requests_bold_tablerow_colon_arg" : "<td><b>Requests:</b></td><td>{value}</td>",
"lastCommandPath_bold_tablerow_colon_arg" : "<td><b>Last Command Path:</b></td><td>{value}</td>",
"temporary" : "Temporary",
"active" : "Active",
"selectProcessStop" : "Please select a native process to stop and try again.",
"errorStopping" : "An error occurred attempting to stop the selected native process.",
"unableStop" : "Could not stop the selected native process.",
"stopProcess" : "Stop Native Process",
"stopProcessQuestion" : "Stop Native Process?",
"stoppingRunning" : "You are closing a native process that is running.  This can cause instability.  Are you sure you want to do this?",
"noProcess" : "No native processes currently exist."});
RP.locale.Dispatch.setMessages("rp.moca.dbconnections", {
"header" : "Database Connections",
"connection" : "Connection",
"connection_bold_tablerow_colon_arg" : "<td><b>Connection:</b></td><td>{value}</td>",
"lastSqlTime" : "Last SQL Time",
"lastSqlTime_bold_tablerow_colon_arg" : "<td><b>Last SQL Time:</b></td><td>{value}</td>",
"lastSql" : "Last SQL",
"lastSql_bold_tablerow_colon_arg" : "<td><b>Last SQL:</b></td><td>{value}</td>",
"executions" : "Executions",
"executions_bold_tablerow_colon_arg" : "<td><b>Executions:</b></td><td>{value}</td>",
"lastCmdPath_bold_tablerow_colon_arg" : "<td><b>Last Command Path:</b></td><td>{value}</td>",
"noDbConn" : "No database connections exist."});
RP.locale.Dispatch.setMessages("rp.moca.jobs", {
"header" : "Jobs",
"job" : "Job",
"timer" : "Timer",
"timer_arg" : "Timer ({count})",
"scheduleJob" : "Schedule Job",
"unscheduleJob" : "Unschedule Job",
"jobId" : "Job ID",
"jobId_bold_tablerow_colon_arg" : "<td><b>Job ID:</b></td><td>{value}</td>",
"name" : "Name",
"name_bold_tablerow_colon_arg" : "<td><b>Name:</b></td><td>{value}</td>",
"command" : "Command",
"scheduled" : "Scheduled",
"scheduled_arg" : "Scheduled ({count})",
"scheduled_bold_tablerow_colon_arg" : "<td><b>Scheduled:</b></td><td>{value}</td>",
"schedule" : "Schedule",
"schedule_bold_tablerow_colon_arg" : "<td><b>Schedule:</b></td><td>{value}</td>",
"advancedSchedule" : "Advanced Schedule",
"simpleSchedule" : "Simple Schedule",
"type_bold_tablerow_colon_arg" : "<td><b>Type:</b></td><td>{value}</td>",
"tracingEnabled" : "On",
"tracingDisabled" : "Off",
"startDelay" : "Start Delay",
"startDelay_bold_tablerow_colon_arg" : "<td><b>Start Delay:</b></td><td>{value}</td>",
"startDelaySeconds" : "Start Delay (Seconds)",
"timer_bold_tablerow_colon_arg" : "<td><b>Timer:</b></td><td>{value}</td>",
"overlap" : "Overlap",
"overlap_bold_tablerow_colon_arg" : "<td><b>Overlap:</b></td><td>{value}</td>",
"overlapExecutions" : "Overlap Executions",
"interval" : "Interval",
"intervalSeconds" : "Interval (Seconds)",
"repeat" : "Repeat",
"selectJob" : "Please select a job to schedule and try again.",
"jobScheduled" : "The selected job is already scheduled.",
"jobScheduledPlural" : "The selected jobs are already scheduled.",
"schedulingJob" : "Scheduling job...",
"schedulingJobPlural" : "Scheduling jobs...",
"errorScheduling" : "An error occurred attempting to schedule the selected job.",
"errorSchedulingPlural" : "An error occurred attempting to schedule the selected jobs.",
"unableSchedule" : "Could not send schedule request to the server.",
"selectJobUnschedule" : "Please select a job to unschedule and try again.",
"jobNotScheduled" : "The selected job is not scheduled.",
"unschedulingJob" : "Unscheduling job...",
"errorUnscheduling" : "An error occurred attempting to unschedule the selected job.",
"jobNotScheduledPlural" : "The selected jobs are not scheduled.",
"unschedulingJobPlural" : "Unscheduling jobs...",
"errorUnschedulingPlural" : "An error occurred attempting to unschedule the selected jobs.",
"unableUnschedule" : "Could not send unschedule request to the server.",
"addSchedJob" : "Add Scheduled Based Job",
"addTimedJob" : "Add Timer Based Job",
"selectSingleModify" : "Please select a single job to modify and try again.",
"selectSingleCopy" : "Please select a single job to copy and try again.",
"selectSingleDelete" : "Please select a single job to delete and try again.",
"modifyJob_colon_arg" : "Modify Job: {name}",
"copyJob_colon_arg" : "Copy Job: {name}",
"deleteJob" : "Delete Job",
"jobIdRequired" : "A Job ID is required.",
"nameRequired" : "A name is required.",
"commandRequired" : "A command is required.",
"maintenanceUndefined" : "Error: maintenance panel mode undefined.",
"duplicateJob" : "Cannot create duplicate job.",
"noTimedJobs" : "No timer based jobs currently exist.",
"noSchedJobs" : "No schedule based jobs currently exist.",
"schedTooComplex" : "The schedule is too complicated for the simple view.",
"scheduleHelper" : "Schedule Helper",
"format" : "Format",
"cronExplain" : "The expression[cron] should be string comprising of 6 or 7 fields separated by white space. Fields can contain any of the allowed values, along with various combinations of the allowed special characters for that field.",
"isMandatory" : "Mandatory",
"allowedValues" : "Allowed Values",
"allowedSpecialCharacters" : "Allowed Special Characters",
"fieldName" : "Field Name",
"seconds" : "seconds",
"minutes" : "minutes",
"hours" : "hours",
"dayOfMonth" : "Day of Month",
"month" : "Month",
"dayOfWeek" : "Day of Week",
"yearOpt" : "Year (Optional)",
"yesCapital" : "YES",
"noCapital" : "NO",
"specialCharacters" : "Special Characters",
"cronStarDescr" : "[*] - Expression will match all values ",
"cronStarExample" : "\"* * * * * ? 2010\" - Execute every second in the year 2010 ",
"slashDescr" : "[/] - Used to describe increments",
"slashExample" : "\"10/15 * * * * ?\" - Execute every 15 seconds starting at 10 seconds",
"commaDescr" : "[,] - Used to separate items in a list",
"commaExample" : "\"0 0 0 1,15 * ?\" - Execute every 1st and 15th of the month at midnight",
"dashDescr" : "[-] - Used to define a range",
"dashExample" : "\"0 0 0 ? * MON-WED\" - Execute at midnight Monday through Wednesday",
"questionMarkDescr" : "[?] - Used to omit specification for day of week or month",
"questionMarkExample" : "\"0 0 0 1 * ?\" - Execute at midnight on the first of the month regardless of day of week",
"lDescr" : "[L] - Stands for \"last\"",
"lExample" : "\"0 0 0 L * ?\" - Execute at midnight on the last day of the month",
"lExampleTwo" : "\"0 0 0 ? * 6L\" - Execute at midnight on the last Friday of the month",
"poundDescr" : "[#] - Used to specify the occurence of a day in a month",
"poundExample" : "\"0 0 0 ? * SUN#3\" - Execute on the third Sunday of the month at midnight",
"wDescr" : "[W] - Denotes the nearest weekday",
"wExample" : "\"0 0 0 15W * ?\" - Execute on the weekday nearest to the 15th at midnight",
"wExampleTwo" : "\"0 0 0 LW * ?\" - Execute on the weekday nearest to the end of the month at midnight",
"jobIdReqToAddVar" : "Job ID field is required to add variables.",
"intervalGreaterThanZeroRequired" : "The job interval must be greater than 0",
"scheduleRequired" : "A schedule for a job is required."});
RP.locale.Dispatch.setMessages("rp.moca.jobhistory", {
"header" : "Job Execution History"});
RP.locale.Dispatch.setMessages("rp.moca.taskhistory", {
"header" : "Task Execution History",
"startCause" : "Start Cause"});
RP.locale.Dispatch.setMessages("rp.moca.tasks", {
"header" : "Tasks",
"task" : "Task",
"thread" : "Thread",
"process" : "Process",
"daemon" : "Daemon",
"startTask" : "Start Task",
"stopTask" : "Stop Task",
"restartTask" : "Restart Task",
"taskId_bold_tablerow_colon_arg" : "<td><b>Task ID:</b></td><td>{value}</td>",
"taskId" : "Task ID",
"running" : "Running",
"running_bold_tablerow_colon_arg" : "<td><b>Running:</b></td><td>{value}</td>",
"className" : "Class Name",
"className_bold_tablerow_colon_arg" : "<td><b>Class Name:</b></td><td>{value}</td>",
"autoStart" : "Auto Start",
"autoStart_bold_tablerow_colon_arg" : "<td><b>Auto Start:</b></td><td>{value}</td>",
"restart" : "Restart",
"restart_bold_tablerow_colon_arg" : "<td><b>Restart:</b></td><td>{value}</td>",
"restartOnTermination" : "Restart on Termination",
"startDelay" : "Start Delay",
"startDelay_bold_tablerow_colon_arg" : "<td><b>Start Delay:</b></td><td>{value}</td>",
"commandLine_bold_tablerow_colon_arg" : "<td><b>Command Line:</b></td><td>{value}</td>",
"startIn" : "Start In",
"startIn_bold_tablerow_colon_arg" : "<td><b>Start In:</b></td><td>{value}</td>",
"startInDir" : "Start In Directory",
"tracingOn" : "On",
"tracingOff" : "Off",
"addThreadTask" : "Add Thread Based Task",
"addProcessTask" : "Add Process Based Task",
"addDaemonTask" : "Add Daemon Based Task",
"selectTaskModify" : "Please select a single task to modify and try again.",
"selectTaskCopy" : "Please select a single task to copy and try again.",
"selectTaskDelete" : "Please select a single task to delete and try again.",
"modifyTask_colon_arg" : "Modify Task: {name}",
"copyTask_colon_arg" : "Copy Task: {name}",
"deleteTask" : "Delete Task",
"taskIdRequired" : "A Task ID is required.",
"nameRequired" : "A name is required.",
"classnameRequired" : "A class name is required.",
"commandRequired" : "A command is required.",
"startDirRequired" : "A starting directory is required.",
"noMaintPanel" : "Error: maintenance panel mode undefined.",
"duplicateTask" : "Cannot create duplicate task.",
"selectTaskStart" : "Please select a task to start and try again.",
"selectTaskStop" : "Please select a task to stop and try again.",
"selectTaskRestart" : "Please select a task to restart and try again.",
"taskRunning" : "The selected task is already running.",
"taskRunningPlural" : "The selected tasks are already running.",
"startingTask" : "Starting task...",
"startingTaskPlural" : "Starting tasks...",
"errorStartingTask" : "An error occurred attempting to start the selected task.",
"errorStartingTaskPlural" : "An error occurred attempting to start the selected tasks.",
"unableStartRequest" : "Could not send start task request to the server.",
"unableStopRequest" : "Could not send stop task request to the server.",
"unableRestartRequest" : "Could not send restart task request to the server.",
"taskNotRunning" : "The selected task is not running.",
"taskNotRunningPlural" : "The selected tasks are not running.",
"stoppingTask" : "Stopping task...",
"stoppingTaskPlural" : "Stopping tasks...",
"errorStopping" : "An error occurred attempting to stop the selected task.",
"errorStoppingPlural" : "An error occurred attempting to stop the selected tasks.",
"restartingTask" : "Restarting task...",
"restartingTaskPlural" : "Restarting tasks...",
"errorRestarting" : "An error occurred attempting to restart the selected task.",
"errorRestartingPlural" : "An error occurred attempting to restart the selected tasks.",
"noThreadTasks" : "No thread based tasks currently exist.",
"noProcessTasks" : "No process based tasks currently exist.",
"noDaemonTasks" : "No daemon based tasks currently exist.",
"thread_arg" : "Thread ({count})",
"process_arg" : "Process ({count})",
"daemon_arg" : "Daemon ({count})",
"taskIdReqToAddVar" : "Task ID field is required to add variables."});
RP.locale.Dispatch.setMessages("rp.moca.asyncex", {
"header" : "Asynchronous Executor",
"curExecutions" : "Current Asynchronous Executions",
"curExecutions_arg" : "Current Asynchronous Executions ({numExec})",
"curQueued" : "Current Queued Executions",
"curQueued_arg" : "Current Queued Executions ({numExec})",
"taskThread" : "Task Thread",
"taskName" : "Task Name",
"sequence" : "Sequence",
"queuedTask" : "Queued Task",
"asyncExecution" : "Async Execution"});
RP.locale.Dispatch.setMessages("rp.moca.asyncex.clustered", {
"header" : "Cluster Async Executor",
"curTasks_arg" : "Current Runner Tasks ({numTasks})",
"curRequests_arg" : "Current Requests ({numRequests})",
"unableStartThread" : "Could not start Runner Thread.",
"unableStopThread" : "Could not stop Runner Thread.",
"removeIdleThread" : "Remove Idle Thread",
"addRunnerThread" : "Add Runner Thread",
"nodeRunning" : "Node Running"});
RP.locale.Dispatch.setMessages("rp.moca.registry", {
"header" : "Registry",
"unableGetInformation" : "Could not get registry information from the server."});
RP.locale.Dispatch.setMessages("rp.moca.componentlib", {
"header" : "Component Libraries",
"componentLib" : "Component Library",
"javaPackage" : "Java Package",
"cLib" : "C Library",
"precedence" : "Precedence",
"product" : "Product",
"version" : "Version",
"noLibs" : "No component libraries currently exist. This is likely a configuration problem."});
RP.locale.Dispatch.setMessages("rp.moca.envvars", {
"header" : "Environment Variables"});
RP.locale.Dispatch.setMessages("rp.moca.systemprops", {
"header" : "System Properties"});
RP.locale.Dispatch.setMessages("rp.moca.resourceusage", {
"header" : "Resource Usage",
"memory" : "Memory",
"curHeapUsed" : "Current Heap Used",
"curHeapSize" : "Current Heap Size",
"maxHeapSize" : "Max Heap Size",
"sessions" : "Sessions",
"curSessions" : "Current Sessions",
"peakSessions" : "Peak Sessions",
"maxSessions" : "Max Sessions",
"nativeProcesses" : "Native Processes",
"curNativeProcesses" : "Current Native Processes",
"peakNativeProcesses" : "Peak Native Processes",
"maxNativeProcesses" : "Max Native Processes",
"dbConnections" : "Database Connections",
"curDbConnections" : "Current Database Connections",
"peakDbConnections" : "Peak Database Connections",
"maxDbConnections" : "Max Database Connections"});
RP.locale.Dispatch.setMessages("rp.moca.connectedusers", {
"header" : "Connected Users",
"connectedUsers_arg" : "Connected Users ({count})",
"selectKey" : "Please select a key to revoke.",
"unableRevoke" : "Could not send user revocation request to the server.",
"user" : "User",
"startDate" : "Start Date",
"lastRequestDate" : "Last Request Date",
"ipAddress" : "IP Address",
"key" : "Key",
"environment" : "Environment",
"consoleRole" : "Console Role",
"revokeAuth" : "Revoke Authentication",
"noSessions" : "No logged in sessions exist."});
RP.locale.Dispatch.setMessages("rp.moca.commandprofile", {
"header" : "Command Profile",
"clearCommandProfile" : "Clear Command Profile",
"downloadCommandProfile" : "Download Command Profile",
"selfAvg" : "Self Avg",
"selfAvg_bold_tablerow_colon_arg" : "<td><b>Self Avg:</b></td><td>{value}</td>",
"selfTotal" : "Self Total",
"selfTotal_bold_tablerow_colon_arg" : "<td><b>Self Total:</b></td><td>{value}</td>",
"componentLevel_bold_tablerow_colon_arg" : "<td><b>Component Level:</b></td><td>{value}</td>",
"commandPath_bold_tablerow_colon_arg" : "<td><b>Command Path:</b></td><td>{value}</td>",
"executions_bold_tablerow_colon_arg" : "<td><b>Executions:</b></td><td>{value}</td>",
"errorOnClear" : "An error occurred attempting to clear the command profile.",
"unableSendClear" : "Could not send the clear profile request to the server.",
"noProfiling" : "No command profiling is available."});
RP.locale.Dispatch.setMessages("rp.moca.logfiles", {
"header" : "Log Files",
"selectLog" : "Please select a log file to download and try again.",
"filename" : "Filename",
"pathname" : "Pathname",
"lastModified" : "Last Modified",
"size" : "Size",
"downloadLog" : "Download Log File(s)",
"noLogs" : "No log files currently exist."});
RP.locale.Dispatch.setMessages("rp.moca.clustering", {
"header" : "Clustering"});
