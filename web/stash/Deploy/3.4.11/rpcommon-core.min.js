/*
 *  $Copyright-Start$
 *
 *  Copyright (c) 2013
 *  RedPrairie Corporation
 *  All Rights Reserved
 *
 *  This software is furnished under a corporate license for use on a
 *  single computer system and can be copied (with inclusion of the
 *  above copyright) only for use on such a system.
 *
 *  The information in this document is subject to change without notice
 *  and should not be construed as a commitment by RedPrairie Corporation.
 *
 *  RedPrairie Corporation assumes no responsibility for the use of the
 *  software described in this document on equipment which has not been
 *  supplied or approved by RedPrairie Corporation.
 *
 *  $Copyright-End$
 */

Ext.ns("RP.util");RP.util.DeprecationUtils=function(){var deprecationMessageTracker={};function convertNameSpaceToWindowNameSpace(namespace){var contexts=namespace.split(".");var baseContext=window;Ext.each(contexts,function(context){baseContext=baseContext[context];});return baseContext;}
function replaceProperty(oldObject,oldName,newObject,property,deprecationMessage){if(Ext.isFunction(newObject[property])){deprecationMessageTracker[oldName+"."+property]=false;oldObject[property]=function(){if(deprecationMessageTracker[oldName+"."+property]===false){RP.util.DeprecationUtils.logStackTrace(deprecationMessage);deprecationMessageTracker[oldName+"."+property]=true;}
return newObject[property].apply(newObject,arguments);};}
else{oldObject[property]=newObject[property];}}
return{renameClass:function(oldName,newName){var newClass=convertNameSpaceToWindowNameSpace(newName);var oldClass=convertNameSpaceToWindowNameSpace(oldName);var deprecationMessage=String.format("[DEPRECATED] The use of the {0} shorthand is deprecated.  Please use {1}.",oldName,newName);if(newClass.prototype){for(var property in newClass.prototype){replaceProperty(oldClass.prototype,oldName,newClass.prototype,property,deprecationMessage);}
for(var prop in newClass){if(!Ext.isDefined(newClass.prototype[prop])){replaceProperty(oldClass,oldName,newClass,prop,deprecationMessage);}}}
else{Ext.iterate(newClass,function(property){replaceProperty(oldClass,oldName,newClass,property,deprecationMessage);});}},deprecatedInstanceMethod:function(oldClassName,newClassName,oldMethodName,newMethodName,optionalMessage){var oldClass=convertNameSpaceToWindowNameSpace(oldClassName);var newClass=convertNameSpaceToWindowNameSpace(newClassName);if(!Ext.isDefined(optionalMessage)){optionalMessage="";}
var deprecatedMsg=String.format("[DEPRECATED] The use of {0}.{1} is deprecated.  Please use {2}.{3} {4}.",oldClassName,oldMethodName,newClassName,newMethodName,optionalMessage);deprecationMessageTracker[oldClassName+"."+oldMethodName]=false;oldClass.prototype[oldMethodName]=function(){if(deprecationMessageTracker[oldClassName+"."+oldMethodName]===false){RP.util.DeprecationUtils.logStackTrace(deprecatedMsg);deprecationMessageTracker[oldClassName+"."+oldMethodName]=true;}
return newClass.prototype[newMethodName].apply(this,arguments);};},logStackTrace:function(msg){if(RP.globals.getValue("SERVER_TYPE")!=="production"){if(window.console&&console.warn){console.warn(msg);if(console.trace){console.trace();}}
logger.logWarning(msg+"  See the browser console for detailed information.");}}};}();
Date.prototype.clearTime=function(clone){if(clone){return this.clone().clearTime();}
var d=this.getDate();this.setHours(0);this.setMinutes(0);this.setSeconds(0);this.setMilliseconds(0);if(this.getDate()!=d){for(var hr=1,c=this.add(Date.HOUR,hr);c.getDate()!=d;hr++,c=this.add(Date.HOUR,hr)){}
this.setDate(d);this.setHours(c.getHours());}
return this;};Date.compare=function(date1,date2){if(isNaN(date1)||isNaN(date2)){throw new RP.Exception(date1+" - "+date2);}
else
if((date1 instanceof Date)&&(date2 instanceof Date)){return(date1<date2)?-1:(date1>date2)?1:0;}
else{throw new TypeError(date1+" - "+date2);}};Date.prototype.clone=function(){return new Date(this.getTime());};Date.prototype.compareTo=function(date){return Date.compare(this,date);};Date.prototype.equals=function(date){return this.compareTo(date||new Date())===0;};Date.prototype.between=function(start,end){return this.getTime()>=start.getTime()&&this.getTime()<=end.getTime();};Date.prototype.isAfter=function(date){return this.compareTo(date||new Date())===1;};Date.prototype.isOnOrAfter=function(date){var c=this.compareTo(date||new Date());return(c>=0);};Date.prototype.isBefore=function(date){return(this.compareTo(date||new Date())===-1);};Date.prototype.isOnOrBefore=function(date){var c=this.compareTo(date||new Date());return(c<=0);};Date.prototype.addMilliseconds=function(value){this.setTime(this.getTime()+value);return this;};Date.prototype.addSeconds=function(value){return this.addMilliseconds(value*1000);};Date.prototype.addMinutes=function(value){return this.addMilliseconds(value*60000);};Date.prototype.addHours=function(value){return this.addMilliseconds(value*3600000);};Date.prototype.addDays=function(value){var expectedHours=this.getHours(),expectedMinutes=this.getMinutes();this.setTime(this.getTime()+value*86400000);this.adjustForDST(expectedHours,expectedMinutes);return this;};Date.prototype.adjustForDST=function(expectedHours,expectedMinutes){var currentMinutes=this.getMinutes(),currentHours=this.getHours();if(currentHours==expectedHours&&currentMinutes==expectedMinutes){return this;}
var vectorHours=currentHours-expectedHours,deltaHours=Math.abs(vectorHours),deltaMinutes=Math.abs(currentMinutes-expectedMinutes);if(Math.abs((currentHours+24)-expectedHours)<deltaHours){vectorHours=(currentHours+24)-expectedHours;deltaHours=Math.abs(vectorHours);}
if(Math.abs(currentHours-(expectedHours+24))<deltaHours){vectorHours=currentHours-(expectedHours+24);deltaHours=Math.abs(vectorHours);}
if(deltaMinutes>0){this.addMinutes(-deltaMinutes*(vectorHours/Math.abs(vectorHours)));}else{this.addHours(-vectorHours);}
return this;};Date.prototype.addWeeks=function(value){return this.addDays(value*7);};Date.prototype.addMonths=function(value){var n=this.getDate();this.setDate(1);this.setMonth(this.getMonth()+value);this.setDate(Math.min(n,Date.__getDaysInMonth(this.getFullYear(),this.getMonth())));return this;};Date.prototype.addYears=function(value){return this.addMonths(value*12);};Date.decodeDateInURL=function(val){if(!val){return null;}
if(typeof(val)==="string"){var parts=val.split("-");return new Date(parseInt(parts[2],10),parseInt(parts[0],10)-1,parseInt(parts[1],10));}
else{return val;}};Date.encodeDateToURL=function(dt){return String.format("{0}-{1}-{2}",dt.getMonth()+1,dt.getDate(),dt.getFullYear());};Date.__isLeapYear=function(year){return((year%4===0&&year%100!==0)||year%400===0);};Date.__getDaysInMonth=function(year,month){return[31,(Date.__isLeapYear(year)?29:28),31,30,31,30,31,31,30,31,30,31][month];};Date.prototype.formatDate=function(format){if(format&&!RP.Formatting.Dates.isValidFormat(format)){return RP.Formatting.Dates.formatExt(this,format);}
return RP.core.Format.formatDate(this,format);};Date.prototype.dateFormat=function(){return this.formatDate.apply(this,[arguments[0],true]);};Date.prototype.formatTime=function(formatObj){return RP.core.Format.formatTime(this,formatObj);};Date.extParseDate=Date.parseDate;Date.parseDate=function(someDate,format){if(arguments.length>1&&(format.length>1||format.length===1&&someDate.length<3)){return Date.extParseDate.apply(Date,arguments);}
return RP.core.Format.parseDateTime(someDate,format);};Date.parseTime=function(someTime,format){return RP.core.Format.parseTime(someTime,format);};Date.prototype.deltaT=function(date){return new RP.TimeSpan(this.getTime()-date.getTime());};Date.prototype.round=function(roundToMinutes){if(roundToMinutes===undefined){roundToMinutes=15;}
var m=this.getMinutes()%roundToMinutes;if(m>0){var halfRound=parseInt(roundToMinutes/2,10);if(m<=halfRound){this.addMinutes(-1*m);}
else{this.addMinutes(roundToMinutes-m);}}
RP.util.Dates.setSeconds(this,0);RP.util.Dates.setMilliseconds(this,0);return this;};Date.prototype.roundToNearestMinute=function(){if(this.getSeconds()>=30){this.addMinutes(1);}
RP.util.Dates.setSeconds(this,0);RP.util.Dates.setMilliseconds(this,0);return this;};Date.prototype.roundToNearestSeconds=function(secondsInterval){if(secondsInterval===undefined){secondsInterval=15;}
var seconds=this.getSeconds()%secondsInterval;if(seconds>0){var halfRound=parseInt(secondsInterval/2,10);if(seconds<=halfRound){this.addSeconds(-1*seconds);}
else{this.addSeconds(secondsInterval-seconds);}}
RP.util.Dates.setMilliseconds(this,0);return this;};Date.prototype.roundBackToHour=function(){RP.util.Dates.setMinutes(this,0);RP.util.Dates.setSeconds(this,0);RP.util.Dates.setMilliseconds(this,0);return this;};Date.prototype.addTime=function(time){this.setHours(time.getHours());this.setMinutes(time.getMinutes());this.setSeconds(time.getSeconds());this.setMilliseconds(time.getMilliseconds());return this;};Date.prototype.getISO8601StringNoTranslation=function(){return RP.core.Format.formatDate(this,RP.core.Format.ISO8601NoOffset);};Date.prototype.getISO8601StringInUserTimeZone=function(){var userTimeZoneOffset=this.isDST()?RP.globals.getValue("USER_TIME_ZONE").daylightTimeOffset:RP.globals.getValue("USER_TIME_ZONE").standardTimeOffset;var minDecimal=userTimeZoneOffset%1;var hours=userTimeZoneOffset-minDecimal;var min=Math.round(minDecimal*60);var sign=userTimeZoneOffset>=0?"+":"-";hours=Math.abs(hours);hours=(hours.toString().length===1?"0":"")+hours;min=(min.toString().length===1?"0":"")+min;var sFormatVal=sign+hours+":"+min;return RP.core.Format.formatDate(this,RP.core.Format.ISO8601NoOffset)+sFormatVal;};Date.translateFormat=function(format){return format.replace(/d/,"dd").replace(/D/,"DDD").replace(/j/,"d").replace(/m/,"mm").replace(/M/,"MMM").replace(/n/,"m").replace(/y/,"yy").replace(/Y/,"yyyy").replace(/a/,"am/pm").replace(/A/,"AM/PM").replace(/h/,"hh").replace(/H/,"HH").replace(/g/,"h").replace(/G/,"H").replace(/i/,"mm").replace(/s/,"ss").replace(/u/g,"s");};
Ext.ns("RP.util");RP.util.Dates=(function(){var _setTimeValue=function(date,newValue,timeUnitGetterFn,multiplier){var currentTimeValue=date[timeUnitGetterFn]();date.setTime((date.getTime()-currentTimeValue*multiplier)+newValue*multiplier);};return({setMilliseconds:function(date,milliseconds){_setTimeValue(date,milliseconds,"getMilliseconds",1);},setSeconds:function(date,seconds){_setTimeValue(date,seconds,"getSeconds",1000);},setMinutes:function(date,minutes){_setTimeValue(date,minutes,"getMinutes",60000);}});})();
Ext.ns("RP.date");(function(){RP.date.NativeDate=Date;RP.date.DateOverride=function(){var date=new RP.date.NativeDate();if(arguments.length===1&&typeof arguments[0]==="string"&&arguments[0].match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}/)){date=Date.extParseDate(arguments[0],"c");var isoDateNoOffset=arguments[0].replace(/(\+|-)(\d?\d:?\d\d)/,"");if(!Ext.isEmpty(isoDateNoOffset)){date.isoDateNoOffset=isoDateNoOffset;}}
else if(arguments.length===0){return new RP.date.NativeDate();}
else if(arguments.length===1){var str;if(Ext.isGecko&&Ext.isString(arguments[0])&&arguments[0].match(/^\d{4}$/)){str=arguments[0].substr(0,2)+":"+arguments[0].substr(2);}
else if(Ext.isChrome&&Ext.isString(arguments[0])&&arguments[0].match(/:\d+/)){var testDate=new RP.date.NativeDate(arguments[0]);var minuteInt=parseInt(arguments[0].match(/:(\d+)/)[1],10);if(minuteInt>=60&&testDate&&!isNaN(testDate.getFullYear())){return new RP.date.NativeDate("Invalid date");}
str=arguments[0];}
else{str=arguments[0];}
date=new RP.date.NativeDate(str);}
else if(arguments.length>1){date=new RP.date.NativeDate(arguments[0],arguments[1],arguments[2],arguments[3]||0,arguments[4]||0,arguments[5]||0,arguments[6]||0);if(date.toString()==="Invalid Date"&&arguments.length===1){date=new RP.date.NativeDate(arguments[0]);}}
if(arguments.length>=1&&arguments[0]instanceof Date){if(arguments[0].isoDateNoOffset!==undefined){date.isoDateNoOffset=arguments[0].isoDateNoOffset;}}
return date;};for(var prop in RP.date.NativeDate){if(prop!=="constructor"){RP.date.DateOverride[prop]=RP.date.NativeDate[prop];}}
RP.date.DateOverride.prototype=RP.date.NativeDate.prototype;Date=RP.date.DateOverride;Date.parse=RP.date.NativeDate.parse;Date.UTC=RP.date.NativeDate.UTC;})();
Ext.ns("RP.core");RP.core.FormatEngine=function(formats,constants){var FORMAT_ISO8601_WITH_OFFSET="yyyy\u0027-\u0027MM\u0027-\u0027ddTHH:mm:sszzz";var FORMAT_ISO8601_WITHOUT_OFFSET="S";var _FormatInfo={};function _SetFormatInfo(formatObj,sFormatType)
{_FormatInfo={};_FormatInfo.FormatString=formatObj.formatstring.trim();}
function _IsValidInputToFormat(input){var bValid=true;var re=/^\d+$/;if(!re.test(input)){bValid=false;}
return bValid;}
function _TransStringFormat(value)
{var sFormatString=_FormatInfo.FormatString;var sOutput="";var sChar="";var j=value.length-1;var bBodyText=false;for(var i=sFormatString.length-1;i>=0;i--){sChar=sFormatString.charAt(i);if(sChar==="0")
{if(j<0){break;}
sOutput=value.charAt(j)+sOutput;j--;}
else
{if(sChar==="'")
{if(!bBodyText){bBodyText=true;}
else{if(sFormatString.charAt(i-1)==="'"){sOutput=sChar+sOutput;}
if(sFormatString.charAt(i+1)!=="'"){bBodyText=false;}}}
else
{if(bBodyText){sOutput=sChar+sOutput;}}}}
return sOutput;}
function _FormatDate(date,format){if(!format){format=RP.core.Formats.Date.Default;}
return RP.Formatting.Dates.format(date,format);}
function _FormatTime(time,format){if(!format){format=RP.core.Formats.Time.Default;}
return RP.Formatting.Times.format(time,format);}
function _FormatTimeSpan(value,formatObj){var s=value.totalSeconds();var m=Math.floor(s/60)%60;var h=Math.floor(s/3600);var hh=String.leftPad(h,2,"0");var mm=String.leftPad(m,2,"0");var ss=String.leftPad(Math.round(s%60),2,"0");if(!formatObj.template){formatObj.template=new Ext.Template(formatObj.formatstring);formatObj.template.compile();}
return formatObj.template.apply({h:h,hh:hh,mm:mm,ss:ss});}
function _FormatCurrency(number,format){if(!format){format=RP.core.Formats.Currency.Default;}
return RP.Formatting.Currencies.format(number,format);}
function _FormatNumber(number,format,precision){if(!format){format=RP.core.Formats.Number.Default;}
if(format===RP.core.Formats.Number.CustomPrecision){return RP.Formatting.Numbers.format(number,format,precision);}
if(format.indexOf("p")>-1){return RP.Formatting.Percentages.format(number,format,precision);}
else if(format.indexOf("c")!==-1){return RP.Formatting.Currencies.format(number,format);}
return RP.Formatting.Numbers.format(number,format,precision);}
function _FormatString(value,formatObj){if(!_IsValidInputToFormat(value)){throw new RP.Exception("Invalid input: "+value.toString()+" to format as: String");}
if(!formatObj){throw new RP.Exception("Must specify format type object");}
_SetFormatInfo(formatObj,"string");return _TransStringFormat(value);}
function _ParseDate(date,format){var parsedDate=RP.Formatting.Dates.parse(date,format);if(parsedDate){return parsedDate.clearTime(parsedDate);}
return parsedDate;}
function _ParseTime(time,format){return RP.Formatting.Times.parse(time,format);}
function _ParseDateWithTime(datetime,format){return RP.Formatting.Dates.parse(datetime,format);}
function _ParseCurrency(number){if(number===""){return 0;}
try{return RP.Formatting.Currencies.parse(number);}
catch(e){return NaN;}}
function _ParseNumber(number,format){return RP.Formatting.Numbers.parse(number,format);}
function _ParseString(sValue){var sOutput="";if(sValue){var re=/\d+/;while(re.test(sValue)){sOutput=sOutput+RegExp.lastMatch;sValue=RegExp.rightContext;}}
return sOutput;}
function _ConvertDateToUserTimeZone(date){if(Ext.isEmpty(RP.globals.getValue("USER_TIME_ZONE").standardTimeOffset)||Ext.isEmpty(RP.globals.getValue("USER_TIME_ZONE").daylightTimeOffset)){throw new Error("The authentication connection does not have user preferred time zone implemented");}
var userTimeZoneOffset=date.isDST()?RP.globals.getValue("USER_TIME_ZONE").daylightTimeOffset:RP.globals.getValue("USER_TIME_ZONE").standardTimeOffset;var timezoneDifference=(date.getTimezoneOffset()/60)+userTimeZoneOffset;return date.clone().addHours(timezoneDifference);}
function _FormatDateInUserTimeZone(date,format){return _FormatDate(_ConvertDateToUserTimeZone(date),format);}
function _FormatTimeInUserTimeZone(date,format){return _FormatTime(_ConvertDateToUserTimeZone(date),format);}
function _ConvertDateToServerTimeZone(date){if(Ext.isEmpty(date.isoDateNoOffset)){throw new Error("This date can't be displayed with no translation, the date must be created as an ISO-8601 String.");}
return new Date(date.isoDateNoOffset);}
function _FormatDateNoTranslation(date,format){return _FormatDate(_ConvertDateToServerTimeZone(date),format);}
function _FormatTimeNoTranslation(date,format){return _FormatTime(_ConvertDateToServerTimeZone(date),format);}
return{ISO8601:FORMAT_ISO8601_WITH_OFFSET,ISO8601NoOffset:FORMAT_ISO8601_WITHOUT_OFFSET,formatDate:_FormatDate,formatDateInUserTimeZone:_FormatDateInUserTimeZone,formatDateNoTranslation:_FormatDateNoTranslation,formatTime:_FormatTime,formatTimeInUserTimeZone:_FormatTimeInUserTimeZone,formatTimeNoTranslation:_FormatTimeNoTranslation,formatTimeSpan:_FormatTimeSpan,formatCurrency:_FormatCurrency,formatNumber:_FormatNumber,parseDate:_ParseDate,parseDateTime:_ParseDateWithTime,parseTime:_ParseTime,parseCurrency:_ParseCurrency,parseNumber:_ParseNumber};};
Ext.ns("RP.core");RP.core.Formats={Date:{Long:"y",Default:"J",Medium:"J",TimeStamp:"x",MediumWithHours:"K",FullDateOnly:"D",FullDateTime:"v",POSDate:"S",MediumDateExp:"b",WeekdayDate:"w",Month:"MMM",FullMonth:"MMMM",LongYear:"yyyy",ShortWeekday:"ddd",Weekday:"dddd",Short:"A",ShortLongYear:"d",MonthYear:"B",FullMonthYear:"C",MonthDate:"E",FullMonthDate:"M",FullDateWithoutDayName:"G",MonthDateDay:"I",ShortDateTime:"H",ShortWeekdayMedium:"q",AbbrFull:"a",ISO2014:"yyyy\u0027-\u0027MM\u0027-\u0027dd",ISO8601:"yyyy\u0027-\u0027MM\u0027-\u0027ddTHH:mm:sszzz",AbbrFullDateTime:"z",WeekDayTime:"k"},Time:{Default:"m",ShortAMPM:"s",Long:"l",Military:"HH:mm",MilitaryWithSeconds:"HH:mm:ss",HourOnly:"h",MilitaryShort:"H:mm",Short:"t",TrimHoursLong:"T"},Number:{Default:"n",HighPrecision:"n4",MediumPrecision:"n2",MediumLowPrecision:"n1",LowPrecision:"n0",ScheduleTotal:"r",MediumPrecisionRaw:"r",MinusSign:"o",CustomPrecision:"precision"},Currency:{Default:"c",HighPrecision:"c",MediumPrecision:"c",LowPrecision:"c0"},Percent:{Default:"p",HighPrecision:"p4",MediumPrecision:"p2",MediumLowPrecision:"p1",LowPrecision:"p0",CustomPrecision:"precision"},TimeSpan:{Short:{type:"timespan",formatstring:"{h}:{mm}",template:undefined},Medium:{type:"timespan",formatstring:"{h}:{mm}:{ss}",template:undefined},Long:{type:"timespan",formatstring:"{hh}:{mm}:{ss}",template:undefined}}};RP.core.FormatConstants={Weekdays:RP.Formatting.Dates.getShortDayNames(),FullWeekdays:RP.Formatting.Dates.getDayNames(),Months:RP.Formatting.Dates.getShortMonthNames(),FullMonths:RP.Formatting.Dates.getMonthNames()};RP.core.Format=RP.core.FormatEngine(RP.core.Formats,RP.core.FormatConstants);
Ext.ns("RP.util");RP.util.logger=Ext.extend(Ext.util.Observable,{_maxEntries:1000,_logToServer:false,_clientLogLastPost:new Date(),_clientLogInterval:5000,_clientLogsBuffer:[],_clientLogsCaptured:false,_levels:{TRACE:"TRACE",DEBUG:"DEBUG",INFO:"INFO",WARNING:"WARNING",ERROR:"ERROR",FATAL:"FATAL",ALL:"ALL"},_store:new Ext.data.ArrayStore({fields:[{name:'message'},{name:'level'},{name:'cls'}]}),_currentFilter:undefined,constructor:function(config){this.addEvents("logtoservertoggled");RP.util.logger.superclass.constructor.call(this,config);},getStore:function(){return this._store;},log:function(message,level){if(level===undefined){level=this._levels.INFO;}
var dateLogged=new Date();var formattedMessage=String.format("<{0}::{1}.{2}> {3}",dateLogged.formatTime(RP.core.Formats.Time.Military),dateLogged.getSeconds(),dateLogged.getMilliseconds(),message);var newRecord=new this._store.recordType({message:formattedMessage,level:level,cls:this.getLogClass(level)});var suspended=this._store.eventsSuspended;if(this._currentFilter&&!suspended){this._store.suspendEvents(false);}
this._store.add(newRecord);if(this._logToServer){this._clientLogsBuffer.push(String.format("{0} {1}",level,formattedMessage));}
if(this._store.getCount()>this._maxEntries){this._store.removeAt(0);}
if(this._currentFilter&&!suspended){this._store.resumeEvents();this.filterBy(this._currentFilter);}},getLogClass:function(level){var cls;switch(level){case this._levels.DEBUG:cls="rp-log-d";break;case this._levels.INFO:cls="rp-log-i";break;case this._levels.WARNING:cls="rp-log-w";break;case this._levels.ERROR:cls="rp-log-e";break;case this._levels.FATAL:cls="rp-log-f";break;default:cls="rp-log-t";break;}
return cls;},logTrace:function(message){this.log(message,this._levels.TRACE);},logDebug:function(message){this.log(message,this._levels.DEBUG);},logInfo:function(message){this.log(message,this._levels.INFO);},logWarning:function(message){this.log(message,this._levels.WARNING);},logError:function(e){var type,body;if(e.name==="RP.Exception"){type="RP.Exception";var inner=e.innerError;if(inner){body=String.format("message={0}; inner.name={1}; inner.message={2}; inner.statusText={3}",e.message,inner.name,inner.message,inner.statusText);}
else{body=String.format("message={0}",e.message);}}
else if(e.name==="Ext.Error"){type="Ext.Error";body=e.message;}
else if(e.statusText){type="AJAX Exception";body=String.format("status={0}; statusText={1}",e.status,e.statusText);}
else{type="JS Error";body=e.toString();}
this.log(String.format("[{0}]: {1}",type,body),this._levels.ERROR);},logFatal:function(message){this.log(message,this._levels.FATAL);},print:function(){var texts='Number of entries: '+this._store.getCount()+'\n';this._store.each(function(record){var entries=record.get('message');texts=texts+" \n "+entries;});return texts;},filterBy:function(levels){if(!Ext.isArray(levels)){levels=[levels];}
if(this._currentFilter){delete this._currentFilter;}
this._currentFilter=levels;this._store.filterBy(function(record,id){if(levels.indexOf(record.get("level"))!=-1){return true;}
return false;},this);},_getLocale:function(){if(navigator.language){return navigator.language;}
else if(navigator.browserLanguage){return navigator.browserLanguage;}
else if(navigator.systemLanguage){return navigator.systemLanguage;}
else if(navigator.userLanguage){return navigator.userLanguage;}},logEnvironment:function(){this.logInfo("[Logger] REFS Session ID: "+(Ext.util.Cookies.get("REFSSessionID")!==null?Ext.util.Cookies.get("REFSSessionID"):"Not logged in"));this.logInfo("[Logger] User ID: "+(RP.globals!==undefined?RP.globals.USERNAME:"No current user"));this.logInfo("[Logger] Browser Code Name: "+navigator.appCodeName);this.logInfo("[Logger] Browser Name: "+navigator.appName);this.logInfo("[Logger] Browser Version: "+navigator.appVersion);this.logInfo("[Logger] Browser Minor Version: "+navigator.appMinorVersion);this.logInfo("[Logger] Platform: "+navigator.platform);this.logInfo("[Logger] User Agent: "+navigator.userAgent);this.logInfo("[Logger] Locale: "+this._getLocale());this.logInfo("[Logger] SSL: "+(Ext.isSecure?"yes":"no"));this.logInfo("[Logger] Cookies Enabled: "+(navigator.cookieEnabled?"yes":"no"));this.logInfo("[Logger] Java Enabled: "+(navigator.javaEnabled()?"yes":"no"));this.logInfo("[Logger] Ext version: "+Ext.version);var url=window.location.href.split("#");this.logInfo("[Logger] Location: "+url[0]);},clearAll:function(){var suspended=this._store.eventsSuspended;if(suspended){this._store.resumeEvents();}
this._store.removeAll();if(suspended){this._store.suspendEvents(false);}},toggleLogToServer:function(){this.setLogToServer(!this._logToServer,true);},setUIMaxEntries:function(value){this._maxEntries=value;if(this._store.getCount()>this._maxEntries){var diff=this._store.getCount()-this._maxEntries;for(var i=0;i<=diff;i++){this._store.removeAt(0);}}},setLogToServer:function(flag,notifyServer){if(this._logToServer){this.flushClientLogs();}
if(!this._clientLogsCaptured){this._clientLogsCaptured=true;this._store.each(function(record){this._clientLogsBuffer.push(String.format("{0} {1}",record.get("level"),record.get("message")));},this);}
this._logToServer=flag;this.fireEvent("logtoservertoggled");if(notifyServer){Ext.Ajax.requestWithTextParams({url:this._clientLogPostURL,params:{action:"enable",content:flag?"true":"false"},scope:this,failure:function(){this.logError("[logger] Failed to enable/disable log to server");}});}},getIsLogToServer:function(){return this._logToServer;},setLogToServerInterval:function(intervalMS){this._clientLogInterval=intervalMS;},getLogToServerInterval:function(){return this._clientLogInterval;},setLogToServerURL:function(url){this._clientLogPostURL=url;},getLogToServerURL:function(){return this._clientLogPostURL;},flushClientLogs:function(){if(!this._clientLogPostURL||this._clientLogsBuffer.length===0){return;}
if(this._clientLogsBuffer.length>0){this.logTrace("[logger] Dumping client logs to server.... ");Ext.Ajax.requestWithTextParams({url:this._clientLogPostURL,params:{action:"post",content:this._clientLogsBuffer.join("\n")+"\n"},scope:this,success:function(){this._clientLogLastPost=new Date();this._clientLogsBuffer=[];},failure:function(){this._clientLogLastPost=new Date();this.logError("[logger] Client Log failed to flush to the server");}});}}});logger=new RP.util.logger();logger.logEnvironment();if(Ext.isFunction(window.onunload)){window.onunload=window.onunload.createSequence(function(){logger.flushClientLogs();});}
else{window.onunload=function(){logger.flushClientLogs();};}
logger.serverLogTask=Ext.TaskMgr.start({run:function(){if(!logger.getIsLogToServer()){return;}
logger.flushClientLogs();},interval:logger.getLogToServerInterval()});
Ext.ns("RP.util");RP.util.Waiter=function(config){config=config||{};this.config=Ext.apply({},config);this.config.defer=(!Ext.isDefined(config.defer)||(config.defer!==false));this.waitObjs=[];this.handlers=[];if(!Ext.isEmpty(config.handler)){this.addHandlers(config.handler);}
this._suspended=false;if(Ext.isArray(config.objs)){this.waitObjs=config.objs.concat();}
else if(!Ext.isEmpty(config.objs)){this.waitObjs.push(config.objs);}};RP.util.Waiter.prototype={add:function(obj){if(Ext.isArray(obj)){this.waitObjs=this.waitObjs.concat(obj);Ext.each(obj,function(o){logger.logTrace("[Waiter] Added "+o);});}
else{this.waitObjs.push(obj);logger.logTrace("[Waiter] Added "+obj);}},getCount:function(){return this.waitObjs.length;},isEmpty:function(){return(this.getCount()===0?true:false);},remove:function(obj){logger.logTrace("[Waiter] Removed "+obj);this.waitObjs.remove(obj);if(!this._suspended&&this.waitObjs.length===0){this._invokeHandlers();}},clear:function(){delete this.waitObjs;this.waitObjs=[];delete this.handlers;this.handlers=[];},addHandler:function(handler,scope){this.handlers.push({fnction:handler,scope:scope||this});},addHandlers:function(handlers){if(Ext.isEmpty(handlers)){return;}
if(!Ext.isArray(handlers)){handlers=[handlers];}
Ext.each(handlers,function(handler){if(Ext.isObject()&&handler.fnction){this.addHandler(handler.fnction,handler.scope||undefined);}
else{this.addHandler(handler);}},this);},insertHandler:function(handler,scope){this.handlers.splice(0,0,{fnction:handler,scope:scope||this});},suspend:function(){this._suspended=true;},resume:function(){if(this._suspended){this._suspended=false;if(this.waitObjs.length===0){this._invokeHandlers();}}},_invokeHandlers:function(){while(this.handlers.length){var h=this.handlers.shift();if(this.config.defer){h.fnction.defer(1,h.scope);}
else{h.fnction.call(h.scope);}}}};
Ext.ns("RP.util");RP.util.FunctionQueue=function(config){this._config=config||{};this._q=[];};RP.util.FunctionQueue.prototype={add:function(f){this._q.push(f);},execute:function(successFn,errorFn){logger.logTrace("[FunctionQueue] Starting execution of queue ("+this._q.length+" items)...");this._successFn=successFn;this._errorFn=errorFn;this._executeNext();},_executeNext:function(){if(this._q.length>0){var f=this._q.splice(0,1)[0];logger.logTrace("[FunctionQueue] Executing next item...");try{f(this._onItemSuccess.createDelegate(this),this._onItemFailure.createDelegate(this));}
catch(e){logger.logError(e);if(RP.globals.SERVER_TYPE==="development"){throw e;}
this._onItemFailure();}}
else{logger.logTrace("[FunctionQueue] Successfully executed all items...");if(Ext.isFunction(this._successFn)){this._successFn();}}},_onItemSuccess:function(){logger.logTrace("[FunctionQueue] Item successfully executed.");if(this._config.noDefer){this._executeNext();}
else{this._executeNext.defer(10,this);}},_onItemFailure:function(){logger.logTrace("[FunctionQueue] Item failed.");if(Ext.isFunction(this._errorFn)){this._errorFn();}}};
Ext.ns("RP.util");RP.util.DefaultUrlTransform=function(url){var prefix=RP.globals&&RP.globals.paths&&!Ext.isEmpty(RP.globals.paths.STATIC);if(url&&prefix&&url.indexOf("://")===-1&&url.indexOf(RP.globals.paths.STATIC)!==0){url=RP.globals.paths.STATIC+url;}
if(url&&url.indexOf("{client-mode}">=0)){url=url.replace(/\{client-mode\}/g,RP.globals.CLIENTMODE);}
return url;};
Ext.ns("RP.util");RP.util.ScriptLoader=(function(){var serialJSLoader=null;var downloaded={};var waiter=new RP.util.Waiter({defer:false});var isDoneHandlerAdded=false;var initialize=function(){if(!isDoneHandlerAdded){waiter.addHandler(function(){logger.logDebug("[ScriptLoader] Completed loading all files.");});}
isDoneHandlerAdded=true;};var gatherUniqueUrls=function(urls,urlTransform){var uniqueUrls=[];Ext.each(urls,function(url){url=urlTransform(url);if(Ext.isEmpty(downloaded[url])){if(!Ext.isEmpty(url)){uniqueUrls.push(url);downloaded[url]=1;}}});return uniqueUrls;};return{loadSerial:function(urls,successFn,errorFn,urlTransform){initialize();if(!Ext.isArray(urls)){urls=[urls];}
urlTransform=urlTransform||RP.util.DefaultUrlTransform;var uniqueUrls=gatherUniqueUrls(urls,urlTransform);if(uniqueUrls.length>0){if(Ext.isFunction(successFn)){waiter.insertHandler(successFn);}
if(serialJSLoader===null){var uniqueId=Ext.id();waiter.add(uniqueId);serialJSLoader=new RP.util.ScriptLoader.JSLoader({urls:uniqueUrls,completionCallback:function(){if(serialJSLoader!==null&&serialJSLoader.urls.length===0){if(waiter.waitObjs.indexOf(uniqueId)!==-1){logger.logTrace("[ScriptLoader.loadSerial] Completed downloading all required resources.");waiter.remove(uniqueId);serialJSLoader=null;}}}});}
else{serialJSLoader.appendUrls(uniqueUrls);}}},load:function(urls,successFn,errorFn,urlTransform){initialize();if(!Ext.isArray(urls)){urls=[urls];}
urlTransform=urlTransform||RP.util.DefaultUrlTransform;var uniqueUrls=gatherUniqueUrls(urls,urlTransform);if(uniqueUrls.length>0){if(Ext.isFunction(successFn)){waiter.insertHandler(successFn);}
var uniqueId=Ext.id();waiter.add(uniqueId);var jsLoader=new RP.util.ScriptLoader.JSLoader({urls:uniqueUrls,failureCallback:errorFn,completionCallback:function(){logger.logTrace("[ScriptLoader.load] Completed downloading all required resources.");waiter.remove(uniqueId);}});}
else{successFn();}},loadStashLibrary:function(name,version,successFn,errorFn){var incs;try{incs=RP.stash.getLibraryIncludes(name,version);}
catch(error){logger.logFatal("[ScriptLoader] "+error.message);}
if(incs.length===0){logger.logDebug("[ScriptLoader] No items for library '"+name+"'");return;}
logger.logDebug("[ScriptLoader] Loading library '"+name+"' version "+version);var queue=new RP.util.FunctionQueue();function createInlineScriptItem(script){return function(succFn,errFn){try{eval(script);succFn();}
catch(e){errFn();throw e;}};}
function createCssItem(url){return function(succFn,errFn){RP.util.CSSLoader.load(url,false);succFn();};}
var loadFn=this.load.createDelegate(this);function createExternalScriptsItem(urls){return function(succFn,errFn){loadFn(urls,succFn,errFn,false);};}
for(var i=0;i<incs.length;i++){var inc=incs[i];if(inc.isType("s")){var urls=[];while(i<incs.length){urls.push(inc.getUrl());i++;if((i<incs.length)&&(!incs[i].isType("s"))){i--;break;}
inc=incs[i];}
logger.logTrace("[ScriptLoader] Adding "+urls.length+" external scripts");queue.add(createExternalScriptsItem(urls));}
else if(inc.isType("c")){logger.logTrace("[ScriptLoader] Adding CSS: "+inc.getUrl());queue.add(createCssItem(inc.getUrl()));}
else if(inc.isType("j")){logger.logTrace("[ScriptLoader] Adding inline script: "+inc.getInlineCode());queue.add(createInlineScriptItem(inc.getInlineCode()));}
else{logger.logFatal("[ScriptLoader] Unhandled include type from library: "+inc.getType());}}
queue.execute(successFn,errorFn);},onReady:function(fn){if(waiter.getCount()===0){logger.logTrace("[ScriptLoader] onReady - Called with no scripts in the queue.");serialJSLoader=null;fn();return;}
logger.logTrace("[ScriptLoader] onReady - Waiting for scripts in queue to load...");waiter.addHandler(function(){logger.logTrace("[ScriptLoader] onReady - Scripts in queue loaded, so invoking handler...");serialJSLoader=null;fn();});},JSLoader:Ext.extend(Object,{urls:[],activeDownload:false,successCallback:null,failureCallback:null,completionCallback:Ext.emptyFn,scriptType:"text/javascript",scriptInsertionPoint:document.getElementsByTagName("SCRIPT")[0],constructor:function(config){Ext.apply(this,config);var waiter=new RP.util.Waiter();this.waiter=waiter;var urls=this.urls;this.successCallback=function(url){logger.logDebug("[ScriptLoader.JSLoader] Loaded "+url);waiter.remove(url);};this.failureCallback=function(url){logger.logError("[ScriptLoader.JSLoader] Failed to download "+url);waiter.remove(url);if(Ext.isFunction(config.failureCallback)){config.failureCallback(url);}};this._startDownloads();},appendUrls:function(urls){logger.logTrace("Adding "+urls.length+" to the current download.");Ext.each(urls,function(url){this.urls.push(url);},this);if(!this.activeDownload){logger.logTrace("Download process is not active.  Starting download.");this._startDownloads();}},_startDownloads:function(){this._startSynchronousDownloading();},_appendScript:function(script){var parentNode=this.scriptInsertionPoint.parentNode;parentNode.insertBefore(script,this.scriptInsertionPoint);},_attachOnErrorHandler:function(script){var failureCallback=this.failureCallback;var url=script.src;script.onerror=function(){logger.logFatal("[ScriptLoader.JSLoader] Failed to load script "+url);failureCallback(url);};},_attachOnSuccessHandler:function(script){var successCallback=this.successCallback;var url=script.src;if(Ext.isIE){script.onreadystatechange=function(){if(this.readyState==="complete"||this.readyState==="loaded"){successCallback(url);}};}
else{var fn=function(){successCallback(url);};script.onload=fn;}},_download:function(url){logger.logTrace("[ScriptLoader.JSLoader] Requesting "+url);var script=document.createElement("script");script.type=this.scriptType;script.src=url;this.waiter.add(script.src);this._attachOnErrorHandler(script);this._attachOnSuccessHandler(script);logger.logTrace("[ScriptLoader.JSLoader] Starting load of JS URL, "+url);this._appendScript(script);},_startSynchronousDownloading:function(){var url=this.urls.shift();if(this.urls.length>0){logger.logTrace("[ScriptLoader.JSLoader] Queuing "+this.urls.length+" urls...");this.waiter.addHandler(function(){logger.logTrace("[ScriptLoader.JSLoader] Previous request finished, triggering download of next URL.");this._startSynchronousDownloading();},this);this.activeDownload=true;}
else{this.waiter.addHandler(function(){logger.logTrace("[ScriptLoader.JSLoader] Completed loading list of passed urls");this.completionCallback();},this);this.activeDownload=false;}
logger.logTrace("[ScriptLoader.JSLoader] Loading script url "+url+"...");this._download(url);},_startAsynchronousDownloading:function(){this.waiter.add(this.urls);Ext.each(this.urls,function(url){logger.logTrace("[ScriptLoader.JSLoader] Loading script url "+url+"...");this._download(url);},this);}})};})();
Ext.ns("RP.util");RP.util.SourceScriptLoader=function(){var srcServletPath="src/{0}";var scriptLoaderUrlTransform=function(url){return url;};var urlTransform=function(url){var prefix=RP.globals&&RP.globals.paths&&!Ext.isEmpty(RP.globals.paths.STATIC);var staticPath=RP.globals.paths.STATIC.replace(/web\/?$/,"");if(prefix&&(url.indexOf("://")<0)){url=staticPath+url;}
return url;};return{load:function(urls){if(!Ext.isArray(urls)){urls=[urls];}
var srcUrls=[];Ext.each(urls,function(url){url=url.replace(/\\/g,"/");srcUrls.push(urlTransform(String.format(srcServletPath,url)));},this);RP.util.ScriptLoader.loadSerial(srcUrls,Ext.emptyFn,Ext.emptyFn,scriptLoaderUrlTransform);}};}();