/*
 *  $Copyright-Start$
 *
 *  Copyright (c) 2013
 *  RedPrairie Corporation
 *  All Rights Reserved
 *
 *  This software is furnished under a corporate license for use on a
 *  single computer system and can be copied (with inclusion of the
 *  above copyright) only for use on such a system.
 *
 *  The information in this document is subject to change without notice
 *  and should not be construed as a commitment by RedPrairie Corporation.
 *
 *  RedPrairie Corporation assumes no responsibility for the use of the
 *  software described in this document on equipment which has not been
 *  supplied or approved by RedPrairie Corporation.
 *
 *  $Copyright-End$
 */

RP.globals=RP.globals||{};RP.stash.api.beginLoadLib();
Ext.ns("RP.locale");RP.locale.Dispatch=function(){var msgDict={};var localePacksDict={};var urlAppendDict={};var messageKeyEnabled=!Ext.isEmpty(Ext.util.Cookies.get("rp-showmessages"))&&RP.globals.getValue("SERVER_TYPE")!=="production";var defineLocalePack=function(lp,override){if(!override&&localePacksDict[lp.name]){return;}
if(override&&urlAppendDict[lp.name]){logger.logTrace("[Dispatch] Clearing 'append' URLs for locale pack '"+lp.name+"'");delete urlAppendDict[lp.name];}
localePacksDict[lp.name]={url:lp.url};};var getLocalePackProperty=function(localePackName,property){var localePackDef=localePacksDict[localePackName];if(!localePackDef){return null;}
return localePackDef[property];};var getLocalePackURLs=function(name){var url=getLocalePackProperty(name,"url");if(!url||url.length===0){return null;}
if(!Ext.isArray(url)){url=[url];}
if(urlAppendDict[name]){url=url.concat(urlAppendDict[name]);}
var urls=[];Ext.each(url,function(u){urls.push(u);});return urls;};var generateIncludeScriptHTML=function(url){return"<script type=\"text/javascript\" src=\""+url+"\"></script>";};return{isMessageKeyEnabled:function(){return messageKeyEnabled;},defineLocalePacks:function(defs,override){if(Ext.isArray(defs)){Ext.each(defs,function(lp){defineLocalePack(lp,override);});}
else{defineLocalePack(defs,override);}},appendLocalePackURL:function(name,urls){var d=urlAppendDict[name];if(!d){d=[];urlAppendDict[name]=d;}
if(!Ext.isArray(urls)){urls=[urls];}
Ext.each(urls,function(url){logger.logTrace("[Dispatch] Adding to 'append' URLs for locale pack '"+name+"': "+url);d.push(url);});},includeLocalePack:function(name){var urls=getLocalePackURLs(name);RP.util.ScriptLoader.loadSerial(urls,Ext.emptyFn,Ext.emptyFn);},setMessages:function(nameSpace,messagesObj){if(nameSpace===null){nameSpace="";}
if(nameSpace.length>0&&nameSpace.lastIndexOf('.')!=nameSpace.length-1){nameSpace+=".";}
var value;for(var property in messagesObj){value=messagesObj[property];if(typeof(value)==="string"){msgDict[nameSpace+property]=value;}}},getMessage:function(name){if(typeof msgDict[name]==="undefined"){logger.logError("[Dispatch] Message not found: "+name);}
var message=(msgDict[name]||name);if(messageKeyEnabled){message=String.format('<span title="{0}">{1}</span>',name,message);}
return message;},waitForMessageLoaded:function(msg,fn,time){time=(time+100)||100;try{var message=this.getMessage(msg);if(message!==msg||time>=3000){fn.call();return;}}catch(e){}
Ext.defer(this.waitForMessageLoaded,100,this,[msg,fn,time]);}};}();RP.getMessage=RP.locale.Dispatch.getMessage;
Ext.ns("RP");RP.Ajax=Ext.Ajax;Ext.apply(RP.Ajax,{defaultHeaders:null,activeRequests:0,displayExceptionDialog:function(status,errorMessage){var template="{0}<br /><br /> {1}<br />({2}: {3})";if(!RP.REFSExceptionCodes){RP.REFSExceptionCodes={OK:0};}
var dialogMessage="";if(status>RP.REFSExceptionCodes.OK){dialogMessage=RP.getMessage("rp.common.exception.dialogMessage");}
else
if(status<RP.REFSExceptionCodes.OK){dialogMessage=RP.getMessage("rp.common.exception.dialogUnexpectedMessage");}
Ext.Msg.alert(RP.getMessage("rp.common.exception.dialogTitle"),String.format(template,dialogMessage,errorMessage,RP.getMessage("rp.common.exception.dialogStatusLabel"),status));},requestWithTextParams:function(params){params.headers=RP.util.Object.mergeProperties(params.headers||{},{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"});Ext.Ajax.request(params);},requestWithJSONParams:function(params){params.headers=RP.util.Object.mergeProperties(params.headers||{},{"Content-Type":"application/json; charset=UTF-8"});Ext.Ajax.request(params);}});RP.Ajax.addEvents("applicationrequestexception","sessionterminated");Ext.Ajax.on('requestexception',function(conn,resp,options){Ext.Ajax.activeRequests--;if(window.leavingPage){return;}
var urlMsg=options.CallMethod?"Proxy to "+options.CallMethod:options.url;logger.logError(String.format("<br /><span style='padding-left: 3em'>Failed - URL: {0}</span><br /><span style='padding-left: 3em'> Parameters: {1}</span> <br /><span style='padding-left: 3em'>Status Text: {2}</span>",urlMsg,options.params,resp.statusText));if(!Ext.isBoolean(options.disableExceptionHandling)||!options.disableExceptionHandling){var exceptionMessageIdRoot="rp.common.exception.";var exceptionMessage=RP.getMessage(exceptionMessageIdRoot+status);if(exceptionMessage===exceptionMessageIdRoot){Ext.Ajax.displayExceptionDialog(resp.status,RP.getMessage(exceptionMessageIdRoot+"GENERAL_EXCEPTION"));}
else{Ext.Ajax.displayExceptionDialog(resp.status,exceptionMessage);}}});Ext.Ajax.on('beforerequest',function(conn,config){Ext.Ajax.activeRequests++;});Ext.Ajax.on('requestcomplete',function(conn,response,options){Ext.Ajax.activeRequests--;if(window.location.pathname.indexOf(RP.globals.getPath('LOGIN'))===-1&&Ext.isFunction(response.getResponseHeader)&&response.getResponseHeader("authenticated")&&response.getResponseHeader("authenticated")=="false"){Ext.Ajax.fireEvent("sessionterminated");}
if(!RP.REFSExceptionCodes){return;}
try{var responseObj=Ext.util.JSON.decode(response.responseText);response.responseObject=responseObj;var status=responseObj.status;if(status!==RP.REFSExceptionCodes.OK){logger.logError("Ajax response error: "+responseObj.message);var handleException=true;if(status===RP.REFSExceptionCodes.HTTP_PROXY_EXCEPTION){handleException=Ext.Ajax.fireEvent("applicationrequestexception",conn,response,options);}
if(handleException&&(!Ext.isBoolean(options.disableExceptionHandling)||!options.disableExceptionHandling)){var messageId=RP.REFSExceptionMessages[status];Ext.Ajax.displayExceptionDialog(status,RP.getMessage("rp.common.exception."+messageId));}}}
catch(e){logger.logError("An error occurred while handling the response.");logger.logError(e);}});
Ext.applyIf(Math,{roundDecimal:function(cValue,iScale)
{var iMultiplier=Math.pow(10,iScale);cValue=(Math.round((cValue*(iMultiplier*10))/10)/iMultiplier);return cValue;}});
Ext.applyIf(String.prototype,{contains:function(value){return this.indexOf(value)!==-1;}});
Ext.applyIf(Ext,{isMobileSafari:function(){return navigator.userAgent.toLowerCase().indexOf("mobile")!==-1&&Ext.isSafari;}(),isIE9:function(){return Ext.isIE&&/msie 9/.test(navigator.userAgent.toLowerCase())&&document.documentMode==9;}(),isIEDocMode:function(modeNumber){return Ext.isIE&&document.documentMode==modeNumber;}});Ext.apply(Ext,{isIE6:function(){return Ext.isIE&&/msie 6/.test(navigator.userAgent.toLowerCase());}()});
Ext.override(Ext.grid.GridPanel,{applyState:function(state){var cm=this.colModel,cs=state.columns,store=this.store,s,c,colIndex;if(cs){for(var i=0,len=cs.length;i<len;i++){s=cs[i];c=cm.getColumnById(s.id);if(c){colIndex=cm.getIndexById(s.id);cm.setState(colIndex,{hidden:s.hidden,width:s.width,sortable:s.sortable});if(colIndex!=i){cm.moveColumn(colIndex,i);}}}}
if(store){s=state.sort;if(s){store[store.remoteSort?'setDefaultSort':'sort'](s.field,s.direction);}
s=state.group;if(store.groupBy){if(s){store.groupBy(s);}
else{store.clearGrouping();}}}
var o=Ext.apply({},state);delete o.columns;delete o.sort;Ext.grid.GridPanel.superclass.applyState.call(this,o);},getState:function(){var o={columns:[]},store=this.store,ss,gs;for(var i=0,c;(c=this.colModel.config[i]);i++){o.columns[i]={id:c.id,width:c.width};if(c.hidden){o.columns[i].hidden=true;}
if(c.sortable){o.columns[i].sortable=true;}}
if(store){ss=store.getSortState();if(ss){o.sort=ss;}
if(store.getGroupState){gs=store.getGroupState();if(gs){o.group=gs;}}}
return o;}});(function(){var oldGetErrors=Ext.form.DateField.prototype.getErrors;Ext.override(Ext.form.DateField,{getErrors:function(value){var errors=oldGetErrors.createDelegate(this,[value])();for(var i=0;i<errors.length;i++){errors[i]=errors[i].replace(this.format,Date.translateFormat(this.format));}
return errors;}});})();Ext.Element.fly=function(el,named){var ret=null;named=named||'_global';el=Ext.getDom(el);if(el){if(Ext.Element._flyweights===undefined){Ext.Element._flyweights={};}
(Ext.Element._flyweights[named]=Ext.Element._flyweights[named]||new Ext.Element.Flyweight()).dom=el;ret=Ext.Element._flyweights[named];}
return ret;};
if((typeof Range!=="undefined")&&!Range.prototype.createContextualFragment){Range.prototype.createContextualFragment=function(html){var frag=document.createDocumentFragment(),div=document.createElement("div");frag.appendChild(div);div.outerHTML=html;return frag;};}
Ext.override(Ext.TabPanel,{disableWideScrollers:false,tabScrollerWidth:18,autoScrollTabs:function(){if(this.disableWideScrollers!==true&&Ext.isMobileSafari){this.addClass("rp-mobile-tab-panel");this.tabScrollerWidth=29;}
this.pos=this.tabPosition=='bottom'?this.footer:this.header;var count=this.items.length,ow=this.pos.dom.offsetWidth,tw=this.pos.dom.clientWidth,wrap=this.stripWrap,wd=wrap.dom,cw=wd.offsetWidth,pos=this.getScrollPos(),l=this.edge.getOffsetsTo(this.stripWrap)[0]+pos;if(!this.enableTabScroll||cw<20){return;}
if(count===0||l<=tw){wd.scrollLeft=0;wrap.setWidth(tw);if(this.scrolling){this.scrolling=false;this.pos.removeClass('x-tab-scrolling');this.scrollLeft.hide();this.scrollRight.hide();if(Ext.isAir||Ext.isWebKit){wd.style.marginLeft='';wd.style.marginRight='';}}}
else{if(!this.scrolling){this.pos.addClass('x-tab-scrolling');if(Ext.isAir||Ext.isWebKit){wd.style.marginLeft=this.tabScrollerWidth+'px';wd.style.marginRight=this.tabScrollerWidth+'px';}}
tw-=wrap.getMargins('lr');wrap.setWidth(tw>20?tw:20);if(!this.scrolling){if(!this.scrollLeft){this.createScrollers();}
else{this.scrollLeft.show();this.scrollRight.show();}}
this.scrolling=true;if(pos>(l-tw)){wd.scrollLeft=l-tw;}
else{this.scrollToTab(this.activeTab,false);}
this.updateScrollButtons();}}});
RP.TimeSpan=function(ms){this.ms=ms;};RP.TimeSpan.prototype.plus=function(ts){if(ts.ms){return new RP.TimeSpan(this.ms+ts.ms);}
return this;};RP.TimeSpan.prototype.minus=function(ts){if(ts.ms){return new RP.TimeSpan(this.ms-ts.ms);}
return this;};RP.TimeSpan.prototype.getTotalMilliseconds=function(){return this.ms;};RP.TimeSpan.prototype.totalMilliseconds=function(){return this.getTotalMilliseconds();};RP.TimeSpan.prototype.totalSeconds=function(){return this.getTotalMilliseconds()/1000.0;};RP.TimeSpan.prototype.totalMinutes=function(){return this.getTotalMilliseconds()/60000.0;};RP.TimeSpan.prototype.totalHours=function(){return this.getTotalMilliseconds()/3600000.0;};RP.TimeSpan.prototype.totalDays=function(){return this.getTotalMilliseconds()/86400000.0;};var TimeSpan=function(ms){this.ms=ms;};RP.util.DeprecationUtils.deprecatedInstanceMethod("TimeSpan","RP.TimeSpan","plus","plus");RP.util.DeprecationUtils.deprecatedInstanceMethod("TimeSpan","RP.TimeSpan","minus","minus");RP.util.DeprecationUtils.deprecatedInstanceMethod("TimeSpan","RP.TimeSpan","getTotalMilliseconds","getTotalMilliseconds");RP.util.DeprecationUtils.deprecatedInstanceMethod("TimeSpan","RP.TimeSpan","totalMilliseconds","totalMilliseconds");RP.util.DeprecationUtils.deprecatedInstanceMethod("TimeSpan","RP.TimeSpan","totalSeconds","totalSeconds");RP.util.DeprecationUtils.deprecatedInstanceMethod("TimeSpan","RP.TimeSpan","totalMinutes","totalMinutes");RP.util.DeprecationUtils.deprecatedInstanceMethod("TimeSpan","RP.TimeSpan","totalHours","totalHours");RP.util.DeprecationUtils.deprecatedInstanceMethod("TimeSpan","RP.TimeSpan","totalDays","totalDays");
Ext.ns("RP.ui");RP.FiscalDatePicker=Ext.extend(Ext.DatePicker,{initComponent:function(){if(Ext.isNumber(RP.globals.getValue("CALENDAR").startDayOfWeek)){this.startDay=RP.globals.getValue("CALENDAR").startDayOfWeek;}
RP.FiscalDatePicker.superclass.initComponent.call(this);},onRender:function(){RP.FiscalDatePicker.superclass.onRender.apply(this,arguments);if(Ext.isEmpty(RP.globals.getValue("CALENDAR").fiscalPeriods)){return;}
this.addClass("rp-fiscal-date-picker");var table=this.el.child(".x-date-inner");var headerMarkup="<th><span>{0}</span></th>";var weekHeader=RP.getMessage("rp.common.components.fiscalDatePicker.weekHeader");var headerRow=table.child("tr");headerRow.insertHtml("afterBegin",String.format(headerMarkup,weekHeader));var rowMarkup='<td><a class="rp-fiscal-week" href="#" hidefocus="on" tabIndex="1"><em><span></span></em></a></td>';var rows=table.select("tbody>tr");rows.each(function(row,composite,index){row.insertHtml("afterBegin",rowMarkup);});this.weekCells=table.select(".rp-fiscal-week");this.mon(this.eventEl,"click",this.onFiscalWeekClick,this,{delegate:".rp-fiscal-week"});delete this.internalRender;this.update(this.getValue(),true);},update:function(date){RP.FiscalDatePicker.superclass.update.apply(this,arguments);if(!this.weekCells){return;}
this.convertFiscalPeriodsToDates();var fiscalPeriods=RP.globals.getValue("CALENDAR").fiscalPeriods;this.renderWeekNumber(fiscalPeriods);},convertFiscalPeriodsToDates:function(){var fiscalPeriods=RP.globals.getValue("CALENDAR").fiscalPeriods;if(Ext.isDate(fiscalPeriods[0].startDate)){return;}
Ext.each(fiscalPeriods,function(fiscalPeriod){fiscalPeriod.startDate=new Date(fiscalPeriod.startDate);fiscalPeriod.endDate=new Date(fiscalPeriod.endDate);});},findFiscalPeriod:function(fiscalPeriods,dates){for(var i=0;i<dates.getCount();i++){var date=new Date(dates.item(i).dom.dateValue);for(var j=0;j<fiscalPeriods.length;j++){if(date.between(fiscalPeriods[j].startDate,fiscalPeriods[j].endDate)){return{fiscalPeriodIdx:j,beginWeek:date};}}}
return{fiscalPeriodIdx:null,beginWeek:null};},renderWeekNumber:function(fiscalPeriods){for(var i=0;i<this.weekCells.getCount();i++){var weekNumber="&nbsp;";var weekCell=this.weekCells.item(i);var dates=weekCell.parent().parent().select('.x-date-date');var fiscalContext=this.findFiscalPeriod(fiscalPeriods,dates);var beginOfWeek=fiscalContext.beginWeek;var fiscalPeriodIdx=fiscalContext.fiscalPeriodIdx;if(fiscalPeriodIdx!==null){var fiscalPeriod=fiscalPeriods[fiscalPeriodIdx];var offset=fiscalPeriod.startDate.getDayOfYear();var weekOffset=this.determineBeginningOfYearWeekOffset(this.startDay,fiscalPeriod);var dayOfYear=beginOfWeek.getDayOfYear();if(dayOfYear<offset){dayOfYear+=365+(fiscalPeriod.startDate.isLeapYear()||fiscalPeriod.endDate.isLeapYear()?1:0);}
weekNumber=Math.floor((dayOfYear-offset)/7)+1+weekOffset;if(this.endOfFiscalYearInRow(weekCell.parent(),fiscalPeriod)&&this.startOfFiscalYearInRow(weekCell.parent(),fiscalPeriods[fiscalPeriodIdx+1])){weekNumber+="/1";}
else if(this.startOfFiscalYearInRow(weekCell.parent(),fiscalPeriods[fiscalPeriodIdx])){weekNumber="1";}}
weekCell.child("span").update(weekNumber.toString());}},determineBeginningOfYearWeekOffset:function(startDayOfWeek,fiscalPeriod){var dayOfWeek=fiscalPeriod.startDate.getDay();if(startDayOfWeek!=dayOfWeek){return 1;}
return 0;},_checkFiscalYear:function(weekRow,fiscalPeriod,checkFn){var dates=weekRow.parent().select('.x-date-date');if(fiscalPeriod){for(var i=0;i<dates.getCount();i++){var currentDateTime=dates.item(i).dom.dateValue;if(checkFn.call(this,fiscalPeriod,currentDateTime)){return true;}}}
return false;},endOfFiscalYearInRow:function(weekRow,fiscalPeriod){return this._checkFiscalYear(weekRow,fiscalPeriod,function(fiscalPeriod,dateTime){if(fiscalPeriod.endDate.getTime()===dateTime){return true;}
return false;});},startOfFiscalYearInRow:function(weekRow,fiscalPeriod){return this._checkFiscalYear(weekRow,fiscalPeriod,function(fiscalPeriod,dateTime){if(fiscalPeriod.startDate.getTime()===dateTime){return true;}
return false;});},onFiscalWeekClick:function(event,target){this.handleDateClick(event,Ext.fly(target).parent().next().down(".x-date-date").dom);}});Ext.reg("rpfiscaldatepicker",RP.FiscalDatePicker);
RP.Exception=Ext.extend(Ext.Error,{name:"RP.Exception",constructor:function(message,innerError){Ext.apply(this,{message:message,innerError:innerError});RP.Exception.superclass.constructor.call(this);},getInnerError:function(){return this.innerError;}});
Ext.layout.ContainerLayout.prototype.setContainer=Ext.layout.ContainerLayout.prototype.setContainer.createSequence(function(ct)
{if(ct)
{ct.fireEvent("rpux-layoutassign",this);}});
Ext.override(Ext.DatePicker,{beforeDestroy:function()
{if(this.rendered)
{if(this.keyNav)
{this.keyNav.disable();this.keyNav=null;}
Ext.destroy(this.leftClickRpt,this.rightClickRpt,this.monthPicker,this.eventEl,this.mbtn,this.todayBtn);}}});
Ext.ns("RP.ux");RP.ux.Store=Ext.extend(Ext.data.Store,{isLoaded:false,constructor:function(config)
{RP.ux.Store.superclass.constructor.apply(this,arguments);if(config.trackDeletedRecords)
{this._deletedRecords=[];this.on("remove",function(store,rec,index)
{this._deletedRecords.push(rec);},this);this.on("load",function()
{delete this._deletedRecords;this._deletedRecords=[];},this);}
this.on("load",function(){this.isLoaded=true;},this);},getDeletedRecords:function()
{return this._deletedRecords;}});
Ext.override(Ext.util.MixedCollection,{keyOf:function(item)
{for(var key in this.map)
{if(this.map[key]===item)
{return key;}}
return null;},trimAt:function(index)
{if(index<this.length&&index>=0)
{var count=this.length-index;this.items.splice(index,count);this.length-=count;this.keys.splice(index,count);}}});
Ext.ns("Ext.ux");Ext.ux.IFrameComponent=Ext.extend(Ext.BoxComponent,{onRender:function(ct,position)
{this.el=ct.createChild({tag:'iframe',id:'iframe-'+this.id,frameBorder:0,src:this.url});}});
Ext.Element.addMethods(function(){var defaultMaskColor="#000";var defaultMaskOpacity=0.97;var defaultZIndex=50000;var oldSetOpacity=Ext.Element.prototype.setOpacity;return{setOpacity:function(opacity,animate){var s=this.dom.style;if((!animate||!this.anim)&&Ext.isIE9){s.opacity=opacity;return this;}
else{return oldSetOpacity.apply(this,arguments);}},maskEx:function(msg,msgCls,opacity,color){color=color||defaultMaskColor;opacity=opacity||defaultMaskOpacity;var m=this.mask(msg,msgCls);m.setStyle("background-color",color);m.setStyle("opacity",opacity);m.setStyle("z-index",defaultZIndex);},selectable:function(){this.dom.unselectable="off";this.removeClass('x-unselectable');this.setStyle({'-moz-user-select':'','-khtml-user-select':''});},isEmpty:function(){var html=this.dom.innerHTML.trim();return html==""||html=="&nbsp;";}};}());Ext.Element.prototype.getAttribute=(Ext.isIE&&!Ext.isIE9)?function(name,ns){var d=this.dom,type=typeof d[ns+":"+name];if(['undefined','unknown'].indexOf(type)==-1){return d[ns+":"+name];}
return d[name];}:function(name,ns){var d=this.dom;return d.getAttributeNS(ns,name)||d.getAttribute(ns+":"+name)||d.getAttribute(name)||d[name];};
Ext.override(Ext.grid.GridView,{renderRowsForExport:function(startRow,endRow,includeColumnDelegate){var g=this.grid,cm=g.colModel,dataStore=g.store,stripe=g.stripeRows;var colCount=cm.getColumnCount();if(dataStore.getCount()<1){return'';}
var columnData=this.getColumnData();startRow=startRow||0;endRow=!Ext.isDefined(endRow)?dataStore.getCount()-1:endRow;var records=dataStore.getRange(startRow,endRow);var pushColumn=true;var evaluateColumn=false;if(includeColumnDelegate!==null&&typeof includeColumnDelegate==="function"){evaluateColumn=true;}
var groupField;var groups=[];if(typeof dataStore.groupField!=="undefined"){groupField=dataStore.getGroupState();groups=[];}
var rows=[];for(var j=0;j<records.length;j++){var record=records[j];var row=[];for(var i=0;i<colCount;i++){var column=columnData[i];if(evaluateColumn){pushColumn=includeColumnDelegate.call(this,column);}
if(pushColumn){if(typeof dataStore.groupField!=="undefined"){var groupValue=record.data[groupField];if(typeof groupValue!=="undefined"&&groups.indexOf(groupValue)===-1){groups.push(groupValue);rows.push(String.format("\"{0}\"",groupValue));}}
var columnString=column.renderer.call(column.scope,record.data[column.name],column,record,j,i,dataStore);var div=document.createElement("div");div.innerHTML=columnString;columnString=div.textContent||div.innerText||"";if(typeof columnString==="string"){columnString=columnString.replace(/\"/g,"\\\"");}
row.push(String.format("\"{0}\"",columnString));}}
rows.push(row.join(","));}
return rows.join("\n");},isHideableColumn:function(c){return!c.hidden&&c.hideable!==false;}});
Ext.data.Field=function(config){if(typeof config==="string"){config={name:config};}
Ext.apply(this,config);var types=Ext.data.Types;if(this.type){if(Ext.isString(this.type)){this.type=Ext.data.Types[this.type.toUpperCase()]||types.AUTO;}}
else{this.type=types.AUTO;}
var st=Ext.data.SortTypes;if(typeof this.sortType==="string"){this.sortType=st[this.sortType];}
if(!this.sortType){switch(this.type.type){case"string":this.sortType=st.asUCString;break;case"date":this.sortType=st.asDate;break;default:this.sortType=this.type.sortType;}}
var stripRe=/[\$,%]/g;var msdateRe=/\/Date\((-?\d+)\)\//;var convertStringToDate=function(v){if(!v){return'';}
if(v instanceof Date){return v;}
if((/T(\d{2}):(\d{2})/).test(v)){return new Date(v);}
var match=v.match(msdateRe);if(match!==null&&match.length>1){return new Date(parseInt(v.replace(msdateRe,'$1'),10));}
if(dateFormat){if(dateFormat==="timestamp"){return new Date(v*1000);}
if(dateFormat==="time"){return new Date(parseInt(v,10));}
return Date.parseTime(v,dateFormat);}
var parsed=Date.parse(v);return parsed?new Date(parsed):null;};if(!this.convert){var cv,dateFormat=this.dateFormat;switch(this.type.type){case"":case"auto":case undefined:cv=function(v){return v;};break;case"string":cv=function(v){return(v===undefined||v===null)?'':String(v);};break;case"integer":case"int":cv=function(v){return v!==undefined&&v!==null&&v!==''?parseInt(String(v).replace(stripRe,""),10):'';};break;case"float":cv=function(v){return v!==undefined&&v!==null&&v!==''?parseFloat(String(v).replace(stripRe,""),10):'';};break;case"bool":case"boolean":cv=function(v){return v===true||v==="true"||v===1;};break;case"date":cv=function(v){return convertStringToDate(v);};break;case"time":cv=function(v){var dt=convertStringToDate(v);if(!dt||dt===''){return'';}
return dt.formatTime();};break;case"datestring":cv=function(v){var dt=convertStringToDate(v);if(!dt||dt===''){return'';}
return dt.formatDate(RP.core.Formats.Date.FullDateTime);};break;default:cv=this.type.convert;break;}
this.convert=cv;}};Ext.data.Field.prototype={dateFormat:null,defaultValue:"",mapping:null,sortType:null,sortDir:"ASC"};
Ext.form.VTypes.emailMask=/[a-z0-9_\.\-@\+!#\$\%\&\'\*\/=\?\^_`\{\|\}\~]/i;
Ext.Template.prototype.apply=Ext.Template.prototype.apply.createInterceptor(function(values){if(Ext.isFunction(this.rpBeforeApplyFn)){this.rpBeforeApplyFn(values);}
return true;});
Ext.History=(function(){function needIFrameHack(){return Ext.isIE&&!Ext.isIE8;}
var iframe,hiddenField;var ready=false;var currentToken;function getHash(){var href=window.location.href,i=href.indexOf("#");return i>=0?href.substr(i+1):null;}
function cleanHashMark(token){var i=token.indexOf("#");return i>=0?token.substr(i+1):token;}
function doSave(){hiddenField.value=currentToken;}
function handleStateChange(token){currentToken=token;Ext.History.fireEvent('change',token);}
function updateIFrame(token){var html=['<html><body><div id="state">',cleanHashMark(token),'</div></body></html>'].join('');try{var doc=iframe.contentWindow.document;doc.open();doc.write(html);doc.close();return true;}
catch(e){logger.logError(new RP.Exception("[History] Write iframe failed",e));return false;}}
function checkIFrame(){if(!iframe.contentWindow||!iframe.contentWindow.document){setTimeout(checkIFrame,10);return;}
var doc=iframe.contentWindow.document;var elem=doc.getElementById("state");var token=elem?elem.innerText:null;var hash=getHash();setInterval(function(){doc=iframe.contentWindow.document;elem=doc.getElementById("state");var newtoken=elem?elem.innerText:null;var newHash=getHash();if(newtoken!==token){token=newtoken;handleStateChange(token);window.location.hash=token;hash=token;doSave();}
else if(newHash!==hash){hash=newHash;updateIFrame(newHash);}},50);ready=true;Ext.History.fireEvent('ready',Ext.History);}
function startUp(){currentToken=hiddenField.value?hiddenField.value:getHash();if(needIFrameHack()){checkIFrame();}
else{var hash=getHash();setInterval(function(){var newHash=getHash();if(newHash!==hash){hash=newHash;handleStateChange(hash);doSave();}},50);ready=true;Ext.History.fireEvent('ready',Ext.History);}}
return{fieldId:'x-history-field',iframeId:'x-history-frame',events:{},init:function(onReady,scope){if(ready){Ext.callback(onReady,scope,[this]);return;}
if(!Ext.isReady){Ext.onReady(function(){Ext.History.init(onReady,scope);});return;}
hiddenField=Ext.getDom(Ext.History.fieldId);if(needIFrameHack()){iframe=Ext.getDom(Ext.History.iframeId);}
this.addEvents('ready','change');if(onReady){this.on('ready',onReady,scope,{single:true});}
startUp();},add:function(token,preventDup){if(preventDup!==false){if(this.getToken()==token){return true;}}
if(needIFrameHack()){window.location.hash=token;return updateIFrame(token);}
else{window.location.hash=token;return true;}},back:function(){history.go(-1);},forward:function(){history.go(1);},getToken:function(){return ready?currentToken:getHash();}};})();Ext.apply(Ext.History,new Ext.util.Observable());
Ext.ns("RP.data");RP.data.JSONProxy=Ext.extend(Ext.data.HttpProxy,{request:function(action,rs,params,reader,callback,scope,arg){params=Ext.util.JSON.encode(params);callback=callback||this.loadResponse;this.conn.headers=RP.util.Object.mergeProperties(this.conn.headers||{},{"Content-Type":"application/json; charset=UTF-8"});RP.data.JSONProxy.superclass.request.apply(this,arguments);},loadResponse:function(o,success,response){if(response.status===401){window.location.reload();}
RP.data.JSONProxy.superclass.loadResponse.apply(this,arguments);}});Ext.data.AspNetAjaxHttpProxy=RP.data.JSONProxy;
Ext.ns("RP.form");RP.form.DateField=Ext.extend(Ext.form.DateField,{initComponent:function(){if(!this.initialConfig.invalidText){Ext.apply(this,{invalidText:RP.getMessage("rp.common.misc.InvalidDate")});}
RP.form.DateField.superclass.initComponent.call(this);},onTriggerClick:function(){if(Ext.isEmpty(this.menu)&&this.showFiscal===true){this.menu=new RP.menu.DateMenu({showFiscal:this.showFiscal});this.startDay=this.menu.picker.startDay;}
RP.form.DateField.superclass.onTriggerClick.apply(this,arguments);}});Ext.ns("RP.ui");RP.ui.DateField=RP.form.DateField;Ext.reg("rpdatefield",RP.form.DateField);
Ext.ns("RP.form");RP.form.DirectionalDateField=Ext.extend(Ext.Container,{initComponent:function(){this._state={};this._state.dayInterval=this.initialConfig.dayInterval||1;this.addEvents("select");this._lastSelectedValue=this.initialConfig.value;this._state.dateField=this._createDateField();Ext.apply(this,{autoEl:{},cls:this.initialConfig.cls||'rp-datepicker',disabledClass:"",width:this.initialConfig.width||145,layout:"column",items:this._getDatePickerItems()});if(Ext.isDefined(this.extraCls)){this.addClass(this.extraCls);}
RP.form.DirectionalDateField.superclass.initComponent.call(this);},_createDateField:function(){var staticConfig={xtype:this.initialConfig.dateFieldXtype||"rpdatefield",allowBlank:false,enableKeyEvents:true,value:this.initialConfig.value,disabled:this.initialConfig.disabled,maxValue:this.initialConfig.maxValue,emptyText:this.initialConfig.emptyText||RP.getMessage("rp.common.misc.EmptyDateText"),listeners:this._getDateFieldListeners()};Ext.applyIf(staticConfig,this.initialConfig);var datefield=Ext.ComponentMgr.create(staticConfig);datefield.blankText=RP.getMessage("rp.common.misc.MissingDate");datefield.on("afterrender",this.onAfterRender,this);datefield.originalOnTriggerClick=datefield.onTriggerClick;datefield.onTriggerClick=this.onNewTriggerClick.createDelegate(this);datefield.on("select",function(df,date){var parsedDate=RP.Formatting.Dates.parse(this._state.dateField.getRawValue(),RP.core.Formats.Date.Medium);if((typeof(date)==="object")||!isNaN(parsedDate)){var newDate=this._state.dateField.getValue();if((!Ext.isDate(this._lastSelectedValue)&&Ext.isDate(newDate))||(Ext.isDate(newDate)&&newDate.getTime()!==this._lastSelectedValue.getTime())){this.fireEvent("select",this,newDate);this._lastSelectedValue=newDate.clone();}}},this);datefield.safeParse=function(value,format){if(/[gGhH]/.test(format.replace(/(\\.)/g,''))){return Date.parseDate(value,format);}
var parsedDate=Date.extParseDate(value+' '+this.initTime,format+' '+this.initTimeFormat);if(parsedDate){return parsedDate.clearTime();}};return datefield;},_getDateFieldListeners:function(){return{"afterrender":function(comp){comp.el.next("img").on("mousedown",function(e){e.preventDefault();});},"keydown":{scope:this,fn:function(datepicker,e){var key=e.getKey();if(key===e.ENTER||key===e.TAB){var enteredDate=this._state.dateField.parseDate(this._state.dateField.getRawValue());if(enteredDate){this._state.dateField.setValue(enteredDate);}
if(this._checkDateValueChanged(this._lastSelectedValue,datepicker.getValue())){datepicker.fireEvent("select");document.body.focus();}}}},"blur":{scope:this,fn:function(datepicker,e){if(this._checkDateValueChanged(this._lastSelectedValue,datepicker.getValue())){datepicker.fireEvent("select");document.body.focus();}}},"change":{scope:this,fn:function(datepicker,e){if(this._checkDateValueChanged(this._lastSelectedValue,datepicker.getValue())){datepicker.fireEvent("select");document.body.focus();}}}};},disable:function(){RP.form.DirectionalDateField.superclass.disable.call(this);Ext.iterate(this.items.keys,function(key){Ext.getCmp(key).disable();});this._state.dateField.disable();},enable:function(){RP.form.DirectionalDateField.superclass.enable.call(this);Ext.iterate(this.items.keys,function(key){Ext.getCmp(key).enable();});this._state.dateField.enable();},forward:function(){var date=this.getValue();if(typeof(date)==="object"){date.addDays(this._state.dayInterval);this.setValue(date);this.fireEvent("select",this,date);}},backward:function(){var date=this.getValue();if(typeof(date)==="object"){date.addDays(-this._state.dayInterval);this.setValue(date);this.fireEvent("select",this,date);}},getDateFieldComponent:function(){return this._state.dateField;},setValue:function(val){this._state.dateField.setValue(val);this._lastSelectedValue=val;},getValue:function(){return this._state.dateField.getValue();},_checkDateValueChanged:function(originalDate,newDate){if(!Ext.isDate(originalDate)){return true;}
var originalMS=originalDate.getTime();var newDateMS=Ext.isDate(newDate)?newDate.getTime():originalDate.getTime();return originalMS-newDateMS!==0;},_getDateField:function(){var field={bodyBorder:false,width:this.initialConfig.width-45||100,height:22,layout:"fit",maskDisabled:false,items:this._state.dateField};return field;},_getDatePickerItems:function(){var items=[];if(this._useNextPreviousButtons()){items.push(this._getNextPreviousButton('previous'));}
items.push(this._getDateField());if(this._useNextPreviousButtons()){items.push(this._getNextPreviousButton('next'));}
return items;},_getNextPreviousButton:function(direction){var iconCls=direction==='next'?'rp-next-btn':'rp-prev-btn';var handler=direction==='next'?this.forward:this.backward;var btn={xtype:"button",iconCls:iconCls,cls:"rp-raised-btn",scope:this,handler:handler};return btn;},_useNextPreviousButtons:function(){if(typeof this.initialConfig.useNextPreviousButtons!=='undefined'){if(!this.initialConfig.useNextPreviousButtons){return false;}}
return true;},onAfterRender:function(){this._state.dateField.trigger.on("mousedown",this.onTriggerMouseDown,this);this.el.repaint();},onTriggerMouseDown:function(){if(this._state.dateField.menu&&this._state.dateField.menu.isVisible()){this.hideDateMenu=true;}},onNewTriggerClick:function(){if(!this.hideDateMenu){this._state.dateField.originalOnTriggerClick();}
else{this.hideDateMenu=false;}}});Ext.ns("RP.ui");RP.ui.DatePicker=RP.form.DirectionalDateField;Ext.reg("rpdatepicker",RP.form.DirectionalDateField);
Ext.ns("RP.menu");RP.menu.DateMenu=Ext.extend(Ext.menu.DateMenu,{initComponent:function(){if(this.showFiscal===true){this.on('beforeshow',this.onBeforeShow,this);this.strict=(Ext.isIE7&&Ext.isStrict);if(this.strict){this.on('show',this.onShow,this,{single:true,delay:20});}
Ext.apply(this,{plain:true,showSeparator:false,items:this.picker=new RP.FiscalDatePicker(Ext.applyIf({internalRender:this.strict||!Ext.isIE,ctCls:'x-menu-date-item',id:this.pickerId},this.initialConfig))});this.picker.purgeListeners();Ext.menu.DateMenu.superclass.initComponent.call(this);this.relayEvents(this.picker,['select']);this.on('show',this.picker.focus,this.picker);this.on('select',this.menuHide,this);if(this.handler){this.on('select',this.handler,this.scope||this);}}
else{RP.menu.DateMenu.superclass.initComponent.call(this);}}});
Ext.ns("RP.interfaces");RP.interfaces.ITaskContext={_name:"ITaskContext",getConfig:Ext.emptyFn,subscribeStatusChange:Ext.emptyFn,unsubscribeStatusChange:Ext.emptyFn,fireStatusChange:Ext.emptyFn,getLocalContext:Ext.emptyFn};
Ext.ns("RP.interfaces");RP.interfaces.ITaskflow2={_name:"ITaskflow2",getTaskflowUIConfig:Ext.emptyFn,addInitListener:Ext.emptyFn,addPostInitListener:Ext.emptyFn,addTaskflowStartListener:Ext.emptyFn,addTaskCompletedListener:Ext.emptyFn,addTaskflowCompletedListener:Ext.emptyFn,setRebuildHandler:Ext.emptyFn,rebuild:Ext.emptyFn,isInitialized:Ext.emptyFn,isCompleted:Ext.emptyFn,initTaskflow:Ext.emptyFn,getTaskflowContext:Ext.emptyFn,mergeTaskflowContext:Ext.emptyFn,getTaskflowDescription:Ext.emptyFn,setTaskflowDescription:Ext.emptyFn,getDefaultTaskId:Ext.emptyFn,getTaskflowRoster:Ext.emptyFn,getTaskMetadata:Ext.emptyFn,createTaskWidgetConfig:Ext.emptyFn,startTaskflow:Ext.emptyFn,updateStatus:Ext.emptyFn,isTaskCompleted:Ext.emptyFn,setTaskCompleted:Ext.emptyFn,getTaskConfig:Ext.emptyFn};
Ext.ns("RP.interfaces");RP.interfaces.ITaskflowContainer2={_name:"ITaskflowContainer",getTaskflowName:Ext.emptyFn,ensureTaskflowInitialized:Ext.emptyFn,getTaskflow:Ext.emptyFn,onDeactivated:Ext.emptyFn,activateDefaultWidget:Ext.emptyFn,onWidgetClick:Ext.emptyFn,getWidgetByID:Ext.emptyFn,setBeforeAppActivateHandler:Ext.emptyFn,addApplicationActivatedHandler:Ext.emptyFn,addTaskflowCreationListener:Ext.emptyFn,removeTaskflowCreationListener:Ext.emptyFn,addTaskflowAbortHandler:Ext.emptyFn,setRebuildTaskflowHandler:Ext.emptyFn,getActiveWidget:Ext.emptyFn};
Ext.ns("RP.interfaces");RP.interfaces.IPrintSource={_name:"IPrintSource",getMarkupForPrinting:Ext.emptyFn};
Ext.ns("RP.interfaces");RP.interfaces.ITaskForm={_name:"ITaskForm",onActivate:Ext.emptyFn,onBeforeDeactivate:Ext.emptyFn,onDeactivate:Ext.emptyFn,setUrlHash:Ext.emptyFn,getUrlHash:Ext.emptyFn};
Ext.ns("RP.interfaces");RP.interfaces.ITaskWidget={_name:"ITaskWidget",setTaskId:Ext.emptyFn,getTaskId:Ext.emptyFn,setTaskflow:Ext.emptyFn,getTaskflow:Ext.emptyFn,initializeLocalContext:Ext.emptyFn,getEnabled:Ext.emptyFn,setEnabled:Ext.emptyFn,createTaskForm:Ext.emptyFn,getTaskForm:Ext.emptyFn,raiseWidgetClick:Ext.emptyFn,subscribeWidgetClick:Ext.emptyFn,unsubscribeWidgetClick:Ext.emptyFn,raiseWidgetChange:Ext.emptyFn,subscribeWidgetChange:Ext.emptyFn,unsubscribeWidgetChange:Ext.emptyFn,getTaskContext:Ext.emptyFn,setTaskContext:Ext.emptyFn,setActive:Ext.emptyFn};
Ext.ns("RP.collections");RP.collections.MixedCollection=Ext.extend(Ext.util.MixedCollection,{maxSize:undefined,constructor:function(config)
{RP.collections.MixedCollection.superclass.constructor.apply(this,[config]);if(config)
{if(typeof config.maxSize!=="undefined")
{this.maxSize=config.maxSize;this.on("add",function(index,o,key)
{if(this.length>this.maxSize)
{this.removeAt(0);}},this);}}},trimAt:function(index)
{if(index<this.length&&index>=0)
{var count=this.length-index;this.items.splice(index,count);this.length-=count;this.keys.splice(index,count);}}});
Ext.namespace("RP.collections");RP.collections.Stack=function()
{this._s=[];};RP.collections.Stack.prototype={push:function()
{this._s.push.apply(this._s,arguments);},pop:function()
{var v=this.popn(1);if(v.length>0)
{return v[0];}
else
{return null;}},popn:function(n)
{n=(typeof n==="undefined")?1:n;n=Math.min(n,this._s.length);if(n>0)
{return this._s.splice(this._s.length-n,n).reverse();}
else
{return[];}},peek:function()
{var v=this.peekn(1);if(v.length>0)
{return v[0];}
else
{return null;}},peekn:function(n)
{n=(typeof n==="undefined")?1:n;n=Math.min(n,this._s.length);if(n>0)
{return this._s.slice(this._s.length-n,this._s.length).reverse();}
else
{return[];}},clear:function()
{this._s=[];},count:function()
{return this._s.length;},countUntil:function(item)
{for(var i=this._s.length-1;i>=0;i--)
{if(this._s[i]===item)
{return(this._s.length-i-1);}}
return-1;},contains:function(item)
{return(this.countUntil(item)>=0);}};
Ext.ns("RP.util");RP.util.BreadCrumbTrail=Ext.extend(Ext.util.Observable,{constructor:function(config){Ext.apply(this,config);this.breadCrumbs=new Ext.util.MixedCollection();this.addEvents("add","clear","navigate");RP.util.BreadCrumbTrail.superclass.constructor.call(this,config);},add:function(breadCrumb){this.breadCrumbs.add(breadCrumb);breadCrumb.on("activate",function(){this.navigate(breadCrumb);},this);this.fireEvent("add",this,breadCrumb);},navigate:function(breadCrumb){var index=this.breadCrumbs.indexOf(breadCrumb);var last;while((last=this.breadCrumbs.last())!=breadCrumb){last.un("activate",this.navigate,this);this.breadCrumbs.remove(last);}
this.fireEvent("navigate",this,breadCrumb);},getCount:function(){return this.breadCrumbs.getCount();},getBreadCrumbs:function(){return this.breadCrumbs;},clear:function(){this.breadCrumbs.each(function(breadCrumb){breadCrumb.un("activate",this.navigate,this);});this.breadCrumbs.clear();this.fireEvent("clear");}});
RP.util.CardBreadCrumbTrail=Ext.extend(RP.util.BreadCrumbTrail,{spacerCfg:{xtype:"box",autoEl:{tag:"span",html:"&nbsp;&gt;&gt;&nbsp;"}},add:function(breadCrumb){RP.util.CardBreadCrumbTrail.superclass.add.apply(this,arguments);var card=breadCrumb.getCard();var layout=this.cardContainer.getLayout();this.cardContainer.add(card);var index=this.cardContainer.items.indexOf(card);if(Ext.isString(layout)){this.cardContainer.activeItem=index;}
else{layout.setActiveItem(index);}
this.renderBreadCrumbs(true);},navigate:function(breadCrumb){RP.util.CardBreadCrumbTrail.superclass.navigate.apply(this,arguments);var card=breadCrumb.getCard();var last;while((last=this.cardContainer.items.last())!=card){this.cardContainer.remove(last);}
var index=this.cardContainer.items.indexOf(card);this.cardContainer.getLayout().setActiveItem(index);this.renderBreadCrumbs(false);},renderBreadCrumbs:function(adding){if(!this.crumbContainer.rendered){this.crumbContainer.on("render",this.renderBreadCrumbs.createDelegate(this,[adding]));return;}
if(adding){if(this.breadCrumbs.getCount()>1){this.crumbContainer.add(this.spacerCfg);}
this.crumbContainer.add(this.breadCrumbs.last());}
else{var current;while((current=this.crumbContainer.items.last())!=this.breadCrumbs.last()){this.crumbContainer.remove(current);}}
this.crumbContainer.doLayout();this.deactiveateLastCrumb();},deactiveateLastCrumb:function(){this.breadCrumbs.each(function(crumb){if(crumb==this.breadCrumbs.last()){crumb.deactivate();}
else{crumb.reactivate();}},this);}});
Ext.ns("RP.util");RP.util.Object=(function()
{return{mergeProperties:function()
{var obj={};for(var i=0;i<arguments.length;i++)
{var currObj=arguments[i]||{};for(var property in currObj)
{obj[property]=currObj[property];}}
return obj;}};})();RP.mergeProperties=RP.util.Object.mergeProperties;
Ext.ns("RP.util");RP.util.DOM=(function()
{return{getOuterHTML:function(obj)
{var element;if(!obj)
{return null;}
element=document.createElement("div");element.appendChild(obj.cloneNode(true));return element.innerHTML;}};})();
Ext.ns("RP.util");RP.util.Format=function(){return{longDescRenderer:function(namespace,colnam){return function(value){return RP.core.CodeTranslator.getLongDesc(namespace,colnam,value);};}};}();
Ext.ns("RP.util");RP.util.Task=(function(){var count=0;var PIDs={};return{processQueue:function(array,fn,context,taskName,config){if(array.length<1){return;}
Ext.applyIf(config,{batchSize:1,timeout:10,batchCompleteCB:Ext.emptyFn,successCB:Ext.emptyFn,stoppedCB:Ext.emptyFn});var a=array.concat();var idx=0;var pid=(++count);PIDs[taskName]=pid;setTimeout(function(){if(PIDs[taskName]!==pid){config.stoppedCB.call(context,pid);return;}
for(var i=0;i<config.batchSize&&a.length>0;i++){var item=a.shift();fn.call(context,item,idx++);}
config.batchCompleteCB.call(context,pid);if(a.length>0){setTimeout(arguments.callee,config.timeout);}
else{config.successCB.call(context,pid);}},config.timeout);return pid;}};})();
Ext.ns("RP.util");RP.util.Stopwatch=(function()
{var _watches=[];var listeners=[];function invokeListeners(){Ext.each(listeners,function(d){d();});}
return{getWatch:function(id,startNow,desc)
{var watch=_watches[id];if(!watch)
{watch=new RP.util.Stopwatch.StopWatch(id,desc);}
if(startNow)
{watch.start();}
return watch;},clearAll:function()
{_watches=[];invokeListeners();},report:function(div)
{var reportobj=[];for(var i in _watches)
{if(typeof(_watches[i])==='function'){continue;}
var child=_watches[i];reportobj.push(child.report(true));}
var realdiv=document.getElementById(div);if(realdiv)
{realdiv.innerHTML="<table class='padded-table' border='1'><thead><tr><th>ID</th><th>Total (s)</th><th>Count</th><th>Description</th></tr></thead><tbody>"+
reportobj.join('')+"</tbody></table>";}
else
{return reportobj.join('');}
return'';},StopWatch:function(id,desc)
{if(_watches[id])
{throw new RP.Exception(id+" already exists");}
var count=0;var total=0;desc=desc||'N/A';var TimedEvent=function()
{var start=new Date();return{stop:function()
{var stop=new Date();this.duration=stop.getTime()-start.getTime();invokeListeners();}};};this.id=id;this.start=function()
{if(this.current)
{this.stop();}
this.current=new TimedEvent();};this.stop=function()
{if(this.current)
{this.current.stop();count++;total+=this.current.duration;this.current=null;invokeListeners();}};this.report=function(forTbl)
{if(forTbl)
{return"<tr><td>"+id+"</td><td>"+total/1000.0+"</td><td>"+count+"</td><td>"+desc+"</td></tr>";}
return"<div>StopWatch: <strong>"+id+"</strong> // "+"Total Duration: <strong>"+total/1000.0+"</strong> // "+"Count: <strong>"+count+"</strong></div>";};_watches[id]=this;return this;},addListener:function(handler){listeners.push(handler);},removeListener:function(handler){listeners.remove(handler);}};})();var stopwatch={};RP.util.DeprecationUtils.renameClass("stopwatch","RP.util.Stopwatch");
Ext.ns("RP.event");RP.event.AppEventManager=(function()
{var evtPool=new Ext.util.Observable();evtPool.addEvents([]);Ext.util.Observable.capture(evtPool,function(evtName)
{logger.logTrace("[AppEventManager] observed event fired: "+evtName);return true;},this);return{register:function(evtName,handler,scope,options)
{evtPool.on(evtName,handler,scope,options);},unregister:function(evtName,handler)
{evtPool.un(evtName,handler);},fire:function(evtName)
{var args=[];args[0]=evtName;for(var i=0;i<arguments.length;i++)
{args[i+1]=arguments[i];}
evtPool.fireEvent.apply(evtPool,args);},suspendEvents:function()
{logger.logTrace("[AppEventManager] Entering suspended state");evtPool.suspendEvents();},resumeEvents:function()
{logger.logTrace("[AppEventManager] Leaving suspended state");evtPool.resumeEvents();}};})();
Ext.ns("RP.event");RP.event.AppEventProxy=(function()
{var evtListenerDict={};var awakeListeners=[];var asleepListeners=[];var createSleepingListener=function(listener)
{return{listener:listener,q:[]};};var getOrCreateEventDictEntry=function(evtName)
{var e={};e.eventListeners=evtListenerDict[evtName];if(!e.eventListeners)
{e.isNew=true;e.eventListeners=[];evtListenerDict[evtName]=e.eventListeners;}
return e;};var findAwakeListener=function(listener,remove)
{for(var i=0;i<awakeListeners.length;i++)
{if(awakeListeners[i]===listener)
{if(remove)
{awakeListeners.splice(i,1);}
return listener;}}
return null;};var findAsleepListener=function(listener,remove)
{for(var i=0;i<asleepListeners.length;i++)
{if(asleepListeners[i].listener===listener)
{var al=asleepListeners[i];if(remove)
{asleepListeners.splice(i,1);}
return al;}}
return null;};var queueEvent=function(al,evtName,fn,removeDuplicateEvents)
{var dupidx=-1;if(removeDuplicateEvents)
{for(var i=0;i<al.q.length;i++)
{var qevt=al.q[i];if(qevt.evtname===evtName)
{dupidx=i;break;}}
if(dupidx>=0)
{al.q.splice(dupidx,1);}}
al.q.push({evtname:evtName,handler:fn});};var processQueuedEvents=function(al)
{Ext.each(al.q,function(qevt)
{qevt.handler();},this);};var findQueuedEvent=function(al,evtName,remove)
{var e=[];for(var i=0;i<al.q.length;i++)
{if(al.q[i].evtname===evtName)
{e.push(al.q[i]);if(remove)
{al.q.splice(i,1);i--;}}}
return e;};var findEventListener=function(e,listener,remove)
{for(var i=0;i<e.eventListeners.length;i++)
{if(e.eventListeners[i].listener===listener)
{var el=e.eventListeners[i];if(remove)
{e.eventListeners.splice(i,1);}
return el;}}
return null;};var eventHandler=function(evtName)
{var e=getOrCreateEventDictEntry(evtName);var origArgs=arguments;Ext.each(e.eventListeners,function(l)
{var fn=l.handler.createDelegate(l.handler,origArgs,false);if(findAwakeListener(l.listener,false))
{fn();}
else
{var al=findAsleepListener(l.listener,false);if(al)
{queueEvent(al,evtName,fn,l.removeDups);}}},this);};return{registerListener:function(listener,isAwake)
{if(findAsleepListener(listener,false)||findAwakeListener(listener,false))
{throw new RP.Exception("Listener already registered.");}
if(isAwake)
{awakeListeners.push(listener);}
else
{asleepListeners.push(createSleepingListener(listener));}},unregisterListener:function(listener)
{var l=findAsleepListener(listener,true);if(!l)
{l=findAwakeListener(listener,true);}
Ext.iterate(evtListenerDict,function(evtName,la,o){Ext.each(la,function(l){if(l.listener===listener){la.remove(l);return false;}
return true;},this);},this);},subscribe:function(evtName,listener,handler,removeDuplicateEvents)
{var e=getOrCreateEventDictEntry(evtName);if(!findEventListener(e,listener,false))
{e.eventListeners.push({listener:listener,handler:handler,removeDups:removeDuplicateEvents});}
if(e.isNew)
{RP.event.AppEventManager.register(evtName,eventHandler,this);}},unsubscribe:function(evtName,listener)
{var al=findAsleepListener(listener,false);if(al)
{findQueuedEvent(al,evtName,true);}
var e=getOrCreateEventDictEntry(evtName);findEventListener(e,listener,true);},setState:function(listener,isAwake)
{var i;if(isAwake)
{var al=findAsleepListener(listener,true);if(al)
{processQueuedEvents(al);awakeListeners.push(al.listener);}}
else
{var l=findAwakeListener(listener,true);if(l)
{asleepListeners.push(createSleepingListener(l));}}}};})();
var keyDown=function(e){if(e.ctrlKey&&e.shiftKey){if(e.getKey()===76){if(!Ext.getCmp("x-debug-browser")&&!this.disableDiagnosticsWindow){this.debugConsole=new RP.util.DebugConsole.Console();}
else{this.debugConsole.destroy();}
e.stopEvent();}
if(e.getKey()===83){logger.toggleLogToServer();e.stopEvent();}}};Ext.EventManager.on(document,'keydown',keyDown);Ext.onReady(function(){RP.event.AppEventManager.register(RP.upb.AppEvents.SessionExpired,function(){Ext.EventManager.un(document,'keydown',keyDown);},this);RP.event.AppEventManager.register(RP.upb.AppEvents.ActiveAgain,function(){Ext.EventManager.on(document,'keydown',keyDown);},this);if(RP.globals&&RP.globals.SERVER_TYPE==="production"){if(RP.upb&&RP.upb.AppEvents){RP.event.AppEventManager.register(RP.upb.AppEvents.Inactive,function(){this.disableDiagnosticsWindow=true;if(Ext.getCmp("x-debug-browser")){Ext.getCmp("x-debug-browser").destroy();}},window.document);RP.event.AppEventManager.register(RP.upb.AppEvents.ActiveAgain,function(){this.disableDiagnosticsWindow=false;},window.document);}}
Ext.apply(Ext,{log:function(){var debugConsole=Ext.getCmp("x-debug-browser");if(!debugConsole){debugConsole=new RP.util.DebugConsole.Console();}
debugConsole.logView.log.apply(debugConsole.logView,arguments);},logf:function(format,arg1,arg2,etc){Ext.log(String.format.apply(String,arguments));},dump:function(o){if(typeof o=='string'||typeof o=='number'||typeof o=='undefined'||Ext.isDate(o)){Ext.log(o);}
else if(!o){Ext.log("null");}
else if(typeof o!="object"){Ext.log('Unknown return type');}
else if(Ext.isArray(o)){Ext.log('['+o.join(',')+']');}
else{var b=["{\n"];for(var key in o){var to=typeof o[key];if(to!="function"&&to!="object"){b.push(String.format("  {0}: {1},\n",key,o[key]));}}
var s=b.join("");if(s.length>3){s=s.substr(0,s.length-2);}
Ext.log(s+"\n}");}},_timers:{},time:function(name){name=name||"def";Ext._timers[name]=new Date().getTime();},timeEnd:function(name,printResults){var t=new Date().getTime();name=name||"def";var v=String.format("{0} ms",t-Ext._timers[name]);Ext._timers[name]=new Date().getTime();if(printResults!==false){Ext.log('Timer '+(name=="def"?v:name+": "+v));}
return v;}});if(typeof console==='undefined'){console={log:Ext.log,error:Ext.log};}});
Ext.ns("RP.util.DebugConsole");RP.util.DebugConsole.Console=Ext.extend(Ext.Panel,{constructor:function(){Ext.apply(this,{id:'x-debug-browser'});RP.util.DebugConsole.Console.superclass.constructor.apply(this,arguments);},initComponent:function(){var console=this.createConsole();Ext.apply(this,{title:'Console',renderTo:Ext.getBody(),collapsible:true,animCollapse:false,style:'position:absolute;left:0;bottom:0;z-index:101',height:200,logView:console.logView,layout:'fit',tools:[{id:'close',scope:this,handler:function(){this.destroy();Ext.EventManager.removeResizeListener(this.handleResize,this);}}],items:console.tabPanel});RP.util.DebugConsole.Console.superclass.initComponent.call(this);this.on("afterlayout",function(){this.resizer=new Ext.Resizable(this.el,{minHeight:50,handles:"n",pinned:true,transparent:true,console:this,resizeElement:function(){var box=this.proxy.getBox();this.proxy.hide();this.console.setHeight(box.height);return box;}});Ext.EventManager.onWindowResize(this.handleResize,this);this.handleResize();},this);},createConsole:function(){var scriptPanel=new RP.util.DebugConsole.ScriptsPanel();var logView=new RP.util.DebugConsole.LogPanel();var tree=new RP.util.DebugConsole.DomTree();var compInspector=new RP.util.DebugConsole.ComponentInspector();var compInfoPanel=new RP.util.DebugConsole.ComponentInfoPanel();var storeInspector=new RP.util.DebugConsole.StoreInspector();var objInspector=new RP.util.DebugConsole.ObjectInspector();var logViewer=new RP.util.DebugConsole.LogViewer();var stopWatch=new RP.util.DebugConsole.StopWatchesPanel();var tabPanel=new Ext.TabPanel({activeTab:0,border:false,tabPosition:'bottom',items:[{title:'Log Viewer',layout:'fit',items:[logViewer]},{title:'Debug Console',layout:'border',items:[logView,scriptPanel]},{title:'HTML Inspector',layout:'border',items:[tree]},{title:'Component Inspector',layout:'border',items:[compInspector,compInfoPanel]},{title:'Object Inspector',layout:'border',items:[objInspector]},{title:'Data Stores',layout:'border',items:[storeInspector]},{title:'Stop Watch',layout:'fit',items:[stopWatch]}]});return{logView:logView,tabPanel:tabPanel};},handleResize:function(){var b=Ext.getBody();var size=b.getViewSize();if(size.height<b.dom.scrollHeight){size.width-=18;}
this.setWidth(size.width);}});
Ext.ns("RP.util.DebugConsole");RP.util.DebugConsole.ColumnNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{focus:Ext.emptyFn,renderElements:function(n,a,targetNode,bulkRender){this.indentMarkup=n.parentNode?n.parentNode.ui.getChildIndent():'';var t=n.getOwnerTree();var cols=t.columns;var bw=t.borderWidth;var c=cols[0];var buf=['<li class="x-tree-node"><div ext:tree-node-id="',n.id,'" class="x-tree-node-el x-tree-node-leaf ',a.cls,'">','<div class="x-tree-col" style="width:',c.width-bw,'px;">','<span class="x-tree-node-indent">',this.indentMarkup,"</span>",'<img src="',this.emptyIcon,'" class="x-tree-ec-icon x-tree-elbow"/>','<img src="',a.icon||this.emptyIcon,'" class="x-tree-node-icon',(a.icon?" x-tree-node-inline-icon":""),(a.iconCls?" "+a.iconCls:""),'" unselectable="on"/>','<a hidefocus="on" class="x-tree-node-anchor" href="',a.href?a.href:"#",'" tabIndex="1" ',a.hrefTarget?' target="'+a.hrefTarget+'"':"",'>','<span unselectable="on">',n.text||(c.renderer?c.renderer(a[c.dataIndex],n,a):a[c.dataIndex]),"</span></a>","</div>"];for(var i=1,len=cols.length;i<len;i++){c=cols[i];buf.push('<div class="x-tree-col ',(c.cls?c.cls:''),'" style="width:',c.width-bw,'px;">','<div class="x-tree-col-text">',(c.renderer?c.renderer(a[c.dataIndex],n,a):a[c.dataIndex]),"</div>","</div>");}
buf.push('<div class="x-clear"></div></div>','<ul class="x-tree-node-ct" style="display:none;"></ul>',"</li>");if(bulkRender!==true&&n.nextSibling&&n.nextSibling.ui.getEl()){this.wrap=Ext.DomHelper.insertHtml("beforeBegin",n.nextSibling.ui.getEl(),buf.join(""));}else{this.wrap=Ext.DomHelper.insertHtml("beforeEnd",targetNode,buf.join(""));}
this.elNode=this.wrap.childNodes[0];this.ctNode=this.wrap.childNodes[1];var cs=this.elNode.firstChild.childNodes;this.indentNode=cs[0];this.ecNode=cs[1];this.iconNode=cs[2];this.anchor=cs[3];this.textNode=cs[3].firstChild;}});
Ext.ns("RP.util.DebugConsole");RP.util.DebugConsole.ComponentInfoPanel=Ext.extend(Ext.Panel,{id:'x-debug-compinfo',region:'east',minWidth:200,split:true,width:350,border:false,autoScroll:true,layout:'anchor',style:'border-width:0 0 0 1px;',initComponent:function(){this.watchBox=new Ext.form.Checkbox({id:'x-debug-watchcomp',boxLabel:'Watch ComponentMgr',listeners:{check:function(cb,val){if(val){Ext.ComponentMgr.all.on('add',this.onAdd,this);Ext.ComponentMgr.all.on('remove',this.onRemove,this);}else{Ext.ComponentMgr.all.un('add',this.onAdd,this);Ext.ComponentMgr.all.un('remove',this.onRemove,this);}},scope:this}});this.tbar=new RP.ui.Toolbar({leftItems:[{text:'Clear',handler:this.clear,scope:this},'->',this.watchBox]});RP.util.DebugConsole.ComponentInfoPanel.superclass.initComponent.call(this);},onAdd:function(i,o,key){var markup=['<div style="padding:5px !important;border-bottom:1px solid #ccc;">','Added: '+o.id,'</div>'].join('');this.insertMarkup(markup);},onRemove:function(o,key){var markup=['<div style="padding:5px !important;border-bottom:1px solid #ccc;">','Removed: '+o.id,'</div>'].join('');this.insertMarkup(markup);},message:function(msg){var markup=['<div style="padding:5px !important;border-bottom:1px solid #ccc;">',msg,'</div>'].join('');this.insertMarkup(markup);},insertMarkup:function(markup){this.body.insertHtml('beforeend',markup);this.body.scrollTo('top',100000);},clear:function(){this.body.update('');this.body.dom.scrollTop=0;}});
Ext.ns("RP.util.DebugConsole");RP.util.DebugConsole.ComponentInspector=Ext.extend(Ext.tree.TreePanel,{enableDD:false,lines:false,rootVisible:false,animate:false,hlColor:'ffff9c',autoScroll:true,region:'center',border:false,initComponent:function(){this.bbar=new RP.ui.Toolbar({leftItems:[{text:'Refresh',handler:this.refresh,scope:this}],centerItems:[{xtype:'label',text:'Component Path: '},{xtype:'textfield',itemId:'componentPath',width:200},{xtype:'button',itemId:'validateButton',text:'Validate Component Path',scope:this,handler:this.validateComponentPath}],rightItems:[{xtype:'label',text:'JavaScript Path: '},{xtype:'textfield',itemId:'extPath',width:200}],centerWidth:500});RP.util.DebugConsole.ComponentInspector.superclass.initComponent.call(this);this.root=this.setRootNode(new Ext.tree.TreeNode({text:'Ext Components',component:Ext.ComponentMgr.all,leaf:false}));this.parseRootNode();this.on('dblclick',this.onDblClick,this);this.on('click',this.onClick,this);this.on('expandnode',this.onExpand,this);},createNode:function(n,c){var leaf=(c.items&&c.items.length>0);return n.appendChild(new Ext.tree.TreeNode({text:c.getItemId()+(c.getXType()?' [ '+c.getXType()+' ]':''),component:c,leaf:!leaf}));},createToolbarNode:function(n,c,text,accessorMethod){var leaf=true;return n.appendChild(new Ext.tree.TreeNode({text:text+(c.getXType()?' [ '+c.getXType()+' ]':''),accessorMethod:accessorMethod,component:c,leaf:!leaf}));},parseChildItems:function(n){var cn=n.attributes.component.items;if(cn){for(var i=0;i<cn.length;i++){if(!Ext.isFunction(cn.get)){continue;}
var c=cn.get(i);if(c.id!=this.id&&c.id!=this.bottomToolbar.id){var newNode=this.createNode(n,c);if(!newNode.leaf){this.parseChildItems(newNode);}}}}
var comp=n.attributes.component;var newBarNode=null;if(comp.tbar){newBarNode=this.createToolbarNode(n,comp.getTopToolbar(),"tbar",".getTopToolbar()");if(!newBarNode.leaf){this.parseChildItems(newBarNode);}}
if(comp.bbar){newBarNode=this.createToolbarNode(n,comp.getBottomToolbar(),"bbar",".getBottomToolbar()");if(!newBarNode.leaf){this.parseChildItems(newBarNode);}}
if(comp.fbar){newBarNode=this.createToolbarNode(n,comp.getFooterToolbar(),"fbar",".getFooterToolbar()");if(!newBarNode.leaf){this.parseChildItems(newBarNode);}}},parseRootNode:function(){var n=this.root;var cn=n.attributes.component.items;for(var i=0,c;cn[i];i++){c=cn[i];if(c.id!=this.id&&c.id!=this.bottomToolbar.id){if(!c.ownerCt){var newNode=this.createNode(n,c);if(!newNode.leaf){this.parseChildItems(newNode);}}}}},onDblClick:function(node,e){var oi=Ext.getCmp('x-debug-objinspector');oi.refreshNodes(node.attributes.component);oi.ownerCt.show();},onClick:function(node,event){if(node.attributes.component.el){node.attributes.component.el.frame("FF0000");}
var componentPath=this.getComponentPath(node);this.getBottomToolbar().getCenterBar().getComponent('componentPath').setValue(componentPath);var scriptPath;try{scriptPath=RP.util.DebugConsole.Path.parse(componentPath);}
catch(exception){scriptPath=exception.message;}
this.getBottomToolbar().getRightBar().getComponent('extPath').setValue(scriptPath);},onExpand:function(node){if(node.hasChildNodes()&&node.childNodes.length===1){node.firstChild.expand();}},validateComponentPath:function(){var path=this.getBottomToolbar().getCenterBar().getComponent('componentPath').getValue();var component=undefined;var scriptPath;try{scriptPath=RP.util.DebugConsole.Path.parse(path);component=eval(scriptPath);}
catch(exception){component=undefined;}
if(!(component instanceof Ext.Component)){this.showInvalidComponentBox("Invalid Component Path","The path you entered does not return a component");}
else{this.getBottomToolbar().getRightBar().getComponent('extPath').setValue(scriptPath);var oi=Ext.getCmp('x-debug-objinspector');oi.refreshNodes(component);if(component.el!==undefined&&!component.el.hasFxBlock()){component.el.frame("FF0000");}}},refresh:function(){while(this.root.firstChild){this.root.removeChild(this.root.firstChild);}
this.parseRootNode();var ci=Ext.getCmp('x-debug-compinfo');if(ci){ci.message('refreshed component tree - '+Ext.ComponentMgr.all.length);}},getComponentPath:function(treeNode){if(treeNode.isRoot){return"";}
else if(treeNode.parentNode.isRoot){return treeNode.attributes.component.getItemId();}
else if(treeNode.attributes.component.id.toLowerCase().indexOf("ext-comp")<0){return treeNode.attributes.component.id;}
else if(treeNode.attributes.component.itemId){return this.getComponentPath(treeNode.parentNode)+'/'+treeNode.attributes.component.getItemId();}
else if(treeNode.attributes.accessorMethod){return this.getComponentPath(treeNode.parentNode)+'/'+treeNode.attributes.accessorMethod;}
else{var parentPath=this.getComponentPath(treeNode.parentNode);if(parentPath.substr(parentPath.length-1)==="*"){return parentPath;}
else{return parentPath+'/*';}}},showInvalidComponentBox:function(title,message){var msgBox=Ext.MessageBox.show({title:title,msg:message,buttons:false,icon:Ext.MessageBox.INFO,closable:false});msgBox.getDialog().el.shadow.el.pause(1.2).fadeOut({remove:true});msgBox.getDialog().el.pause(1.2).fadeOut({callback:function(){msgBox.hide();}});}});
Ext.ns("RP.util.DebugConsole");RP.util.DebugConsole.ComponentNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{onOver:function(evt){RP.util.DebugConsole.ComponentNodeUI.superclass.onOver.call(this);var cmp=this.node.attributes.component;if(cmp.el&&cmp.el.mask&&cmp.id!='x-debug-browser'){try{cmp.el.mask();}catch(e){}}},onOut:function(evt){RP.util.DebugConsole.ComponentNodeUI.superclass.onOut.call(this);var cmp=this.node.attributes.component;if(cmp.el&&cmp.el.unmask&&cmp.id!='x-debug-browser'){try{cmp.el.unmask();}catch(e){}}}});
Ext.ns("RP.util.DebugConsole");RP.util.DebugConsole.DomTree=Ext.extend(Ext.tree.TreePanel,{enableDD:false,lines:false,rootVisible:false,animate:false,hlColor:'ffff9c',autoScroll:true,region:'center',border:false,initComponent:function(){RP.util.DebugConsole.DomTree.superclass.initComponent.call(this);var styles=false,hnode;var nonSpace=/^\s*$/;var html=Ext.util.Format.htmlEncode;var ellipsis=Ext.util.Format.ellipsis;var styleRe=/\s?([a-z\-]*)\:([^;]*)(?:[;\s\n\r]*)/gi;function findNode(n){if(!n||n.nodeType!=1||n==document.body||n==document){return false;}
var pn=[n],p=n;while((p=p.parentNode)&&p.nodeType==1&&p.tagName.toUpperCase()!='HTML'){pn.unshift(p);}
var cn=hnode;for(var i=0,len=pn.length;i<len;i++){cn.expand();cn=cn.findChild('htmlNode',pn[i]);if(!cn){return false;}}
cn.select();var a=cn.ui.anchor;this.getTreeEl().dom.scrollTop=Math.max(0,a.offsetTop-10);cn.highlight();return true;}
function nodeTitle(n){var s=n.tagName;if(n.id){s+='#'+n.id;}else if(n.className){s+='.'+n.className;}
return s;}
this.loader=new Ext.tree.TreeLoader();this.loader.load=function(n,cb){var isBody=n.attributes.node==document.body;var cn=n.attributes.node.childNodes;for(var i=0,c;cn[i];i++){c=cn[i];if(isBody&&c.id=='x-debug-browser'){continue;}
if(c.nodeType==1){n.appendChild(new RP.util.DebugConsole.HtmlNode({node:c}));}else if(c.nodeType==3&&!nonSpace.test(c.nodeValue)){n.appendChild(new Ext.tree.TreeNode({text:'<em>'+ellipsis(html(String(c.nodeValue)),35)+'</em>',cls:'x-tree-noicon'}));}}
cb();};this.root=this.setRootNode(new Ext.tree.TreeNode('Ext'));hnode=this.root.appendChild(new RP.util.DebugConsole.HtmlNode({node:document.getElementsByTagName('html')[0]}));}});
Ext.ns("RP.util.DebugConsole");RP.util.DebugConsole.HtmlNode=Ext.extend(Ext.tree.AsyncTreeNode,{cls:'x-tree-noicon',preventHScroll:true,constructor:function(){var leaf=!this.hasChild(arguments[0].node);var attr={text:this.renderNode(arguments[0].node,leaf),leaf:leaf,cls:'x-tree-noicon'};Ext.apply(this,{htmlNode:arguments[0].node,tagName:arguments[0].node.tagName.toLowerCase()});RP.util.DebugConsole.HtmlNode.superclass.constructor.call(this,attr);this.attributes.node=arguments[0].node;if(!leaf){this.on('expand',this.onExpand,this);this.on('collapse',this.onCollapse,this);}},html:Ext.util.Format.htmlEncode,ellipsis:Ext.util.Format.ellipsis,nonSpace:/^\s*$/,attrs:[{n:'id',v:'id'},{n:'className',v:'class'},{n:'name',v:'name'},{n:'type',v:'type'},{n:'src',v:'src'},{n:'href',v:'href'}],hasChild:function(n){for(var i=0,c;n.childNodes[i];i++){c=n.childNodes[i];if(c.nodeType==1){return true;}}
return false;},renderNode:function(n,leaf){var tag=n.tagName.toLowerCase();var s='&lt;'+tag;for(var i=0,len=this.attrs.length;i<len;i++){var a=this.attrs[i];var v=n[a.n];if(v&&!this.nonSpace.test(v)){s+=' '+a.v+'=&quot;<i>'+this.html(v)+'</i>&quot;';}}
var style=n.style?n.style.cssText:'';if(style){s+=' style=&quot;<i>'+this.html(style.toLowerCase())+'</i>&quot;';}
if(leaf&&n.childNodes.length>0){s+='&gt;<em>'+this.ellipsis(this.html(String(n.innerHTML)),35)+'</em>&lt;/'+tag+'&gt;';}else if(leaf){s+=' /&gt;';}else{s+='&gt;';}
return s;},refresh:function(highlight){var leaf=!hasChild(this.htmlNode);this.setText(renderNode(this.htmlNode,leaf));if(highlight){Ext.fly(this.ui.textNode).highlight();}},onExpand:function(){if(!this.closeNode&&this.parentNode){this.closeNode=this.parentNode.insertBefore(new Ext.tree.TreeNode({text:'&lt;/'+this.tagName+'&gt;',cls:'x-tree-noicon'}),this.nextSibling);}else if(this.closeNode){this.closeNode.ui.show();}},onCollapse:function(){if(this.closeNode){this.closeNode.ui.hide();}},render:function(bulkRender){RP.util.DebugConsole.HtmlNode.superclass.render.call(this,bulkRender);},highlightNode:function(){},highlight:function(){},frame:function(){this.htmlNode.style.border='1px solid #0000ff';},unframe:function(){this.htmlNode.style.border='';}});
Ext.ns("RP.util.DebugConsole");RP.util.DebugConsole.LogPanel=Ext.extend(Ext.Panel,{autoScroll:true,region:'center',border:false,style:'border-width:0 1px 0 0',initComponent:function(){Ext.apply(this,{renderTo:Ext.getBody()});RP.util.DebugConsole.LogPanel.superclass.initComponent.call(this);},log:function(){var markup=['<div style="padding:5px !important;border-bottom:1px solid #ccc;">',Ext.util.Format.htmlEncode(Array.prototype.join.call(arguments,', ')).replace(/\n/g,'<br/>').replace(/\s/g,'&#160;'),'</div>'].join(''),bd=this.body.dom;this.body.insertHtml('beforeend',markup);bd.scrollTop=bd.scrollHeight;},clear:function(){this.body.update('');this.body.dom.scrollTop=0;}});
Ext.ns("RP.util.DebugConsole");RP.util.DebugConsole.LogViewer=Ext.extend(Ext.Panel,{initComponent:function(){var tpl=new Ext.XTemplate('<tpl for=".">','<div class="rp-log {cls}">{message}</div>','</tpl>');this.pressedButtons=new Ext.util.MixedCollection();this.pressedButtons.addAll({TRACE:'TRACE',DEBUG:'DEBUG',WARNING:'WARNING',INFO:'INFO',ERROR:'ERROR',FATAL:'FATAL'});logger.getStore().suspendEvents(false);Ext.apply(this,{itemId:'logsTab',frame:false,autoScroll:true,bbar:new RP.ui.Toolbar(this.buildBottomBarSettings()),items:[{xtype:'dataview',itemSelector:"div.rp-log",itemId:'logMessagesPanel',store:logger.getStore(),emptyText:"No log messages to display",reserveScrollOffset:true,tpl:tpl,layout:'fit',id:'logger_out',frame:false,border:false}]});RP.util.DebugConsole.LogViewer.superclass.initComponent.call(this);this.mon(logger,"logtoservertoggled",this.logToServerHandler,this);this.on('afterlayout',function(){if(logger.getLogToServerURL()){this.getBottomToolbar().getRightBar().getComponent("logToServer").enable();}
else{logger.logTrace('[Diagnostic] getLogToServerURL not set');this.getBottomToolbar().getRightBar().getComponent("logToServer").disable();}
this.scrollToBottom();},this);logger.getStore().on("add",function(){this.scrollToBottom();},this);},logToServerHandler:function(){var button=this.getBottomToolbar().getRightBar().getComponent("logToServer");button.toggle(logger.getIsLogToServer(),true);if(logger.getIsLogToServer()){button.setIconClass('rp-debug-icon-check');}
else{button.setIconClass('rp-debug-icon-x');}},buildBottomBarSettings:function(){var settingItems={centerWidth:375,leftItems:["-",{xtype:'button',itemId:'refresh',text:'Refresh',iconCls:'rp-debug-icon-x',scope:this,enableToggle:true,toggleHandler:function(button,pressed){this.onToggleRefreshHandler(button,pressed);}},"-",{xtype:'button',itemId:'clear',text:'Clear',scope:this,handler:function(){this.onClear();}},"-"],centerItems:["-",{xtype:'button',text:'<div class="rp-log-t">Trace</div>',pressed:true,itemId:'trace',iconCls:'rp-debug-icon-check',enableToggle:true,listeners:{scope:this,toggle:function(button,pressed){this.onToggle(button,pressed);}}},"-",{xtype:'button',text:'<div class="rp-log-d">Debug</div>',pressed:true,itemId:'debug',iconCls:'rp-debug-icon-check',enableToggle:true,listeners:{scope:this,toggle:function(button,pressed){this.onToggle(button,pressed);}}},"-",{xtype:'button',text:'<div class="rp-log-i">Info</div>',pressed:true,itemId:'info',iconCls:'rp-debug-icon-check',enableToggle:true,listeners:{scope:this,toggle:function(button,pressed){this.onToggle(button,pressed);}}},"-",{xtype:'button',text:'<div class="rp-log-w">Warning</div>',pressed:true,itemId:'warning',iconCls:'rp-debug-icon-check',enableToggle:true,listeners:{scope:this,toggle:function(button,pressed){this.onToggle(button,pressed);}}},"-",{xtype:'button',text:'<div class="rp-log-e">Error</div>',pressed:true,itemId:'error',iconCls:'rp-debug-icon-check',enableToggle:true,listeners:{scope:this,toggle:function(button,pressed){this.onToggle(button,pressed);}}},"-",{xtype:'button',text:'<div class="rp-log-f">Fatal</div>',pressed:true,itemId:'fatal',iconCls:'rp-debug-icon-check',enableToggle:true,listeners:{scope:this,toggle:function(button,pressed){this.onToggle(button,pressed);}}},"-"],rightItems:["-",{xtype:"button",text:"Show Message IDs",itemId:"showMsgBtn",enableToggle:true,hidden:RP.globals.getValue("SERVER_TYPE")==="production",pressed:RP.locale.Dispatch.isMessageKeyEnabled(),listeners:{scope:this,toggle:this.onShowMessageButtonToggle}},{xtype:'button',text:'Log to Server',align:'left',itemId:'logToServer',buttonAlign:'left',enableToggle:true,pressed:logger.getIsLogToServer(),iconCls:this.getLogToServerIcon(),listeners:{toggle:function(button,pressed){if(pressed){button.setIconClass('rp-debug-icon-check');}
else{button.setIconClass('rp-debug-icon-x');}
logger.toggleLogToServer();}}},"-"]};return settingItems;},onShowMessageButtonToggle:function(button,pressed){if(pressed){Ext.util.Cookies.set("rp-showmessages",true,null,null);}
else{Ext.util.Cookies.clear("rp-showmessages");}
RP.util.Helpers.reload();},getLogToServerIcon:function(){var iconCls='rp-debug-icon-x';if(logger.getIsLogToServer()){iconCls='rp-debug-icon-check';}
return iconCls;},onToggle:function(button,pressed){if(pressed){this.pressedButtons.add(button.itemId.toUpperCase(),button.itemId.toUpperCase());button.setIconClass('rp-debug-icon-check');}
else{this.pressedButtons.removeKey(button.itemId.toUpperCase());button.setIconClass('rp-debug-icon-x');}
this.updateLoggerFilter(this.pressedButtons.getRange());},onToggleRefreshHandler:function(button,pressed){if(pressed===true){logger.getStore().resumeEvents();this.updateLoggerFilter(this.pressedButtons.getRange());this.scrollToBottom();button.setIconClass('rp-debug-icon-check');}
else{logger.getStore().suspendEvents(false);button.setIconClass('rp-debug-icon-x');}},onClear:function(){if(logger){logger.clearAll();}},updateLoggerFilter:function(levels){logger.filterBy(levels);if(logger.getStore().eventsSuspended){logger.getStore().resumeEvents();logger.getStore().fireEvent("datachanged");logger.getStore().suspendEvents(false);}},scrollToBottom:function(){var content=this.body;content.dom.scrollBottom=content.dom.scrollHeight-content.dom.offsetHeight;content.scroll("b",content.dom.scrollBottom,true);}});
Ext.ns("RP.util.DebugConsole");RP.util.DebugConsole.ObjectInspector=Ext.extend(Ext.tree.TreePanel,{id:'x-debug-objinspector',enableDD:false,lines:false,rootVisible:false,animate:false,hlColor:'ffff9c',autoScroll:true,region:'center',border:false,borderWidth:Ext.isBorderBox?0:2,cls:'x-column-tree',initComponent:function(){this.showFunc=false;this.toggleFunc=function(){this.showFunc=!this.showFunc;this.refreshNodes(this.currentObject);};this.bbar=new RP.ui.Toolbar({leftItems:[{text:'Show Functions',enableToggle:true,pressed:false,handler:this.toggleFunc,scope:this}]});Ext.apply(this,{title:' ',loader:new Ext.tree.TreeLoader(),columns:[{header:'Property',width:300,dataIndex:'name'},{header:'Value',width:900,dataIndex:'value'}]});RP.util.DebugConsole.ObjectInspector.superclass.initComponent.call(this);this.root=this.setRootNode(new Ext.tree.TreeNode({text:'Dummy Node',leaf:false}));if(this.currentObject){this.parseNodes();}},refreshNodes:function(newObj){this.currentObject=newObj;var node=this.root;while(node.firstChild){node.removeChild(node.firstChild);}
this.parseNodes();},parseNodes:function(){for(var o in this.currentObject){if(!this.showFunc){if(Ext.isFunction(this.currentObject[o])){continue;}}
this.createNode(o);}},createNode:function(o){return this.root.appendChild(new Ext.tree.TreeNode({name:o,value:this.currentObject[o],uiProvider:RP.util.DebugConsole.ColumnNodeUI,iconCls:'x-debug-node',leaf:true}));},onRender:function(){RP.util.DebugConsole.ObjectInspector.superclass.onRender.apply(this,arguments);this.headers=this.header.createChild({cls:'x-tree-headers'});var cols=this.columns,c;var totalWidth=0;for(var i=0,len=cols.length;i<len;i++){c=cols[i];totalWidth+=c.width;this.headers.createChild({cls:'x-tree-hd '+(c.cls?c.cls+'-hd':''),cn:{cls:'x-tree-hd-text',html:c.header},style:'width:'+(c.width-this.borderWidth)+'px;'});}
this.headers.createChild({cls:'x-clear'});this.headers.setWidth(totalWidth);this.innerCt.setWidth(totalWidth);}});
Ext.ns("RP.util.DebugConsole");RP.util.DebugConsole.Path=function(){var doParse=function(path){var chunks=path.split("/");pathPieces.push("window.Ext");addId(chunks[0]);for(var i=1;i<chunks.length;i++){if(chunks[i]==="*"){if(i+1<chunks.length&&chunks[i+1].indexOf("=")===-1){i++;addWildCardItemId(chunks[i]);}
else if(i+1>=chunks.length){throw new Error("Parse Error: Path cannot end with a '*' wildcard.");}}
else if(chunks[i].match("^\\..+")){addLiteral(chunks[i]);}
else if(chunks[i].match("^css=.+")){addCss(chunks[i]);}
else if(chunks[i].match("^xtype=.+")){addXtype(chunks[i]);}
else{addItemId(chunks[i]);}}
return pathString();};var pathString=function(){return pathPieces.join("");};var addId=function(id){if(id.charAt(0)!=="."){pathPieces.push(".getCmp('"+id+"')");}
else{pathPieces.push(id);}};var addItemId=function(itemId){pathPieces.push(".getComponent('"+itemId+"')");};var addLiteral=function(literal){pathPieces.push(literal);};var addCss=function(cssSelector){cssSelector=extractValue(cssSelector);var pathSoFar=pathString();var cssString=pathSoFar+".el.child('"+cssSelector+"').id";pathPieces=[];pathPieces.push("window.Ext.getCmp("+cssString+")");};var addWildCardItemId=function(itemId){pathPieces.push(".find('itemId', '"+itemId+"')[0]");};var addXtype=function(xtype){xtype=extractValue(xtype);pathPieces.push(".findByType('"+xtype+"')[0]");};var extractValue=function(typeValuePair){return typeValuePair.substring(typeValuePair.indexOf("=")+1);};var pathPieces=[];return{parse:function(path){pathPieces=[];return doParse(path);}};}();
Ext.ns("RP.util.DebugConsole");RP.util.DebugConsole.ScriptsPanel=Ext.extend(Ext.Panel,{id:'x-debug-scripts',region:'east',minWidth:200,split:true,width:350,border:false,layout:'anchor',style:'border-width:0 0 0 1px;',initComponent:function(){this.scriptField=new Ext.form.TextArea({anchor:'100% -26',style:'border-width:0;'});this.trapBox=new Ext.form.Checkbox({id:'console-trap',boxLabel:'Trap Errors',checked:true});this.toolbar=new RP.ui.Toolbar({leftItems:[{xtype:'button',text:'Run',scope:this,handler:this.evalScript},{xtype:'button',text:'Clear',scope:this,handler:this.clear},'->',this.trapBox,' ',' ']});this.items=[this.toolbar,this.scriptField];RP.util.DebugConsole.ScriptsPanel.superclass.initComponent.call(this);},evalScript:function(){var s=this.scriptField.getValue();var rt;if(this.trapBox.getValue()){try{rt=eval(s);Ext.dump(rt===undefined?'(no return)':rt);}catch(e){Ext.log(e.message||e.descript);}}else{rt=eval(s);Ext.dump(rt===undefined?'(no return)':rt);}},clear:function(){this.scriptField.setValue('');this.scriptField.focus();}});
Ext.ns("RP.util.DebugConsole");RP.util.DebugConsole.StopWatchesPanel=Ext.extend(Ext.Panel,{initComponent:function(){Ext.apply(this,{itemId:'stopWatchesTab',frame:false,bbar:new RP.ui.Toolbar(this.buildBottomBarSettings()),items:[{xtype:'panel',itemId:'stopWatchesMessagesPanel',layout:'fit',id:'stopwatch_out',frame:false,border:false}]});RP.util.DebugConsole.StopWatchesPanel.superclass.initComponent.call(this);this.on('afterlayout',function(){this.updateStopwatch();},this);},buildBottomBarSettings:function(){return{leftItems:["-",{xtype:'button',itemId:'refresh',text:'Refresh',iconCls:'rp-debug-icon-x',scope:this,enableToggle:true,toggleHandler:function(button,pressed){this.onToggleRefreshHandler(button,pressed);}},"-",{xtype:'button',itemId:'clear',text:'Clear',scope:this,handler:function(){this.onClear();}},"-"]};},onToggleRefreshHandler:function(button,pressed){if(pressed===true){this.updateStopwatch();RP.util.stopwatch.addListener(this.updateStopwatch.createDelegate(this,[true],false));button.setIconClass('rp-debug-icon-check');}
else{this.updateStopwatch();RP.util.stopwatch.removeListener(this.updateStopwatch.createDelegate(this,[true],false));button.setIconClass('rp-debug-icon-x');}},onClear:function(){if(RP.util.stopwatch){RP.util.stopwatch.clearAll();Ext.get('stopwatch_out').update('');}},updateStopwatch:function(){if(RP.util.stopwatch){RP.util.stopwatch.report('stopwatch_out');}}});
Ext.ns("RP.util.DebugConsole");RP.util.DebugConsole.StoreInspector=Ext.extend(Ext.tree.TreePanel,{enableDD:false,lines:false,rootVisible:false,animate:false,hlColor:'ffff9c',autoScroll:true,region:'center',border:false,initComponent:function(){this.bbar=new RP.ui.Toolbar({leftItems:[{text:'Refresh',handler:this.refresh,scope:this}]});RP.util.DebugConsole.StoreInspector.superclass.initComponent.call(this);this.root=this.setRootNode(new Ext.tree.TreeNode({text:'Data Stores',leaf:false}));this.on('click',this.onClick,this);this.parseStores();},parseStores:function(){var cn=Ext.StoreMgr.items;for(var i=0,c;cn[i];i++){c=cn[i];var childNode=this.root.appendChild(new Ext.tree.TreeNode({text:c.storeId+' - '+c.totalLength+' records',component:c,leaf:true}),this);}},onClick:function(node,e){var oi=Ext.getCmp('x-debug-objinspector');oi.refreshNodes(node.attributes.component);oi.ownerCt.show();},onExpand:function(node,event){node.attribute.component.each(function(record){childNode.appendChild({text:record.data,leaf:true});},this);},refresh:function(){while(this.root.firstChild){this.root.removeChild(this.root.firstChild);}
this.parseStores();}});
Ext.ns("RP.util");RP.util.Grid=(function()
{return{processColumnModel:function(cmodel,config)
{logger.logWarning("The method processColumnModel is deprecated and should not be used.");var cm=[];Ext.each(cmodel,function(c)
{cm.push(RP.util.Object.mergeProperties(c));},this);if(cm&&cm.length)
{for(var i=0,len=cm.length;i<len;i++)
{var col=cm[i];if(!col.name)
{col.name='col_'+i;}
col.id=col.name;col.dataIndex=col.name;if(col.renderer)
{col.renderer=eval(col.renderer);}
if(col.editor&&typeof(col.editor)==="string")
{col.editor=eval(col.editor);}}}
return cm;}};})();
Ext.ns("RP.util");RP.util.Helpers=function(){var sessionExpired=false;Ext.onReady(function(){RP.event.AppEventManager.register(RP.upb.AppEvents.SessionReauthenticated,function(){sessionExpired=false;});RP.event.AppEventManager.register(RP.upb.AppEvents.SessionExpired,function(){sessionExpired=true;});});return{logout:function(){RP.util.Helpers.redirect(RP.globals.getFullyQualifiedPath("LOGOUT"));},redirect:function(url,millis){(function(){try{window.location.assign(url);}
catch(e){}}).defer(millis||0);},redirectToLogin:function(){RP.util.Helpers.redirect(RP.globals.getFullyQualifiedPath("LOGIN"));},isReverseProxy:function(){return RP.util.Helpers.isExternalAuthentication();},isExternalAuthentication:function(){return RP.upb.PageBootstrapper.isExternallyAuthenticated();},isNativeLogin:function(){return RP.upb.PageBootstrapper.isNativeLogin();},reload:function(millis){(function(){window.location.reload();}).defer(millis||0);},markSessionForReAuthentication:function(){Ext.Ajax.requestWithTextParams({url:RP.globals.getFullyQualifiedPath('REAUTHENTICATE')});},keepSessionAlive:function(lastActivityMillis){Ext.Ajax.requestWithTextParams({url:RP.buildDataServiceUrl("rp","admin/sessionKeepAlive"),disableExceptionHandling:true,params:{lastActivity:lastActivityMillis||new Date().getTime()},success:function(){RP.event.AppEventManager.fire(RP.upb.AppEvents.KeepAliveSuccess,{});},failure:function(){RP.event.AppEventManager.fire(RP.upb.AppEvents.KeepAliveFailure,{});}});logger.logInfo("[Helpers] keepSessionAlive with lastActivityDate: "+lastActivityMillis);RP.event.AppEventManager.fire(RP.upb.AppEvents.KeepAlive,{});},isUserActive:function(successFn,failureFn,scope){Ext.Ajax.requestWithTextParams({url:RP.buildDataServiceUrl("rp","admin/isUserActive"),failure:failureFn,success:successFn,scope:scope});},isSessionExpired:function(){return sessionExpired;},openWindow:function(url,name,options){var opt=[];options=options||{};name=name||new Date().getTime().toString();Ext.iterate(options,function(key,value){opt.push(String.format("{0}={1}",key,value?1:0));});return window.open(url,name,opt.toString());}};}();
Ext.ns("RP.util");RP.util.CSSLoader=(function(){var downloaded=[];var includeCSS=function(url){if(Ext.isEmpty(downloaded[url])){var h=document.getElementsByTagName("HEAD")[0];var css=document.createElement("link");css.type="text/css";css.href=url;css.rel="stylesheet";h.appendChild(css);logger.logInfo("[CSSLoader] Loading CSS: "+url);downloaded[url]=1;}};var urlTransform=function(url,prefix){prefix=prefix&&RP.globals&&!Ext.isEmpty(RP.globals.getPath("STATIC"));if(prefix&&(url.indexOf("://")===-1)&&url.indexOf(RP.globals.getPath("STATIC"))!==0){url=RP.globals.getPath("STATIC")+url;}
if(url&&url.indexOf("{client-mode}">=0)){url=url.replace(/\{client-mode\}/g,(RP.globals.getValue("CLIENTMODE")==="src"?"debug":RP.globals.getValue("CLIENTMODE")));}
return url;};return{load:function(urls,prefixStaticURL){if(Ext.isEmpty(urls)){return;}
if(!Ext.isArray(urls)){urls=[urls];}
Ext.each(urls,function(url){url=urlTransform(url,prefixStaticURL);includeCSS(url);});}};})();
Ext.ns("RP.util");RP.util.DataStore=(function(){var prebuiltTransforms={};prebuiltTransforms.sum=function(r,t){var sum=0;Ext.each(t.columns,function(c){sum+=r[c];},this);return sum;};prebuiltTransforms.average=function(r,t){var sum=0;var cnt=0;Ext.each(t.columns,function(c){sum+=r[c];cnt++;},this);if(cnt===0){return NaN;}
return(sum/cnt);};var createTransforms=function(tDefs){var tArr=[];Ext.each(tDefs,function(t){if(Ext.isString(t.fn)){t.fn=prebuiltTransforms[t.fn];}
tArr.push(function(r){r[t.target]=t.fn(r,t,r._metaData);});});return tArr;};return{join:function(srcStoreCfgs,destStoreCfg){var store;var recs=new Ext.util.MixedCollection();var jrec,rec;var mapFn=function(r){rec=r;var pk=rec.get(srcStoreCfgs[i].pk);var jidx=recs.indexOfKey(pk.toString());if(jidx>=0){jrec=recs.itemAt(jidx);}
else{var data={};data[destStoreCfg.pk]=pk;jrec=new destStoreCfg.store.recordType(data);recs.add(pk.toString(),jrec);}
Ext.each(srcStoreCfgs[i].map,copyFn,this);};var copyFn=function(m){jrec.set(m.dest,rec.get(m.src));};for(var i=0;i<srcStoreCfgs.length;i++){store=srcStoreCfgs[i].store;store.each(mapFn,this);}
destStoreCfg.store.add(recs.getRange());},transpose:function(cfg){var transforms;if(Ext.isArray(cfg.source.transforms)){transforms=createTransforms(cfg.source.transforms);cfg.source.store.each(function(rec){Ext.each(transforms,function(tFn){tFn(rec.data);},this);},this);}
var recObjs=new Ext.util.MixedCollection();Ext.each(cfg.dest.pivots,function(p){var rec={};rec[cfg.dest.pivotColumn]=p.d;if(p.renderer){rec.renderer=p.renderer;}
if(p.metaData){rec._metaData=p.metaData;}
recObjs.add(p.s,rec);},this);cfg.source.store.each(function(d){var destCol=cfg.source.pivotMap(d.data[cfg.source.pivotColumn]);for(var srcColName in d.data){if(srcColName!==cfg.source.pivotColumn){var rowObj=recObjs.key(srcColName);if(rowObj){rowObj[destCol]=d.data[srcColName];}}}},this);transforms=undefined;if(Ext.isArray(cfg.dest.transforms)){transforms=createTransforms(cfg.dest.transforms);}
var recs=[];recObjs.each(function(r){if(transforms){Ext.each(transforms,function(tFn){tFn(r);},this);}
recs.push(new cfg.dest.store.recordType(r));},this);cfg.dest.store.add(recs);},getTransformFunction:function(name){return prebuiltTransforms[name];}};})();
Ext.ns("RP.util");RP.util.PageInactivityChecker=(function(){var handlers=[];var pollerID;var lastActivityTime;var timeOutSecs;var lastSessionKeepAlive;var sessionKeepAliveIntervalMillis=60000;var checkingUserActivity=false;var inactive=false;Ext.onReady(function(){RP.event.AppEventManager.register(RP.upb.AppEvents.ActiveAgain,function(){inactive=false;});RP.event.AppEventManager.register(RP.upb.AppEvents.Inactive,function(){inactive=true;});});var resetLastActivityTime=function(){lastActivityTime=new Date();};var resetLastSessionKeepAlive=function(){lastSessionKeepAlive=new Date();};var activityEventNames=['keydown','mouseover','mousemove'];var setHooks=function(timeOutInSecs){timeOutSecs=timeOutInSecs;lastActivityTime=new Date();lastSessionKeepAlive=new Date();Ext.each(activityEventNames,function(evtName){Ext.EventManager.on(document,evtName,resetLastActivityTime);});pollerID=window.setInterval(pollerFn,1000);logger.logInfo("[PageInactivityChecker] Inactivity checker started with timeout of "+timeOutSecs+" seconds.");};var releaseHooks=function(){if(pollerID){Ext.each(activityEventNames,function(evtName){Ext.EventManager.un(document,evtName,resetLastActivityTime);});window.clearInterval(pollerID);pollerID=undefined;logger.logInfo("[PageInactivityChecker] Inactivity checker stopped.");}};var triggerInactivityDialog=function(){checkingUserActivity=false;logger.logInfo("[PageInactivityChecker] Inactivity timeout occurred.");releaseHooks();Ext.each(handlers,function(h){h();});};var handleInactivityResponse=function(response,options){checkingUserActivity=false;var result;try{result=Ext.util.JSON.decode(response.responseText);}
catch(ex){releaseHooks();return;}
if(result&&Ext.isNumber(result.data)){var serverLastBrowserActivity=parseInt(result.data,10);var serverLastBrowserActivityElapsed=(new Date())-serverLastBrowserActivity;if(serverLastBrowserActivityElapsed>=(timeOutSecs*1000)){triggerInactivityDialog();return;}
if(lastActivityTime<serverLastBrowserActivity){lastActivityTime=serverLastBrowserActivity;}}
resetLastSessionKeepAlive();};var pollerFn=function(){var lastActivityElapsed=(new Date())-lastActivityTime;var lastSessionKeepAliveElapsed=(new Date())-lastSessionKeepAlive;if(lastActivityElapsed>=(timeOutSecs*1000)&&checkingUserActivity===false){RP.util.Helpers.isUserActive(handleInactivityResponse,triggerInactivityDialog,this);checkingUserActivity=true;}
else
if(lastSessionKeepAliveElapsed>=sessionKeepAliveIntervalMillis&&lastActivityElapsed<=sessionKeepAliveIntervalMillis){resetLastSessionKeepAlive();RP.util.Helpers.keepSessionAlive(lastActivityTime.getTime());}};return{_setSessionKeepAliveIntervalMillis:function(intervalMillis){sessionKeepAliveIntervalMillis=intervalMillis;},isInactive:function(){return inactive;},addHandler:function(h){handlers.push(h);},getTimeOutInSeconds:function(){return timeOutSecs;},removeHandler:function(h){handlers.remove(h);},start:function(timeOutInSecs){if(pollerID){logger.logInfo("[PageInactivityChecker] Checker already started.");return false;}
setHooks(timeOutInSecs);return true;},stop:function(){releaseHooks();}};})();
Ext.ns("RP.layout");RP.layout.CenteredFormLayout=Ext.extend(Ext.layout.FormLayout,{fieldTpl:(function(){var t=new Ext.Template('<div class="x-form-item {itemCls}" tabIndex="-1"><table style="margin: 0 auto;"><tr>','<td><label for="{id}" style="{labelStyle}" class="x-form-item-label">{label}{labelSeparator}</label></td>','<td><div class="x-form-element" id="x-form-el-{id}" style="{elementStyle}"></td>','</tr></table></div>');t.disableFormats=true;return t.compile();})(),setContainer:function(ct){RP.layout.CenteredFormLayout.superclass.setContainer.call(this,ct);if(!ct.hideLabels){Ext.apply(this,{labelStyle:'width:auto;',labelAdjust:0,elementStyle:'padding-left:0;'});}}});Ext.Container.LAYOUTS.centeredform=RP.layout.CenteredFormLayout;
Ext.ns("RP.core");RP.core.ClassOperations=function(){var errorFormatStr="The type {0} must implement the inherited abstract method {1}()";return{abstractFn:function(){throw new RP.Exception("RP.abstractFn() called directly.");},extend:function(baseClass,overrides){var derivedClass=Ext.extend(baseClass,overrides);var derivedPrototype=derivedClass.prototype;for(var field in derivedPrototype){if(derivedPrototype[field]===RP.abstractFn){var name=derivedPrototype._name||"[Unknown Class]";var msg=String.format(errorFormatStr,name,field);logger.logError(msg);throw new RP.Exception(msg);}}
return derivedClass;}};}();RP.abstractFn=RP.core.ClassOperations.abstractFn;RP.extend=RP.core.ClassOperations.extend;
Ext.ns("RP.core");RP.core.CodeTranslator=function(){var reader=new Ext.data.JsonReader({root:''},[{name:'colnam'},{name:'colval'},{name:'lngdsc'},{name:'short_dsc'}]);return{getRowValue:function(namespace,colnam,value,field){var store=Ext.StoreMgr.get(namespace+"."+colnam);var index=store.findExact('colval',value);if(index>-1){value=store.getAt(index).get(field);}
return value;},loadData:function(namespace,data){Ext.each(data,function(item){var storeId=namespace+"."+item.colnam;var store=Ext.StoreMgr.get(storeId);if(typeof store==="undefined"){store=new Ext.data.Store({storeId:storeId,reader:reader});}
store.loadData([item],true);});},loadCodePack:function(url){document.write('<script type="text/javascript" src="'+url+'"></script>');},getLongDesc:function(namespace,colnam,value){return this.getRowValue(namespace,colnam,value,"lngdsc");},getShortDesc:function(namespace,colnam,value){return this.getRowValue(namespace,colnam,value,"short_desc");},getStore:function(namespace,colnam){return Ext.StoreMgr.get(namespace+"."+colnam);}};}();
RP.core.Sundial={_offset:0,now:function(){return new Date(new Date().getTime()+this._offset);},setServerTime:function(offsetDate){this._offset=offsetDate.getTime()-(new Date()).getTime();},hasOffset:function(){return(this._offset!==0);}};var Sundial={};RP.util.DeprecationUtils.renameClass("Sundial","RP.core.Sundial");
Ext.ns("RP.core");RP.core.Interface=(function(){var checkInterface=function(obj,theInterface,map){var omember;map=map||{};for(var member in theInterface){if(member!=="_name")
{omember=map[member]||member;if(typeof obj[omember]!==typeof theInterface[member])
{throw new RP.Exception("Member '"+member+"' not implemented or implemented incorrectly in interface '"+theInterface._name+"'");}}}
return true;};var extractInterface=function(obj,iobj){var i={};var theInterface=iobj.i;var map=iobj.map;var omember;for(var member in theInterface){if(member!=="_name"){omember=map[member]||member;if(typeof obj[omember]==="function"){i[member]=obj[omember].createDelegate(obj);}
else{i[member]=obj[omember];}}}
return i;};return{implement:function(classRef,theInterface,map){if(!theInterface._name){throw new RP.Exception("Missing _name member in interface definition.");}
if((typeof classRef.prototype.__rpInterfaces!=="undefined")&&(typeof classRef.prototype.__rpInterfaces[theInterface._name]!=="undefined")){throw new RP.Exception(theInterface._name+" has already been implemented for class "+classRef.toString());}
if(!checkInterface(classRef.prototype,theInterface,map)){throw new RP.Exception("Interface not implemented.");}
if(!classRef.prototype.__rpInterfaces){classRef.prototype.__rpInterfaces={};}
classRef.prototype.__rpInterfaces[theInterface._name]={i:theInterface,map:Ext.apply({},map)};},get:function(obj,theInterface){if(!obj||!obj.__rpInterfaces){return undefined;}
var i=obj.__rpInterfaces[theInterface._name];if(!i){return undefined;}
return extractInterface(obj,i);}};})();RP.iimplement=RP.core.Interface.implement;RP.iget=RP.core.Interface.get;
Ext.ns("RP.core");RP.core.IntervalJN={getDuration:function(intervalJN){return intervalJN.End.deltaT(intervalJN.Start);},getCenter:function(intervalJN){return intervalJN.Start.clone().addMilliseconds((intervalJN.End.deltaT(intervalJN.Start).totalMilliseconds()/2));},containsTime:function(intervalJN,timePoint){return(timePoint.getTime()>=intervalJN.Start.getTime())&&(timePoint.getTime()<=intervalJN.End.getTime());},containsInterval:function(outerIntervalJN,innerIntervalJN2){return(RP.core.IntervalJN.containsTime(outerIntervalJN,innerIntervalJN2.Start))&&(RP.core.IntervalJN.containsTime(outerIntervalJN,innerIntervalJN2.End));},isOverlapping:function(intervalJN1,intervalJN2){return(intervalJN1.Start.isBefore(intervalJN2.End))&&(intervalJN1.End.isAfter(intervalJN2.Start));},isCoincident:function(intervalJN1,intervalJN2){return(intervalJN1.Start.equals(intervalJN2.Start)&&intervalJN1.End.equals(intervalJN2.End));},isContinuous:function(intervalJN1,intervalJN2){return(intervalJN1.Start.equals(intervalJN2.End)||intervalJN1.End.equals(intervalJN2.Start));},isPoint:function(interval){return interval.Start.equals(interval.End);},shiftByMinutes:function(intervalJN,minutesStart,minutesEnd){intervalJN.Start.addMinutes(minutesStart);if((typeof minutesEnd==="undefined")||(minutesEnd===null)){intervalJN.End.addMinutes(minutesStart);}
else{intervalJN.End.addMinutes(minutesEnd);}},canScaleByMinutes:function(intervalJN,durationDiffMinutes){var origDuration=RP.core.IntervalJN.getDuration(intervalJN).totalMinutes();return(origDuration+durationDiffMinutes>0);},scaleByMinutes:function(intervalJN,durationDiffMinutes){if(!RP.core.IntervalJN.canScaleByMinutes(intervalJN,durationDiffMinutes)){throw new RP.Exception("Invalid duration");}
RP.core.IntervalJN.shiftByMinutes(intervalJN,0,durationDiffMinutes);},cloneInterval:function(intervalJN){return{Start:intervalJN.Start.clone(),End:intervalJN.End.clone()};},formatInterval:function(interval,formatObj){if(interval===null||interval.Start===null||interval.End===null){return"";}
if(!formatObj){formatObj=RP.core.Formats.Time.Default;}
return String.format("{0} - {1}",interval.Start.formatDate(formatObj),interval.End.formatDate(formatObj));},parseTimeAfterBase:function(strTime,baseDate){var amPmSpec=this._parseAmPmSpec(strTime);var retDate=RP.core.IntervalJN.parseTime(strTime,baseDate,true);var expectedHours=retDate.getHours();while(baseDate.getTime()>retDate.getTime()||!this._validateAmPmSpec(amPmSpec,retDate)){var hoursToAdd=12;if(RP.Formatting.Dates.is12HLocale()===false){hoursToAdd=24;}
retDate.setHours(retDate.getHours()+hoursToAdd);}
this.adjustForDST(retDate,expectedHours);return retDate;},parseTime:function(strTime,datePart,accept2400){var nextDay=false;var ind=strTime.indexOf(":");var hhmm=[];if(ind!==-1){hhmm=strTime.split(":");if(hhmm.length>1){if(hhmm[0]==="24"&&(parseInt(hhmm[1],10)!==0)){throw new RP.Exception("Invalid time text");}}
if(parseInt(hhmm[0],10)>24){throw new RP.Exception("Invalid time text");}
if(hhmm[0]==="24"){if(accept2400===true){nextDay=true;strTime="0:00";}
else{throw new RP.Exception("24:00 cannot be used as the time");}}}
var retDate=RP.core.Format.parseTime(strTime);if(datePart instanceof Date){var newDate=datePart.clone();newDate.setHours(retDate.getHours(),retDate.getMinutes(),retDate.getSeconds());newDate.apExists=retDate.apExists;retDate=newDate;}
if(nextDay){retDate.addDays(1);}
return retDate;},_parseAmPmSpec:function(timeStr){var strTime=timeStr.toLowerCase();var meridiem=RP.Formatting.Dates.getUniqueLettersOfMeridiems();if(meridiem){if(strTime.indexOf(meridiem.am)!==-1){return meridiem.am;}
else if(strTime.indexOf(meridiem.pm)!==-1){return meridiem.pm;}}
return null;},_validateAmPmSpec:function(amPmSpec,time){var meridiem=RP.Formatting.Dates.getUniqueLettersOfMeridiems();if(meridiem){if((amPmSpec===meridiem.am)&&time.getHours()>=12){return false;}
if((amPmSpec===meridiem.pm)&&time.getHours()<12){return false;}}
return true;},parseTimeInterval:function(strInterval,datePart){var intervalText=String(strInterval);var times=intervalText.split("-");if(times.length!==2||times[0].trim().length===0||times[1].trim().length===0){throw new RP.Exception("Invalid interval text specified");}
var endAmPmSpec=this._parseAmPmSpec(times[1]);var retInterval={Start:RP.core.IntervalJN.parseTime(times[0],datePart),End:RP.core.IntervalJN.parseTime(times[1],datePart,true)};var expectedHours=RP.core.IntervalJN.parseTime(times[1],datePart,true).getHours();if((retInterval.Start!==null)&&(retInterval.End!==null)){while(retInterval.Start.getTime()>=retInterval.End.getTime()||!this._validateAmPmSpec(endAmPmSpec,retInterval.End)){retInterval.End.addHours(12);}
this.adjustForDST(retInterval.End,expectedHours);}
else{throw new RP.Exception("Invalid interval text specified");}
return retInterval;},parseBusinessDayTimeInterval:function(strInterval,dateTimeStart){var retInterval=RP.core.IntervalJN.parseTimeInterval(strInterval,dateTimeStart);if(retInterval.Start<dateTimeStart&&dateTimeStart.getHours()===0){retInterval.Start.addDays(1);retInterval.End.addDays(1);}
return retInterval;},adjustInterval:function(interval,offsetMinutes,offsetDuration){if(RP.core.IntervalJN.isValidOffset(offsetMinutes)){RP.core.IntervalJN.shiftByMinutes(interval,offsetMinutes);}
if(RP.core.IntervalJN.isValidOffset(offsetDuration)){RP.core.IntervalJN.scaleByMinutes(interval,offsetDuration);}},isValidOffset:function(number){return((typeof number!=="undefined")&&(number!==null)&&!isNaN(parseInt(number,10)));},compareDate:function(dt1,dt2){return dt1.getTime()-dt2.getTime();},compareStart:function(interval1,interval2){return(interval1.Start.getTime()-interval2.Start.getTime());},compareEnd:function(interval1,interval2){return(interval1.End.getTime()-interval2.End.getTime());},compareCenter:function(interval1,interval2){return(RP.core.IntervalJN.getCenter(interval1)-RP.core.IntervalJN.getCenter(interval2));},compareDuration:function(interval1,interval2){return(RP.core.IntervalJN.getDuration(interval1).getTotalMilliseconds()-RP.core.IntervalJN.getDuration(interval2).getTotalMilliseconds());},setParent:function(interval,parentSequence){interval.__parent=parentSequence;},getParent:function(interval){return interval.__parent;},setRule:function(interval,iRule){interval.__rule=iRule;},getRule:function(interval){return interval.__rule;},adjustForDST:function(endDateTime,expectedHours){var endHours=endDateTime.getHours()>=12?endDateTime.getHours()-12:endDateTime.getHours();expectedHours=expectedHours>=12?expectedHours-12:expectedHours;if(endHours!==expectedHours){if(endHours<expectedHours){endDateTime.addHours(1);}
else{endDateTime.addHours(-1);}}}};var IntervalJN={};RP.util.DeprecationUtils.renameClass("IntervalJN","RP.core.IntervalJN");
Ext.ns("RP.core");RP.core.SequenceJN={addInterval:function(sequence,interval,iRule){var retSeq=[];var isDisplacmentAdd=false;if(sequence.Start&&sequence.End){isDisplacmentAdd=!RP.core.IntervalJN.containsInterval(sequence,interval);}
if(sequence.__isBounded&&isDisplacmentAdd){throw new RP.Exception("interval is out of bounds for the bounded sequence");}
if(RP.core.IntervalJN.getParent(sequence)&&isDisplacmentAdd){RP.core.SequenceJN.removeInterval(RP.core.IntervalJN.getParent(sequence),sequence);}
sequence.__isSequence=true;RP.core.IntervalJN.setParent(interval,sequence);RP.core.IntervalJN.setRule(interval,iRule);var startIndex=RP.core.SequenceJN.getStartIndex(sequence,interval);var splitPair;for(var index=startIndex;index<=sequence.length;index++){splitPair=null;if(index===sequence.length){RP.core.SequenceJN._insertIntoSequence(sequence,interval,index);retSeq.push(interval);break;}
var curInterval=sequence[index];var curRule=RP.core.IntervalJN.getRule(curInterval);var nextInterval=this.getNextIntervalInSequence(sequence,index);var prevInterval=this.getPrevIntervalInSequence(sequence,index);var istart=interval.Start.getTime();if(istart>=curInterval.End.getTime()){continue;}
var cstart=curInterval.Start.getTime();if(istart<cstart){if(interval.End.getTime()<=cstart){RP.core.SequenceJN._insertIntoSequence(sequence,interval,index);retSeq.splice(index,0,interval);break;}
else if(iRule.canExtend&&iRule.canExtend(null,interval,curInterval)){interval=iRule.extend(null,interval,curInterval);RP.core.SequenceJN._insertIntoSequence(sequence,interval,index);retSeq.splice(index,0,interval);break;}
else if(iRule.canExtend&&iRule.canExtend(prevInterval,interval,null)){interval=iRule.extend(prevInterval,interval,null);index--;}
else if(curRule.canExtend&&curRule.canExtend(interval,curInterval,null)){curInterval=curRule.extend(interval,curInterval,null);sequence[index]=curInterval;retSeq.splice(index,0,curInterval);index--;}
else if(RP.core.SequenceJN._isUnboundedSequence(interval)){splitPair=this._splitSetParentAndRule(curRule,curInterval,interval.End,sequence);interval=iRule.merge(interval,splitPair.first);sequence.splice(index,1);RP.core.SequenceJN._insertIntoSequence(sequence,interval,index);sequence.splice(index+1,0,splitPair.last);break;}
else{splitPair=this._splitSetParentAndRule(iRule,interval,curInterval.Start,sequence);RP.core.SequenceJN._insertIntoSequence(sequence,splitPair.first,index);retSeq.splice(index,0,splitPair.first);interval=splitPair.last;}}
else if(RP.core.IntervalJN.compareStart(interval,curInterval)===0||curInterval.__isSequence)
{var compareEnd=RP.core.IntervalJN.compareEnd(interval,curInterval);if(RP.core.IntervalJN.compareDate(interval.Start,interval.End)===0){RP.core.SequenceJN._insertIntoSequence(sequence,interval,index);retSeq.splice(index,0,interval);break;}
else if(compareEnd===0){curInterval=curRule.merge(curInterval,interval);sequence[index]=curInterval;retSeq.splice(index,0,interval);break;}
else if(iRule.canExtend&&iRule.canExtend(curInterval,interval,null)){interval=iRule.extend(curInterval,interval,null);}
else if(iRule.canExtend&&iRule.canExtend(null,interval,nextInterval)){interval=iRule.extend(null,interval,nextInterval);index--;}
else if(curRule.canExtend&&curRule.canExtend(interval,curInterval,null)){curInterval=curRule.extend(interval,curInterval,null);sequence[index]=curInterval;retSeq.splice(index,0,curInterval);index--;}
else if(curRule.canExtend&&curRule.canExtend(null,curInterval,interval)){curInterval=curRule.extend(null,curInterval,interval);sequence[index]=curInterval;retSeq.splice(index,0,curInterval);}
else if(compareEnd<0&&!curInterval.__isSequence){splitPair=curRule.split(curInterval,interval.End);retSeq.splice(index,0,splitPair.first);splitPair.first=curRule.merge(splitPair.first,interval);splitPair=this._setParentAndRule(splitPair,sequence,curRule);sequence[index]=splitPair.first;sequence.splice(index+1,0,splitPair.last);retSeq.splice(index+1,0,splitPair.last);splitPair=undefined;break;}
else if(compareEnd<0&&curInterval.__isSequence){var r=curRule.merge(curInterval,interval);retSeq.splice(index,0,r);break;}
else if(compareEnd>0&&RP.core.SequenceJN._isUnboundedSequence(interval)){interval=iRule.merge(interval,curInterval);sequence[index]=interval;retSeq.splice(index,0,interval);if(index<sequence.length-1&&RP.core.IntervalJN.isOverlapping(interval,sequence[index+1])){curInterval=sequence[index+1];curRule=RP.core.IntervalJN.getRule(curInterval);splitPair=this._splitSetParentAndRule(curRule,curInterval,interval.End,sequence);interval=iRule.merge(interval,splitPair.first);sequence[index+1]=splitPair.last;}
break;}
else{splitPair=this._splitSetParentAndRule(iRule,interval,curInterval.End,sequence);retSeq.splice(index,0,splitPair.first);splitPair.first=curRule.merge(curInterval,splitPair.first);sequence[index]=splitPair.first;interval=splitPair.last;}}
else if(RP.core.SequenceJN._isUnboundedSequence(curInterval)&&RP.core.IntervalJN.compareEnd(interval,curInterval)<0){retSeq.splice(index,0,curRule.merge(curInterval,interval));break;}
else if(iRule.canExtend&&iRule.canExtend(curInterval,interval,null)){interval=iRule.extend(curInterval,interval,null);}
else if(iRule.canExtend&&iRule.canExtend(null,interval,nextInterval)){interval=iRule.extend(null,interval,nextInterval);index--;}
else if(curRule.canExtend&&curRule.canExtend(interval,curInterval,null)){curInterval=curRule.extend(interval,curInterval,null);sequence[index]=curInterval;retSeq.splice(index,0,curInterval);index--;}
else{splitPair=this._splitSetParentAndRule(curRule,curInterval,interval.Start,sequence);sequence[index]=splitPair.first;sequence.splice(index+1,0,splitPair.last);}}
RP.core.SequenceJN.updateSequenceProperties(sequence);if(RP.core.IntervalJN.getParent(sequence)&&isDisplacmentAdd){RP.core.SequenceJN.addInterval(RP.core.IntervalJN.getParent(sequence),sequence,RP.core.IntervalJN.getRule(sequence));}
return retSeq;},getNextIntervalInSequence:function(sequence,currIndex){var newIndex=currIndex+1;if(sequence.length<=newIndex){var currInterval=sequence[currIndex];return{Start:currInterval.End,End:currInterval.End};}
return sequence[newIndex];},getPrevIntervalInSequence:function(sequence,currIndex){var newIndex=currIndex-1;if(newIndex<0){var currInterval=sequence[currIndex];return{Start:currInterval.Start,End:currInterval.Start};}
return sequence[newIndex];},getSubSequence:function(sequence,interval,retSequence){if(retSequence===undefined){retSequence=[];}
var startIndex=RP.core.SequenceJN.getStartIndex(sequence,interval);for(var indx=startIndex;indx<sequence.length;indx++){var curInterval=sequence[indx];if(curInterval.Start>=interval.End){break;}
var splitPair;if(RP.core.IntervalJN.containsTime(curInterval,interval.Start)&&interval.Start>curInterval.Start){splitPair=RP.core.IntervalJN.getRule(curInterval).split(curInterval,interval.Start);curInterval=splitPair.last;}
if(RP.core.IntervalJN.containsTime(curInterval,interval.End)&&interval.End<curInterval.End){splitPair=RP.core.IntervalJN.getRule(curInterval).split(curInterval,interval.End);curInterval=splitPair.first;}
RP.core.SequenceJN.addInterval(retSequence,RP.core.SequenceJN._clone(curInterval));splitPair=undefined;}
if(sequence.__isBounded){RP.core.SequenceJN.setBounds(retSequence,interval);}
return retSequence;},_insertIntoSequence:function(sequence,interval,index){var sRule=RP.core.IntervalJN.getRule(sequence);if(sRule&&sRule.insert){sRule.insert(sequence,interval,index);}
else{sequence.splice(index,0,interval);}},_isUnboundedSequence:function(interval){return interval.__isSequence&&!interval.__isBounded;},_clone:function(interval){var rule=RP.core.IntervalJN.getRule(interval);var ret=rule.clone(interval);RP.core.IntervalJN.setRule(ret,rule);if(RP.core.IntervalJN.getParent(interval)!==null){RP.core.IntervalJN.setParent(ret,RP.core.IntervalJN.getParent(interval));}
if(interval.__isSequence){ret.__isSequence=true;if(interval.__isBounded){ret.__isBounded=interval.__isBounded;}}
return ret;},_splitSetParentAndRule:function(rule,interval,date,sequence){var splitPair=rule.split(interval,date);return this._setParentAndRule(splitPair,sequence,rule);},_setParentAndRule:function(splitPair,sequence,rule){RP.core.IntervalJN.setParent(splitPair.first,sequence);RP.core.IntervalJN.setRule(splitPair.first,rule);RP.core.IntervalJN.setParent(splitPair.last,sequence);RP.core.IntervalJN.setRule(splitPair.last,rule);return splitPair;},removeInterval:function(sequence,interval){sequence.remove(interval);RP.core.SequenceJN.updateSequenceProperties(sequence);},updateSequenceProperties:function(sequence){if(sequence.__isBounded){return;}
if(sequence.length===0){sequence.Start=null;sequence.End=null;}
else{sequence.Start=sequence[0].Start.clone();sequence.End=sequence[sequence.length-1].End.clone();}},getStartIndex:function(sequence,interval){if((sequence.length===0)||(sequence[0].Start.getTime()>=interval.End.getTime())){return 0;}
var intervalInSet=sequence[sequence.length-1];if(intervalInSet.End.getTime()<interval.Start.getTime()){return sequence.length;}
var startIndex=RP.core.SequenceJN.binarySearch(sequence,interval);intervalInSet=sequence[startIndex-1];if((startIndex!==0)&&(intervalInSet.End.getTime()>interval.Start.getTime())){startIndex--;}
return startIndex;},binarySearch:function(sequence,interval){var length=sequence.length;var lower_bound=0;var upper_bound=length-1;var s1,s2=interval.Start.getTime();while(lower_bound<=upper_bound){var middle=(lower_bound+upper_bound)>>1;s1=sequence[middle].Start.getTime();if(s1===s2){return middle;}
else if(s1<s2){lower_bound=middle+1;}
else{upper_bound=middle-1;}}
return lower_bound;},binarySearchForSequenceThatContainsTime:function(sequence,time){var length=sequence.length;var lower_bound=0;var upper_bound=length-1;var interval;while(lower_bound<=upper_bound){var middle=(lower_bound+upper_bound)>>1;interval=sequence[middle];if(RP.core.IntervalJN.containsTime(interval,time)){return middle;}
else if(interval.Start.compareTo(time)<0){lower_bound=middle+1;}
else{upper_bound=middle-1;}}
return-1;},coalesce:function(sequence){for(var index=0;index<sequence.length-1;index++){var curInterval=sequence[index];if(curInterval.__isSequence){RP.core.SequenceJN.coalesce(curInterval);}
var curRule=RP.core.IntervalJN.getRule(curInterval);var nextInterval=sequence[index+1];if(curRule.canJoin&&curRule.canJoin(curInterval,nextInterval)&&RP.core.IntervalJN.compareDate(curInterval.End,nextInterval.Start)===0){var joinedInterval=curRule.join(curInterval,nextInterval);RP.core.IntervalJN.setParent(joinedInterval,RP.core.IntervalJN.getParent(curInterval));RP.core.IntervalJN.setRule(joinedInterval,curRule);sequence[index]=joinedInterval;sequence.splice(index+1,1);index--;}}
if(sequence.length===1&&sequence[0].__isSequence){RP.core.SequenceJN.coalesce(sequence[0]);}},fillSparceInterval:function(sequence){var i;for(i=0;i<sequence.length;i++){var rule=RP.core.IntervalJN.getRule(sequence[i]);var prev=(i===0?sequence:sequence[i-1]);var next=(i>=sequence.length-1?sequence:sequence[i+1]);if(rule.canExtend&&rule.canExtend(prev,sequence[i],next)){rule.extend(prev,sequence[i],next);}}},setBounds:function(sequence,interval){sequence.__isSequence=true;sequence.__isBounded=true;sequence.Start=interval.Start;sequence.End=interval.End;},formatSequence:function(sequence){if(!sequence.__isSequence){return"Not a Sequence";}
if(sequence.length===0){return"Empty Sequence";}
var retText=[];retText.push(String.format("Start Date: {0}",sequence.Start.formatDate(RP.core.Formats.Date.Medium)));retText.push(String.format("End Date: {0}",sequence.End.formatDate(RP.core.Formats.Date.Medium)));for(var i=0;i<sequence.length;i++){retText.push(String.format("[{0}] {1}",i,IntervalJN.formatInterval(sequence[i])));}
return retText.join('\r\n');}};var SequenceJN={};RP.util.DeprecationUtils.renameClass("SequenceJN","RP.core.SequenceJN");
Ext.ns("RP.core");RP.core.IntervalRule={canSplit:function(intervalJN,splitAt){},canJoin:function(intervalJN1,intervalJN2){},canMerge:function(intervalJN1,intervalJN2){},split:function(intervalJN,splitAt){},join:function(intervalJN1,intervalJN2){},merge:function(intervalJN1,intervalJN2){}};var IntervalRule={};RP.util.DeprecationUtils.renameClass("IntervalRule","RP.core.IntervalRule");
Ext.ns("RP.core");RP.core.ComponentMgr=function(){var rpTypeParams={};return{register:function(xtypeName,classRef,paramArray){if(xtypeName.toLowerCase()!==xtypeName){throw new RP.Exception("rp reg xtypes must be all lower case - "+xtypeName);}
Ext.reg(xtypeName,classRef);paramArray=[{name:'site_id',type:'number',description:'Site ID',direction:'in'}].concat(paramArray);rpTypeParams[xtypeName]=paramArray;},createConfig:function(xtypeName,paramValueArray,hash){if(!rpTypeParams[xtypeName]&&Ext.ComponentMgr.isRegistered(xtypeName)){paramValueArray.xtype=xtypeName;return paramValueArray;}
else
if(!rpTypeParams[xtypeName]){throw new RP.Exception("Component is not registered: "+xtypeName+".");}
var newType={};if(Ext.isArray(paramValueArray)){var paramArray=rpTypeParams[xtypeName];if(paramArray){var paramPosition=0;for(var n=0;n<paramArray.length;n++){var param=paramArray[n];if(paramValueArray.length<=paramPosition){break;}
if(param.direction&&param.direction.search(/in/i)===-1){continue;}
var paramValue=paramValueArray[paramPosition];newType[param.name?param.name:param]=paramValue;paramPosition++;}}}
else{newType=paramValueArray;}
newType.hash=hash;newType.xtype=xtypeName;return newType;},create:function(xtypeName,paramValueArray,hash){var newType=this.createConfig(xtypeName,paramValueArray,hash);return Ext.ComponentMgr.create(newType);},getSignature:function(xtype){var retobj={};Ext.each(rpTypeParams[xtype],function(parameter){if(parameter.name){var newParameter=Ext.apply({},parameter);delete newParameter.name;retobj[parameter.name]=newParameter;}},this);return retobj;}};}();
Ext.ns("RP.core");RP.core.CommonExtensions=function()
{var printChildren=function(config,options)
{var sb=[];config.windowOptions=config.windowOptions||{};var stashClientMode=RP.globals.getValue("STASH_CLIENTMODE");var buildString=RP.stash.getVersion("rpcommon").build;if(buildString!==""){buildString="-"+buildString;}
sb.push("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">");sb.push("<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">");sb.push("<head>");sb.push("<title>"+config.title+"</title>");sb.push(String.format('<link rel="stylesheet" type="text/css" media="all" href="{0}rpcommon-css.{1}{2}.css" />',RP.stash.DEPLOYED_ROOT,stashClientMode,buildString));sb.push(String.format('<link rel="stylesheet" type="text/css" media="all" href="{0}rpcommon-print-css.{1}{2}.css" />',RP.stash.DEPLOYED_ROOT,stashClientMode,buildString));if(config.cssURLs)
{Ext.each(config.cssURLs,function(cssUrl)
{sb.push(String.format("<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"{0}\" />",cssUrl));},this);}
sb.push("</head>");sb.push("<body onLoad='javascript:self.print();'>");var items=(config.items instanceof Array)?config.items:[config.items];Ext.each(items,function(item,index)
{if(!item.rendered)
{return;}
var childFilter;if(config.printChildFilter&&!(childFilter=config.printChildFilter(item)))
{return;}
if(typeof childFilter==="object")
{item=childFilter;}
var iPrintMarkup=RP.iget(item,RP.interfaces.IPrintSource);sb.push("<div>");if(iPrintMarkup)
{var markup=iPrintMarkup.getMarkupForPrinting(options);sb.push(markup);}
else
{var dom=item.getEl().dom;sb.push(dom.outerHTML||RP.util.DOM.getOuterHTML(dom));}
sb.push("</div>");});sb.push("</body>");sb.push("</html>");var printWin=window.open("","PrintWindow","toolbar="+(config.windowOptions.toolbar||'yes')+",location="+(config.windowOptions.location||'no')+",directories="+(config.windowOptions.directories||'no')+",status="+(config.windowOptions.status||'no')+",menubar="+(config.windowOptions.menubar||'yes')+",scrollbars="+(config.windowOptions.scrollbars||'yes')+",resizable="+(config.windowOptions.resizable||'yes')+",copyhistory="+(config.windowOptions.copyhistory||'yes')+",width="+(config.windowOptions.width||400)+",height="+(config.windowOptions.height||400));var html=sb.join('\n').replace(/<a[^>]*>([^<]*)<\/a>/gi,"$1");printWin.document.write(html);printWin.document.close();};var showIcon=function(iconParent,id,show)
{var tools=iconParent.tools||[];if(tools[id])
{if(show)
{tools[id].show();}
else
{tools[id].hide();}}};return{addPrintHandler:function(config)
{var tools=config.iconParent.tools||[];tools.push({id:'print',handler:function()
{if(typeof(config.printOptionsDelegate)==="function")
{var fn=function(options)
{printChildren(config,options);};config.printOptionsDelegate(fn);}
else
{printChildren(config,null);}}});config.iconParent.tools=tools;},printComponents:function(config,options)
{printChildren(config,options);},addReloadHandler:function(config)
{var tools=config.iconParent.tools||[];tools.push({id:'refresh',handler:function()
{config.reloadDelegate();}});config.iconParent.tools=tools;},showReloadIcon:function(iconParent,show)
{showIcon(iconParent,"refresh",show);},showPrintIcon:function(iconParent,show)
{showIcon(iconParent,"print",show);}};}();
Ext.ns("RP.ui");RP.ui.AbstractSuggest=Ext.extend(Ext.Container,{_name:"RP.ui.AbstractSuggest",width:250,height:20,layout:'border',minChars:2,dataStore:null,searchField:null,initComponent:function(){this.dataStore=this.createDataStore();Ext.apply(this,{items:this.createItems()});RP.ui.AbstractSuggest.superclass.initComponent.call(this);},clearSearchBoxValue:function(){this.searchField.clearValue();},createSearchEntryField:function(){return{xtype:'livesearchbox',region:'center',layout:'fit',queryParam:"filter",store:this.dataStore,minChars:this.minChars};},createActionButtons:function(){return{xtype:'button',text:RP.getMessage("rp.common.misc.SearchButton"),width:50,cls:'rp-ui-abstract-suggest-button',region:'east',margins:'0 0 0 5'};},createItems:function(){this.searchField=Ext.ComponentMgr.create(this.createSearchEntryField());return[this.searchField,this.createActionButtons()];},createDataStore:RP.abstractFn,getSelectedRecord:function(){return this.searchField.getSelectedRecord();},getSearchBox:function(){return this.searchField;}});
Ext.ns("RP.ui");RP.ui.Hyperlink=Ext.extend(Ext.BoxComponent,{href:["javascript",":void(0);"].join(""),initComponent:function(){this.handlers=[];if(this.handler){this.handlers.push(this.handler);}
this.autoEl={tag:"a",href:this.href,html:this.text};RP.ui.Hyperlink.superclass.initComponent.call(this);this.addEvents("click");},afterRender:function(){RP.ui.Hyperlink.superclass.afterRender.call(this);this.mon(this.el,"click",function(){Ext.each(this.handlers,function(handler){handler.call(this.scope||this);},this);this.fireEvent("click",this);},this);},setText:function(text){this.update(text);},getText:function(){return this.el.dom.innerHTML;},addHandler:function(handler){this.handlers.push(handler);}});Ext.reg("hyperlink",RP.ui.Hyperlink);
Ext.ns("RP.ui");RP.ui.HyperlinkBreadCrumb=Ext.extend(RP.ui.Hyperlink,{cls:"rp-breadcrumb",initComponent:function(){this.addEvents("activate");RP.ui.HyperlinkBreadCrumb.superclass.initComponent.call(this);},handler:function(){this.fireEvent("activate",this);},deactivate:function(){this.suspendEvents(false);this.addClass("deactivated");},reactivate:function(){this.resumeEvents();this.removeClass("deactivated");},getCard:function(){return this.card;}});
Ext.ns("RP.ui");RP.ui.AccordionScrollPanel=Ext.extend(Ext.Panel,{constructor:function(config){this._topToolbar=new Ext.Toolbar({height:22,cls:'rp-scrollbar-up'});this._bottomToolbar=new Ext.Toolbar({height:22,cls:'rp-scrollbar-down'});this._count=0;this._timeInterval=null;var originalRenderListener=Ext.emptyFn;var originalRenderScope=window;if(config.listeners&&config.listeners.render){originalRenderListener=Ext.isFunction(config.listeners.render)?config.listeners.render:(Ext.isFunction(config.listeners.render.fn)?config.listeners.render.fn:Ext.emptyFn);originalRenderScope=config.listeners.render.scope||config.listeners.scope||window;}
var registered=false;var cfg={layout:'anchor',tbar:this._topToolbar,bbar:this._bottomToolbar,listeners:{render:{fn:function(panel){if(!registered){var dir='';var interval=null;var fn=function(){if(dir&&panel.body.isScrollable()){panel.body.scroll(dir,20);}
else{window.clearInterval(interval);interval=null;}};panel.tbar.dom.onmouseover=function(){dir='up';if(!interval){interval=window.setInterval(fn,100);}
el=Ext.fly(panel.tbar.dom);el.addClass('rp-scrollbar-over');};panel.bbar.dom.onmouseover=function(){dir='down';if(!interval){interval=window.setInterval(fn,100);}
el=Ext.fly(panel.bbar.dom);el.addClass('rp-scrollbar-over');};panel.tbar.dom.onmouseout=function(){dir='';el=Ext.fly(panel.tbar.dom);el.removeClass('rp-scrollbar-over');};panel.bbar.dom.onmouseout=function(){dir='';el=Ext.fly(panel.bbar.dom);el.removeClass('rp-scrollbar-over');};panel.tbar.dom.onmouseup=panel.tbar.dom.onmouseout;panel.bbar.dom.onmouseup=panel.bbar.dom.onmouseout;panel.tbar.dom.ontouchstart=panel.tbar.dom.onmouseover;panel.bbar.dom.ontouchstart=panel.bbar.dom.onmouseover;panel.tbar.dom.ontouchend=panel.tbar.dom.onmouseup;panel.bbar.dom.ontouchend=panel.bbar.dom.onmouseup;this._topToolbar.container.addClass('x-hide-visibility');this._bottomToolbar.container.addClass('x-hide-visibility');registered=true;}
originalRenderListener.call(originalRenderScope);},scope:this},resize:{fn:this.fixScroll,scope:this},expand:{fn:this.fixScroll,scope:this}}};Ext.apply(config,cfg);RP.ui.AccordionScrollPanel.superclass.constructor.apply(this,[config]);},fixScroll:function(){if(this.isDestroyed||this.collapsed||!this.getEl()||!this.getEl().getBox()){return;}
if(!this.items||this.items.length===0){if(this._count<1000){if(this._timeInterval){window.clearTimeout(this._timeInterval);}
this._timeInterval=window.setTimeout(this.fixScroll.createDelegate(this,[this]),100);this._count++;}
return;}
this._count=0;var origHeight=this.getEl().getBox().height;if(this.body.isScrollable()){this._topToolbar.container.removeClass('x-hide-visibility');this._bottomToolbar.container.removeClass('x-hide-visibility');this.tbar.removeClass("hide");this.bbar.removeClass("hide");}
else{this.tbar.addClass("hide");this.bbar.addClass("hide");this.body.scrollTo('top');}
var newHeight=this.getEl().getBox().height;if(origHeight!==newHeight){this.setHeight(origHeight);}}});Ext.reg("rpaccordionscrollpanel",RP.ui.AccordionScrollPanel);
Ext.ns("RP.ui");RP.ui.ChangePassword=Ext.extend(Ext.Window,{id:"changePassword",success:false,initComponent:function(){var enterKeyFn=(function(field,e){if(e.getKey()==e.ENTER){e.stopEvent();submitFn.call(this);}}).createDelegate(this);var submitFn=function(){var form=this.getComponent("form");var results=form.getForm().getValues();var myMask=new Ext.LoadMask(document.body,{msg:RP.getMessage("rp.common.misc.SavingMaskText")});myMask.show();var msgBoxOptions={modal:true,buttons:Ext.MessageBox.OK,icon:Ext.MessageBox.ERROR,minWidth:300,title:RP.getMessage("rp.common.changepassword.ErrorTitle")};if(Ext.isEmpty(results.curPwd)){form.getComponent("curPwd").markInvalid(RP.getMessage("rp.common.changepassword.EmptyError"));myMask.hide();return;}
if(Ext.isEmpty(results.newPwd)){form.getComponent("newPwd").markInvalid(RP.getMessage("rp.common.changepassword.EmptyError"));myMask.hide();return;}
if(results.newPwd!==results.confirmPwd){form.getComponent("confirmPwd").markInvalid(RP.getMessage("rp.common.changepassword.NewPasswordsDoNotMatch"));myMask.hide();return;}
Ext.Ajax.requestWithTextParams({url:RP.globals.getFullyQualifiedPath("PATH_TO_DATA_ROOT")+"changePassword",disableExceptionHandling:true,method:"POST",params:Ext.urlEncode({oldPwd:results.curPwd,newPwd:results.newPwd}),scope:this,callback:function(options,success,response){var result=Ext.util.JSON.decode(response.responseText).status;myMask.hide();switch(result){case RP.REFSExceptionCodes.OK:logger.logTrace("[ChangePassword] Password change successful.");this.success=true;this.newPassword=results.newPwd;Ext.MessageBox.alert(RP.getMessage("rp.common.changepassword.FormTitle"),RP.getMessage("rp.common.changepassword.Success"),function(){this.destroy();this.newPassword=null;},this);break;case RP.REFSExceptionCodes.PASSWORD_OLD_PASSWORD_INCORRECT:logger.logError("[ChangePassword] Old password was incorrect.");form.getComponent("curPwd").markInvalid(RP.getMessage("rp.common.changepassword.OldPasswordInvalid"));break;case RP.REFSExceptionCodes.PASSWORD_TOO_SHORT:logger.logError("[ChangePassword] Password too short.");form.getComponent("newPwd").markInvalid(RP.getMessage("rp.common.changepassword.TooShortError"));break;case RP.REFSExceptionCodes.PASSWORD_MISSING_UPPER:logger.logError("[ChangePassword] Password missing uppercase character.");form.getComponent("newPwd").markInvalid(RP.getMessage("rp.common.changepassword.MissingUpperCaseError"));break;case RP.REFSExceptionCodes.PASSWORD_MISSING_NONALPHA:logger.logError("[ChangePassword] Password missing non-alphanumeric character.");form.getComponent("newPwd").markInvalid(RP.getMessage("rp.common.changepassword.MissingNonAlphaError"));break;case RP.REFSExceptionCodes.PASSWORD_CONTAINS_USERID:logger.logError("[ChangePassword] Password contains user ID.");form.getComponent("newPwd").markInvalid(RP.getMessage("rp.common.changepassword.ContainsUserNameError"));break;case RP.REFSExceptionCodes.PASSWORD_DUPLICATE_OF_PREVIOUS:logger.logError("[ChangePassword] Password contains old password.");form.getComponent("newPwd").markInvalid(RP.getMessage("rp.common.changepassword.ContainsOldPasswordError"));break;case RP.REFSExceptionCodes.INVALID_LOGIN:logger.logError("[ChangePassword] Invalid login.");Ext.Msg.show(Ext.apply(msgBoxOptions,{msg:RP.getMessage("rp.common.changepassword.InvalidLogin")}));break;case RP.REFSExceptionCodes.PASSWORD_ACCOUNT_LOCKED:logger.logError("[ChangePassword] Account is locked.");Ext.Msg.show(Ext.apply(msgBoxOptions,{msg:RP.getMessage("rp.common.changepassword.AccountLocked")}));break;case RP.REFSExceptionCodes.PASSWORD_EXPIRED_EXCEPTION:logger.logError("[ChangePassword] Password is expired.");Ext.Msg.show(Ext.apply(msgBoxOptions,{msg:RP.getMessage("rp.common.changepassword.Expired")}));break;case RP.REFSExceptionCodes.PASSWORD_CHANGE_REQUIRED:logger.logError("[ChangePassword] Password change required.");Ext.Msg.show(Ext.apply(msgBoxOptions,{msg:RP.getMessage("rp.common.changepassword.ChangeRequired")}));break;case RP.REFSExceptionCodes.PASSWORD_SAME_CASE:logger.logError("[ChangePassword] Password cannot be entirely the same case.");form.getComponent("newPwd").markInvalid(RP.getMessage("rp.common.changepassword.SameCase"));break;default:Ext.Msg.show(Ext.apply(msgBoxOptions,{msg:RP.getMessage("rp.common.changepassword.GenericServerError")}));}}});};Ext.apply(this,{title:this.initialConfig.formTitle||RP.getMessage("rp.common.changepassword.FormTitle"),width:450,draggable:false,resizable:false,closable:false,modal:true,padding:20,bodyStyle:"background-color: #fff",items:[{xtype:"box",html:this.initialConfig.formIntro||RP.getMessage("rp.common.changepassword.FormIntro")},{xtype:"form",itemId:"form",style:"margin: 20px auto",labelAlign:"right",labelWidth:125,defaults:{anchor:"99%",labelStyle:"font-weight: bold",inputType:"password",listeners:{specialkey:enterKeyFn},msgTarget:"under"},width:"80%",border:false,items:[{xtype:"textfield",itemId:"curPwd",name:"curPwd",fieldLabel:RP.getMessage("rp.common.changepassword.OldPasswordLabel")},{xtype:"textfield",itemId:"newPwd",name:"newPwd",fieldLabel:RP.getMessage("rp.common.changepassword.NewPasswordLabel")},{xtype:"textfield",itemId:"confirmPwd",name:"confirmPwd",fieldLabel:RP.getMessage("rp.common.changepassword.ConfirmPasswordLabel")}]},{itemId:"pnlButtons",border:false,buttonAlign:"center",buttons:[{itemId:"btnSubmit",text:RP.getMessage("rp.common.changepassword.SubmitButton"),scope:this,handler:submitFn},{itemId:"btnCancel",text:RP.getMessage("rp.common.changepassword.CancelButton"),scope:this,handler:this.destroy}]}]});RP.ui.ChangePassword.superclass.initComponent.call(this);this.on("show",function(){this.getComponent("form").getComponent("curPwd").focus(false,500);},this);this.show();var inactiveFn=(function(){this.destroy();}).createDelegate(this);RP.util.PageInactivityChecker.addHandler(inactiveFn);this.on("destroy",function(){RP.util.PageInactivityChecker.removeHandler(inactiveFn);},this);},getNewPassword:function(){return this.newPassword;}});
Ext.ns("RP.ui");RP.ui.ClickableToolTip=Ext.extend(Ext.ToolTip,{autoWidth:true,initComponent:function(){Ext.apply(this,{closable:true,autoHide:false,showDelay:0,mouseDownXY:[null,null]});RP.ui.ClickableToolTip.superclass.initComponent.call(this);},show:function(){RP.ui.ClickableToolTip.superclass.show.apply(this,arguments);var box=this.getBox();if(box.x+box.width>Ext.getBody().getWidth()){var x=Ext.getBody().getWidth()-(box.width+10);this.setPagePosition(x,box.y);}},initTarget:function(target){var t;if((t=Ext.get(target))){if(this.target){var tg=Ext.get(this.target);this.mun(tg,"mousedown",this.onTargetMouseDown,this);this.mun(tg,"mouseup",this.onTargetMouseUp,this);}
this.mon(t,"mousedown",this.onTargetMouseDown,this);this.mon(t,"mouseup",this.onTargetMouseUp,this);this.target=t;}},ignoreEvent:function(e){return this.disabled||e.within(this.target.dom,true);},onTargetMouseDown:function(e){if(!this.ignoreEvent(e)){this.mouseDownXY=e.getXY();}},onTargetMouseUp:function(e){var newXY=e.getXY();var oldXY=this.mouseDownXY;this.mouseDownXY=[null,null];if(this.ignoreEvent(e)||!(oldXY[0]==newXY[0]&&oldXY[1]==newXY[1])){return;}
var t=e.getTarget(this.delegate);if(t){this.triggerElement=t;this.targetXY=newXY;this.show();}},onDocMouseDown:function(e){if(!e.within(this.el.dom)){this.hide();}}});
Ext.ns("RP.ui");RP.ui.ComponentDataView=Ext.extend(Ext.DataView,{defaultType:"textfield",cls:"comp-data-view",initComponent:function(){RP.ui.ComponentDataView.superclass.initComponent.call(this);this.components=new Ext.util.MixedCollection();},refresh:function(){this.components.clear();RP.ui.ComponentDataView.superclass.refresh.call(this);this.renderItems(0,this.store.getCount()-1);},selectRow:function(index){var selectedItem=Ext.query(".comp-data-view-row-selected",this.getTemplateTarget().dom)[0];if(selectedItem){Ext.fly(selectedItem).removeClass("comp-data-view-row-selected");}
var item=Ext.query(".comp-data-view-row",this.getTemplateTarget().dom)[index];Ext.fly(item).addClass("comp-data-view-row-selected");},onUpdate:function(ds,record){var index=ds.indexOf(record);if(index>-1){this.destroyItems(index);}
RP.ui.ComponentDataView.superclass.onUpdate.apply(this,arguments);if(index>-1){this.renderItems(index,index);}},onAdd:function(ds,records,index){var count=this.all.getCount();RP.ui.ComponentDataView.superclass.onAdd.apply(this,arguments);if(count!==0){this.renderItems(index,index+records.length-1);}},onClick:function(e){var item=e.getTarget(this.itemSelector,this.getTemplateTarget());if(item){var index=this.indexOf(item);var selectedItem=Ext.query(".comp-data-view-row-selected",this.getTemplateTarget().dom)[0];if(selectedItem){Ext.fly(selectedItem).removeClass("comp-data-view-row-selected");}
Ext.fly(item).addClass("comp-data-view-row-selected");if(this.onItemClick(item,index,e)!==false){this.fireEvent("click",this,index,item,e);}}else{if(this.fireEvent("containerclick",this,e)!==false){this.onContainerClick(e);}}},onRemove:function(ds,record,index){this.destroyItems(index);RP.ui.ComponentDataView.superclass.onRemove.apply(this,arguments);},onDestroy:function(){RP.ui.ComponentDataView.onDestroy.call(this);this.components.clear();},renderItems:function(startIndex,endIndex){var ns=this.all.elements;var blurFn=function(f){this.store.getAt(this.index).data[this.dataIndex]=f.getValue();};for(var i=startIndex;i<=endIndex;i++){var r=[];for(var items=this.items,j=0,len=items.length,c;j<len;j++){c=items[j].render?c=items[j].cloneConfig():Ext.create(items[j],this.defaultType);c.itemId="cdv-"+i+"-"+j;r[j]=c;var target=ns[i];if(c.renderTarget){target=Ext.DomQuery.selectNode(c.renderTarget,ns[i]);c.render(target);}
else if(c.applyTarget){target=Ext.DomQuery.selectNode(c.applyTarget,ns[i]);c.applyToMarkup(target);}
else{c.render(target);}
if(Ext.isFunction(c.setValue)&&c.applyValue){c.setValue(this.store.getAt(i).get(c.applyValue));c.on('blur',blurFn,{store:this.store,index:i,dataIndex:c.applyValue});}
if(Ext.isFunction(c.renderer)){c.renderer.call(c.scope||this,c,target,this.store.getAt(i),i,j,this.store);}}
this.components.insert(i,r);}},destroyItems:function(index){var componentToDestroy=this.components.removeAt(index);Ext.destroy(componentToDestroy);}});Ext.reg("compdataview",RP.ui.ComponentDataView);
Ext.ns("RP.ui");RP.ui.ComponentDataViewGrid=Ext.extend(RP.ui.ComponentDataView,{cls:"comp-data-view-grid",initComponent:function(){var tempate=new Ext.Template('<table cellpadding="0" cellspacing="0">'+'<thead>'+'<tr>'+'{templateHeader}'+'</tr>'+'</thead>'+'<tbody>'+'<tpl for=".">'+'<tr class="comp-data-view-row">'+'{templateBody}'+'</tr>'+'</tpl>'+'</tbody>'+'</table>');var headerTemplate=new Ext.Template('<th style="white-space:nowrap;{style}"><div {tooltip}>{headerData}</div></th>');var rowTemplate=new Ext.Template('<td class="col{columnNum}" width="{width}" style="{style}">{rowData}</td>');this.itemSelector='tr.comp-data-view-row';var columns=this.initialConfig.items;var tplHeader='';var tplBody='';for(ii=0;ii<columns.length;ii++){if(columns[ii].hidden){continue;}
var tooltip="";if(columns[ii].tooltip){tooltip="ext:qtip='"+columns[ii].tooltip+"'";}
tpldata='';dataIndex=columns[ii].dataIndex;if(dataIndex){columns[ii].xtype="label";}
tplHeader+=headerTemplate.apply({headerData:columns[ii].header,style:columns[ii].style,tooltip:tooltip});if(this.initialConfig.autoExpandColumn===columns[ii].colID){tplBody+=rowTemplate.apply({columnNum:ii,width:"100%",style:columns[ii].style,rowData:tpldata});}
else{tplBody+=rowTemplate.apply({columnNum:ii,style:columns[ii].style,rowData:tpldata});}
columns[ii].renderTarget="td.col"+ii;}
this.tpl=tempate.apply({templateHeader:tplHeader,templateBody:tplBody});RP.ui.ComponentDataViewGrid.superclass.initComponent.call(this);}});Ext.reg("compdataviewgrid",RP.ui.ComponentDataViewGrid);
Ext.ns('RP.ui');RP.ui.ImageButton=Ext.extend(Ext.Button,{initComponent:function(){var config=this.initialConfig;config.iconWidth=config.iconWidth||110;config.iconHeight=config.iconHeight||46;config.iconFontColor=config.iconFontColor||"white";config.iconFontWeight=config.iconFontWeight||"bold";config.disabledIcon=config.disabledIcon||config.icon;config.disabledText=config.disabledText||config.text;Ext.apply(this,{cls:"rp-img-button",scale:""});RP.ui.ImageButton.superclass.initComponent.call(this);this.on("render",function(){this.setIconSize(this.initialConfig.iconWidth,this.initialConfig.iconHeight);this.btnEl.setStyle("color",this.initialConfig.iconFontColor);this.btnEl.setStyle("font-weight",this.initialConfig.iconFontWeight);},this);},disable:function(){this.setIcon(this.initialConfig.disabledIcon);this.setText(this.initialConfig.disabledText);RP.ui.ImageButton.superclass.disable.call(this);this.removeClass("x-item-disabled");},enable:function(){this.setIcon(this.initialConfig.icon);this.setText(this.initialConfig.text);RP.ui.ImageButton.superclass.enable.call(this);},setIconSize:function(width,height){this.btnEl.setStyle("width",width+"px");this.btnEl.setStyle("height",height+"px");}});Ext.reg("rpimagebutton",RP.ui.ImageButton);
Ext.ns("RP.ui");RP.ui.LiveSearchBox=Ext.extend(Ext.form.ComboBox,{itemSelector:"div.livesearch-item",minChars:2,tpl:'<tpl for="."><div class="livesearch-item">{item}</div></tpl>',initComponent:function(){this.addEvents("update");Ext.apply(this,{enableKeyEvents:true,hideTrigger:true,typeAhead:false});this.loadingText=this.loadingText?this.loadingText:RP.getMessage("rp.common.misc.LoadingMaskText");if(this.initialConfig.pageSize){this.pageSize=this.initialConfig.pageSize;this.width=this.initialConfig.width?this.initialConfig.width:230;}
this.on("keyup",function(){if(this.getValue()===null||this.getValue()===""){this.collapse();}},this);RP.ui.LiveSearchBox.superclass.initComponent.call(this);},onSelect:function(record){if(this.lastQuery==this.getValue()){this.setValue(record.data.item);this.collapse();this.fireEvent("update",this,record);}},getSelectedRecord:function(){var rows=this.view.getSelectedRecords();if(rows.length>0){return rows[0];}
return null;}});Ext.reg("livesearchbox",RP.ui.LiveSearchBox);
Ext.ns('RP.ui');RP.ui.TimeField=Ext.extend(Ext.form.TextField,{initComponent:function(){this._format=this.initialConfig.format||RP.core.Formats.Time.Default;this._theDate=(new Date()).clearTime();this.typedValue=null;this._roundMinutes=Ext.value(this.initialConfig.roundMinutes,1);if(!this.initialConfig.emptyText){Ext.apply(this,{emptyText:RP.getMessage("rp.common.misc.EmptyTimeText")});}
this.addEvents("beforechange");this.on("change",function(e){this.fireEvent("beforechange");});RP.ui.TimeField.superclass.initComponent.call(this);},beforeBlur:function(){var v=this.parseValue(this.getRawValue());if(v){this.typedValue=this.getRawValue();this.setRawValue(this.formatTime(v));}},setTheDate:function(dt){if(!Ext.isDate(dt)){dt=RP.core.Sundial.now();}
this._theDate=dt.clone().clearTime();if(this.getRawValue()){this.setValue(this.getRawValue());}},setTheTime:function(dt){this.setValue(this.formatTime(dt));},setDateTime:function(dt){this.setTheDate(dt);this.setTheTime(dt);},getValue:function(){var v=RP.ui.TimeField.superclass.getValue.call(this);return this.formatTime(this.parseValue(v))||'';},getDateTime:function(raw){if(raw){return this.parseValue(this.getRawValue());}
return this.parseValue(this.getValue());},parseValue:function(value){if(typeof(value)==="string"){if(value&&value.length>0){try{var date=RP.core.IntervalJN.parseTimeAfterBase(value,this._theDate);if(this._roundMinutes!==0){date.round(this._roundMinutes);}
return date;}
catch(e){logger.logError(new RP.Exception("[TimeField] parseValue failed for: "+value,e));}
return null;}
else{return null;}}
else
if(!Ext.isEmpty(value)){return value.round(this._roundMinutes);}
else{return null;}},formatTime:function(t){if(t){return t.clone().formatTime(this._format);}
else{return"";}}});Ext.reg("rpuitimefield",RP.ui.TimeField);
Ext.ns("RP.ui");RP.ui.SessionExpiredDialog=Ext.extend(Ext.Window,{id:"sessionExpiredDialog",initComponent:function(){RP.event.AppEventManager.fire(RP.upb.AppEvents.SessionExpired,{});var enterKeyFn=(function(field,e){if(e.getKey()==e.ENTER){this.submit();}}).createDelegate(this);this.msgBoxOptions=this._createMsgBoxOptions();Ext.apply(this,{title:RP.getMessage("rp.common.login.InactivityTimeoutTitle"),width:450,draggable:false,closable:false,resizable:false,padding:20,bodyStyle:"background-color: #fff",items:[{xtype:"box",style:"font-size: 12px;",html:RP.getMessage("rp.common.login.InactivityTimeout")},{xtype:"form",itemId:"form",style:"margin: 20px auto",labelWidth:75,defaults:{labelStyle:"font-weight: bold"},width:"60%",border:false,items:[{xtype:"textfield",itemId:"userName",fieldLabel:RP.getMessage("rp.common.login.Username"),listeners:{"specialkey":enterKeyFn},style:{marginTop:"1px"},anchor:"99%"},{xtype:"textfield",itemId:"password",fieldLabel:RP.getMessage("rp.common.login.Password"),inputType:"password",listeners:{"specialkey":enterKeyFn},style:{marginTop:"1px"},anchor:"99%"}]},{itemId:"pnlButtons",border:false,buttonAlign:"center",buttons:[{itemId:'btnLogin',text:RP.getMessage("rp.common.login.LoginButton"),scope:this,handler:this.submit.createDelegate(this)},{itemId:'btnCancel',text:RP.getMessage("rp.common.login.CancelButton"),handler:RP.util.Helpers.logout}]}]});RP.ui.SessionExpiredDialog.superclass.initComponent.call(this);},destroy:function(){Ext.EventManager.removeResizeListener(this.center,this);RP.ui.SessionExpiredDialog.superclass.destroy.apply(this,arguments);},show:function(){Ext.EventManager.onWindowResize(this.center,this);RP.ui.SessionExpiredDialog.superclass.show.apply(this,arguments);this.getComponent("form").getComponent("userName").focus(false,100);},submit:function(){var userName=this.getComponent("form").getComponent("userName").getValue();var password=this.getComponent("form").getComponent("password").getValue();if(Ext.isEmpty(userName)||Ext.isEmpty(password)){this._displayAlertMessageBox(RP.getMessage("rp.common.login.LoginFailed"));return;}
if(userName.toUpperCase()!==RP.globals.getValue("USERNAME").toUpperCase()){this._displayAlertMessageBox(RP.getMessage("rp.common.login.InvalidUser"));return;}
this.loadMask=new Ext.LoadMask(this.body,{msg:RP.getMessage("rp.common.misc.PleaseWait")});this.loadMask.show();Ext.Ajax.requestWithTextParams({url:RP.core.PageContext.getPageUrl()+RP.globals.getPath("REAUTHENTICATE"),params:Ext.urlEncode({loginName:userName,password:password}),method:"POST",scope:this,callback:this._loginCallback});},_createMsgBoxOptions:function(){return{modal:true,buttons:Ext.MessageBox.OK,icon:Ext.MessageBox.ERROR,minWidth:300};},_displayAlertMessageBox:function(message){Ext.Msg.show(Ext.apply(this.msgBoxOptions,{msg:message,cls:"aboveExpiredMask"}));},_displayExceptionMessage:function(status){var message="";switch(status){case RP.REFSExceptionCodes.REAUTH_USERNAME_MISMATCH_EXCEPTION:message=RP.getMessage("rp.common.login.InvalidUser");break;case RP.REFSExceptionCodes.NOT_AUTHENTICATION_EXCEPTION:message=RP.getMessage("rp.common.login.LoginFailed");break;case RP.REFSExceptionCodes.LOGIN_ATTEMPTS_EXCEEDED_EXCEPTION:message=RP.getMessage("rp.common.exception.LOGIN_ATTEMPTS_EXCEEDED_EXCEPTION");break;case RP.REFSExceptionCodes.SERVER_COMMUNICATION_FAILURE:message=RP.getMessage("rp.common.exception.SERVER_COMMUNICATION_FAILURE");break;case RP.REFSExceptionCodes.SITE_NOT_ACTIVE_EXCEPTION:message=RP.getMessage("rp.common.exception.SITE_NOT_ACTIVE_EXCEPTION");break;default:message=RP.getMessage("rp.common.login.LoginFailed");}
logger.logInfo("[SessionExpiredLoginDialog] Exception caught trying to re-authenticate user; response status: "+status);this._displayAlertMessageBox(message);},_loginCallback:function(options,success,response){var relogin=false;try{var r=Ext.util.JSON.decode(response.responseText);this.loadMask.hide();if(r.status===RP.REFSExceptionCodes.OK){this.destroy();}
else{this._displayExceptionMessage(r.status);}}
catch(err){if(RP.globals.getPath("LOGIN_SERVICE")){this._reauthenticateUsingLoginPage();}
else{relogin=true;}}
if(relogin){alert(RP.getMessage("rp.common.login.SessionError"));RP.util.Helpers.redirectToLogin();return;}
RP.event.AppEventManager.fire(RP.upb.AppEvents.SessionReauthenticated,{});},_reauthenticateUsingLoginPage:function(){var userName=this.getComponent("form").getComponent("userName").getValue();var password=this.getComponent("form").getComponent("password").getValue();var params={loginName:userName,password:password};Ext.Ajax.requestWithTextParams({url:RP.globals.getFullyQualifiedPath('LOGIN_SERVICE'),method:"POST",params:params,scope:this,disableExceptionHandling:true,callback:this._reauthUsingLoginPageCallback});},_reauthUsingLoginPageCallback:function(options,success,response){this.loadMask.hide();var result;try{if(Ext.isEmpty(response.responseText)){RP.throwError("Empty responseText");}
result=Ext.util.JSON.decode(response.responseText);}
catch(ex){this._displayAlertMessageBox(RP.getMessage("rp.common.login.InvalidResponse"));return;}
if(result.status===RP.REFSExceptionCodes.OK&&success){window.onbeforeunload=null;RP.util.Helpers.redirectToLogin();}
else{this._displayExceptionMessage(result.status);}}});
Ext.ns('RP.ui');RP.ui.SmartTimeLogic=function(startTimeField,stopTimeField){stopTimeField.on("beforechange",function(){if(!hasMeridiemIdentifier(stopTimeField.typedValue)){calculateStopTime();}});calculateStopTime=function(){var startTime=startTimeField.getDateTime();var stopTime=stopTimeField.getDateTime();if(Ext.isEmpty(startTime)||Ext.isEmpty(stopTime)){return;}
var MERIDIEM_BOUNDARY=12;var startHours=startTime.getHours();var stopHours=stopTime.getHours();var startMinutes=startTime.getMinutes();var stopMinutes=stopTime.getMinutes();if(startHours==stopHours||startHours-MERIDIEM_BOUNDARY==stopHours){if(startMinutes==stopMinutes&&isAM(startHours,MERIDIEM_BOUNDARY)){stopTimeField.setTheTime(stopTime.clone().addHours(MERIDIEM_BOUNDARY));}
else
if(stopMinutes>startMinutes&&isPM(startHours,MERIDIEM_BOUNDARY)){stopTimeField.setTheTime(stopTime.clone().addHours(MERIDIEM_BOUNDARY));}}
else
if(stopHours<startHours){if(isAM(startHours,MERIDIEM_BOUNDARY)){stopTimeField.setTheTime(stopTime.clone().addHours(MERIDIEM_BOUNDARY));}
else
if(startHours-MERIDIEM_BOUNDARY<stopHours){stopTimeField.setTheTime(stopTime.clone().addHours(MERIDIEM_BOUNDARY));}}};hasMeridiemIdentifier=function(timeString){var hasIdentifier=false;if(Ext.isEmpty(timeString)){return hasIdentifier;}
timeString=timeString.toLowerCase();hasIdentifier=(timeString.indexOf("a")!==-1)||(hasIdentifier=timeString.indexOf("p")!==-1)?true:false;return hasIdentifier;};isAM=function(hour,meridiemBoundary){return hour<meridiemBoundary;};isPM=function(hour,meridiemBoundary){return hour>=meridiemBoundary;};};
Ext.ns('RP.ui');RP.ui.StoreBoundTimeTextField=Ext.extend(Ext.form.TextField,{initComponent:function()
{var config=this.initialConfig;this.on("change",function(field,newVal,oldVal)
{var baseDateDelegate=config.baseDateHandler.createDelegate(config.scope||this,[config.record,config.fieldName]);var baseDate=baseDateDelegate();var fieldDate=null;if(newVal)
{try
{fieldDate=IntervalJN.parseTimeAfterBase(newVal,baseDate);}
catch(e)
{Ext.Msg.alert('','Please enter a valid time.');this.setRawValue(oldVal);return;}}
var dummyDate=new Date();var curDate=config.record.get(config.fieldName);if(newVal===''&&!curDate)
{this.setRawDate(null,this.initialConfig.emptyText);return;}
if(!(curDate||dummyDate).equals(fieldDate||dummyDate))
{config.record.set(config.fieldName,fieldDate);this.addClass("rp-dirty-cell");}
this.setRawDate(fieldDate);},this);Ext.apply(this,config);if(!config.emptyText){config.emptyText=RP.getMessage("rp.common.misc.EmptyTimeText");}
RP.ui.StoreBoundTimeTextField.superclass.initComponent.call(this);},onRender:function(ct,position)
{RP.ui.StoreBoundTimeTextField.superclass.onRender.call(this,ct,position);},setValue:function(v)
{RP.ui.StoreBoundTimeTextField.superclass.setValue.apply(this,arguments);this.fireEvent('change',this,v);},setRawDate:function(fieldDate,defaultText)
{if(fieldDate)
{this.setRawValue(fieldDate.formatTime(this.initialConfig.timeFormat));}
else if(defaultText)
{this.setRawValue(defaultText);}
else
{this.setRawValue("");}}});
Ext.ns('RP.ui');RP.ui.StoreBinder=Ext.extend(Ext.Component,{_store:null,_record:null,_valueField:null,_emptyText:null,_control:null,_dirtyCellCls:"rp-dirty-cell",initComponent:function(){var storeBindings=this.initialConfig.storeBindings;this._store=storeBindings.store||null;this._record=storeBindings.record||null;this._valueField=storeBindings.valueField;this._emptyText=storeBindings.emptyText;this._control=this.initialConfig.control;if(!this._valueField){if(this.name){this._valueField=this.name;}
else{throw new RP.Exception('fieldname is required for a store bound control.');}}
if(!this._store&&!this._record){throw new RP.Exception('either store or record must be provided for a store bound control');}
if(this._store){this._store.on('load',this.onStoreLoaded,this);}
if(!this._control){throw new RP.Exception('store bound control requires a control to be set');}
this._oldControlSetValue=this._control.setValue;this._control.setValue=function(newVal){this._storeBinder.setValue(newVal);};if(Ext.isFunction(this._control.initValue)){this._control.initValue=this._control.initValue.createSequence(function(){this.removeClass(this._dirtyCellCls);},this._control);}
this._oldControlClearValue=this._control.clearValue;this._control.clearValue=function(){this._storeBinder.clearValue();};this._control.on('change',this.onControlChange,this);if(this._store.getCount()>0){this.onStoreLoaded();}
RP.ui.StoreBinder.superclass.initComponent.call(this);},getStoreValue:function(){return this._record.get(this._valueField);},setValue:function(newVal){this.onControlChange(this._control,newVal,this._control.getValue());},clearValue:function(){if(this._oldControlClearValue){this._oldControlClearValue.apply(this._control,[]);}
this._control.setRawValue('');this._control.removeClass(this._dirtyCellCls);},onStoreLoaded:function(){if(this._store.getCount()){this._record=this._store.getAt(0);this.setValue(this._record.get(this._valueField));this._control.removeClass(this._dirtyCellCls);}},onControlChange:function(field,newVal,oldVal){var formattedVal=newVal;var curVal=this._record.get(this._valueField);if(this._control.formatValue){try{formattedVal=this._control.formatValue(newVal);}
catch(ex){Ext.Msg.alert('',ex.message);this._control.setRawValue(curVal);return;}}
var parsedVal=newVal;if(this._control.parseValue){parsedVal=this._control.parseValue(newVal);}
var areDifferent=true;if(Ext.isDate(curVal)){if(Ext.isString(parsedVal)){parsedVal=new Date(parsedVal);}
areDifferent=!curVal.equals(parsedVal);}
else{areDifferent=curVal!==parsedVal;}
if(this._record&&areDifferent){this._record.set(this._valueField,parsedVal);if(formattedVal!==oldVal){this._control.addClass(this._dirtyCellCls);}}
if(formattedVal===""&&this._emptyText){formattedVal=this._emptyText;}
this._oldControlSetValue.apply(this._control,[formattedVal]);}});
Ext.ns('RP.ui');RP.ui.StoreBoundTimeField=Ext.extend(RP.ui.TimeField,{_storeBinder:null,initComponent:function()
{this.initialConfig.control=this;this._storeBinder=new RP.ui.StoreBinder(this.initialConfig);this.initialConfig.storeBindings.store.on("load",function(store,recs)
{this.setTheDate(this._storeBinder.getStoreValue());},this);RP.ui.StoreBoundTimeField.superclass.initComponent.call(this);},formatValue:function(newVal)
{if(typeof(newVal)==="string")
{return newVal;}
if(newVal)
{return newVal.clone().formatTime(this._format);}
else
{return"";}}});
Ext.ns('RP.ui');RP.ui.StoreBoundTextField=Ext.extend(Ext.form.TextField,{_storeBinder:null,initComponent:function(){this.initialConfig.control=this;this._storeBinder=new RP.ui.StoreBinder(this.initialConfig);RP.ui.StoreBoundTextField.superclass.initComponent.call(this);}});
Ext.ns('RP.ui');RP.ui.StoreBoundTextArea=Ext.extend(Ext.form.TextArea,{_storeBinder:null,initComponent:function()
{this.initialConfig.control=this;this._storeBinder=new RP.ui.StoreBinder(this.initialConfig);RP.ui.StoreBoundTextArea.superclass.initComponent.call(this);}});
Ext.ns('RP.ui');RP.ui.StoreBoundDateField=Ext.extend(Ext.form.DateField,{_storeBinder:null,initComponent:function()
{this.initialConfig.control=this;this._storeBinder=new RP.ui.StoreBinder(this.initialConfig);this._format=this.initialConfig.format||RP.core.Formats.Date.Medium;if(!this.initialConfig.emptyText){Ext.apply(this,{emptyText:RP.getMessage("rp.common.misc.EmptyDateText")});}
RP.ui.StoreBoundDateField.superclass.initComponent.call(this);},formatValue:function(newVal)
{if(Ext.isString(newVal))
{if(Ext.isEmpty(newVal))
{return"";}
return((new Date(newVal)).clearTime().formatDate(this._format));}
else if(newVal)
{return newVal.clone().clearTime().formatDate(this._format);}
else
{return"";}}});
Ext.ns("RP.ui");RP.ui.StoreBoundDisplayField=Ext.extend(Ext.form.DisplayField,{_storeBinder:null,initComponent:function()
{this.initialConfig.control=this;this._storeBinder=new RP.ui.StoreBinder(this.initialConfig);RP.ui.StoreBoundDisplayField.superclass.initComponent.call(this);}});
Ext.ns('RP.ui');RP.ui.ComboBoxStoreBinder=Ext.extend(RP.ui.StoreBinder,{_displayField:null,initComponent:function()
{var storeBindings=this.initialConfig.storeBindings;this._displayField=storeBindings.displayField||null;RP.ui.ComboBoxStoreBinder.superclass.initComponent.call(this);},onControlChange:function(field,newVal,oldVal)
{RP.ui.ComboBoxStoreBinder.superclass.onControlChange.call(this,field,newVal,oldVal);if(this._displayField&&this._control.store&&this._control.valueField&&this._control.displayField)
{var displayVal=null;if(this._control.store.getCount()===0)
{displayVal=this._record.get(this._displayField);this._control.setRawValue(displayVal);this._control.lastSelectionText=displayVal;return;}
var recIndex=this._control.store.find(this._control.valueField,newVal);if(recIndex>=0)
{var rec=this._control.store.getAt(recIndex);displayVal=rec.get(this._control.displayField);this._record.set(this._displayField,displayVal);}}}});
Ext.ns('RP.ui');RP.ui.StoreBoundComboBox=Ext.extend(Ext.form.ComboBox,{_storeBinder:null,previousSelectedValue:null,initComponent:function()
{this.initialConfig.control=this;if(this.initialConfig.storeBindings)
{this._storeBinder=new RP.ui.ComboBoxStoreBinder(this.initialConfig);var okToLookup=false;if(this.initialConfig.storeBindings.store)
{this.initialConfig.storeBindings.store.on("load",function(store,recs)
{if(recs.length>0)
{this.previousSelectedValue=recs[0].get(this.initialConfig.valueField);okToLookup=false;}},this);}}
this.on("beforeselect",function(combo,rec,index)
{if(okToLookup)
{this.previousSelectedValue=this.getValue();}
else
{okToLookup=true;}},this);RP.ui.StoreBoundComboBox.superclass.initComponent.call(this);}});
RP.core.ComponentMgr.register('rpstorebounddatefield',RP.ui.StoreBoundDateField);RP.core.ComponentMgr.register('rpstoreboundcombobox',RP.ui.StoreBoundComboBox);RP.core.ComponentMgr.register('rpstoreboundtextarea',RP.ui.StoreBoundTextArea);RP.core.ComponentMgr.register('rpstoreboundtimefield',RP.ui.StoreBoundTimeField);RP.core.ComponentMgr.register('rpstoreboundtextfield',RP.ui.StoreBoundTextField);RP.core.ComponentMgr.register('rpstoreboundtimetextfield',RP.ui.StoreBoundTimeTextField);RP.core.ComponentMgr.register('rpstorebounddisplayfield',RP.ui.StoreBoundDisplayField);
Ext.ns("RP.ui");RP.ui.GridRowStyle=function(){var classMap={None:{status:0,cls:""},Resolved:{status:1,cls:"rp-grid-row-resolved"},Deleted:{status:2,cls:"rp-grid-row-deleted"},Edited:{status:3,cls:"rp-grid-row-edited"},Important:{status:4,cls:"rp-grid-row-important"},UserDefinedBegin:{status:100,cls:""}};return{getStatus:function(name){return classMap[name].status;},getDefaultStatus:function(){return classMap.None.status;},getClassByStatus:function(status){for(var name in classMap){if(classMap[name].status==status){return classMap[name].cls;}}
return classMap.None.cls;},getClassByName:function(name){if(classMap[name]){return classMap[name].cls;}
else{return classMap.None.cls;}}};}();RP.ui.GridRowStatus={None:RP.ui.GridRowStyle.getStatus("None"),Resolved:RP.ui.GridRowStyle.getStatus("Resolved"),Deleted:RP.ui.GridRowStyle.getStatus("Deleted"),Edited:RP.ui.GridRowStyle.getStatus("Edited"),Important:RP.ui.GridRowStyle.getStatus("Important"),UserDefinedBegin:100};
Ext.ns("RP.ui");RP.ui.GridView=Ext.extend(Ext.grid.GridView,{constructor:function(config){this.config=config||{};RP.ui.GridView.superclass.constructor.apply(this,arguments);},init:function(){RP.ui.GridView.superclass.init.apply(this,arguments);if(this.config.statusIcon===true){this._attachIconColumn();this.grid.on("reconfigure",this._attachIconColumn,this);}},afterRender:function(){RP.ui.GridView.superclass.afterRender.apply(this,arguments);if(this.grid.store.isLoaded){this.applyEmptyText();}
this.grid.initState();},getRowClass:function(record,index,rowParams,store){var defaultRowStyleClassFn=function(status,record){return RP.ui.GridRowStyle.getClassByStatus(status);};var status=this.config.getRowStatusFn?this.config.getRowStatusFn(record,index):RP.ui.GridRowStyle.getDefaultStatus();var cls=(this.config.getRowStyleClassFn||defaultRowStyleClassFn)(status,record);return cls+(this.config.extraRowCls?(" "+this.config.extraRowCls):"");},_attachIconColumn:function(){var cm=this.grid.colModel;var newCols=[{dataIndex:"__statusiconplaceholder__",header:" ",id:"iconColumn",menuDisabled:true,width:22,sortable:false,hidden:false,hideable:false,editable:false,renderer:function(){return'<div class="rp-view-grid-detail">&nbsp;</div>';},destroy:Ext.emptyFn}];cm.setConfig(cm.config.concat(newCols),true);},applyEmptyText:function(){RP.ui.GridView.superclass.applyEmptyText.apply(this,arguments);if(this.emptyText&&!this.hasRows()){this.mainHd.hide(false);}
else{this.mainHd.show(false);}}});
Ext.ns('RP.ui');RP.ui.GridPanel=Ext.extend(Ext.grid.GridPanel,{stripeRows:true,enableExport:false,enableExportPdf:false,enablePrint:false,enableRefresh:false,printTitle:"",initComponent:function(){var toolbar=this.tbar;if(this.enableExport||this.enableExportPdf||this.enablePrint||this.enableRefresh){var tools=[];if(this.enableRefresh)
{tools.push({id:"refresh",handler:this.reloadGrid,scope:this});}
if(this.enableExport)
{tools.push({id:"save",handler:this.exportGridAsCSV,scope:this});}
if(this.enableExportPdf)
{tools.push({id:"pdf",handler:this.exportGridAsPDF,scope:this});}
if(this.enablePrint)
{tools.push({id:"print",handler:this.printGrid,scope:this});}
var toolbarPanel={xtype:"panel",headerCfg:{},bodyCfg:{},tools:tools,width:tools.length*20};if(toolbar)
{if(typeof(toolbar.addItemsToRightBar)!=="function")
{throw new RP.Exception("Toolbar type is not supported.  Toolbar must have 'addItemsToRightBar' function.");}
toolbar.addItemsToRightBar([toolbarPanel]);}
else
{toolbar=new RP.ui.Toolbar({rightItems:[toolbarPanel]});}}
Ext.applyIf(this,{tbar:toolbar});if(this.view===null){this.view=this.gridView||new RP.ui.GridView(this.gridViewConfig||this.viewConfig);}
RP.ui.GridPanel.superclass.initComponent.call(this);},onRender:function()
{RP.ui.GridPanel.superclass.onRender.apply(this,arguments);this.addEvents("beforetooltipshow");var defaultTooltipConfig={renderTo:Ext.getBody(),target:this.view.mainBody,delegate:this.view.cellSelector,dismissDelay:0,trackMouse:true,anchor:"top",listeners:{beforeshow:this._renderTooltip,scope:this}};this.tooltip=new Ext.ToolTip(Ext.apply({},this.tooltipConfig,defaultTooltipConfig));},_renderTooltip:function(tt){var v=this.getView();var row=v.findRowIndex(tt.triggerElement);var cell=v.findCellIndex(tt.triggerElement);var colConfig=this.colModel.config[cell];if(colConfig!==undefined&&colConfig.cellTooltip===true){this.fireEvent("beforetooltipshow",this,row,cell);if(tt.body.dom.innerHTML===""){tt.hide();return false;}}
else{tt.hide();return false;}},getMarkupForPrinting:function()
{var view=this.getView();var ts=view.templates;var bak={};bak.body=ts.body;bak.master=ts.master;bak.header=ts.header;bak.hcell=ts.hcell;bak.row=ts.row;bak.cell=ts.cell;var grpBak={};grpBak.startGroup=view.startGroup;grpBak.endGroup=view.endGroup;ts.master=new Ext.Template('<table>','{header}','<tbody>','{body}','{summary}','</tbody>','</table>');ts.header=new Ext.Template('<thead><tr>{cells}</tr></thead>\n');ts.hcell=new Ext.Template('<td style="{style}">','{value}',"</td>");ts.row=new Ext.Template('<tr class="{alt}">{cells}</tr>\n');ts.cell=new Ext.Template('<td style="{style}" {cellAttr}>','{value}',"</td>");var colCount=this.colModel.getColumnCount();view.startGroup=view.rpPrintGroupStart||new Ext.XTemplate('<tr><td class="rp-print-grid-group" colspan="'+colCount+'"><div>',view.groupTextTpl,'</div></td></tr>');view.endGroup="";var cb=this._exportHeaderRow(true,ts.hcell);var header=ts.header.apply({cells:cb.join("")});var rows=this.view.renderRows();var body=ts.body.apply({rows:rows});var summary="";if(view.summary&&view.summary.dom)
{summary=this._getSummaryHTML(view.summary.dom,view);}
var html=ts.master.apply({header:header,body:body,summary:summary});view.templates=bak;view.startGroup=grpBak.startGroup;view.endGroup=grpBak.endGroup;return html;},printGrid:function()
{if(typeof(this.initialConfig.printOptionsDelegate)==="function")
{var fn=function(options)
{RP.core.CommonExtensions.printComponents({title:this.printTitle,items:this},options);};this.initialConfig.printOptionsDelegate(fn.createDelegate(this));}
else
{RP.core.CommonExtensions.printComponents({title:this.printTitle,items:this});}},reloadGrid:function()
{this.getStore().reload();},exportGridAsCSV:function(){var exportData=this._exportAsCSV();this._exportGrid(exportData,"CSV");},exportGridAsPDF:function(){var exportData=this._exportAsCSV();this._exportGrid(exportData,"PDF");},_exportGrid:function(exportData,type)
{var postExportUrl=RP.globals.getValue('POST_EXPORT_URL');var getExportUrl=RP.globals.getValue('GET_EXPORT_URL');if(typeof(postExportUrl)==="undefined")
{logger.logError("[GridPanel] RP.globals.POST_EXPORT_URL not defined");return;}
if(typeof(getExportUrl)==="undefined")
{logger.logError("[GridPanel] RP.globals.GET_EXPORT_URL not defined");return;}
var baseUrl=RP.globals.getPath('BASE_URL');Ext.Ajax.request({url:String.format("{0}?type={1}",baseUrl+postExportUrl,type),method:'POST',params:exportData.data,scope:this,headers:{'Content-Type':exportData.contentType},success:function(res)
{var key=res.responseText;window.open(baseUrl+getExportUrl+"/"+key,"rpexport","width=20,height=20,resizable=yes");},failure:function(e)
{logger.logError("Export failed");}});},_exportAsCSV:function()
{var headerRow=this._exportHeaderRow(true);var header=this._escapeColumns(headerRow);var rows=this.getView().renderRowsForExport(0,this.getStore().getCount(),this._includeColumn);var summary="";if(this.getView().summary&&this.getView().summary.dom)
{summary=this._getSummaryCSV(this.getView().summary.dom,this.getView());}
return{data:String.format("{0}\n{1}\n{2}",header,rows,summary),contentType:"text/plain; charset=utf-8"};},_includeColumn:function(column){if(typeof column.style==="string"&&column.style.indexOf("display:none;")>-1){return false;}
else if(typeof column.style==="object"&&column.style.display==="none"){return false;}
return true;},_exportHeaderRow:function(checkVisibility,cellTemplate){var columnModel=this.colModel;var len=columnModel.getColumnCount();var cols=[];for(var i=0;i<len;i++){var column={};column.id=columnModel.getColumnId(i)||"&nbsp;";column.value=columnModel.getColumnHeader(i)||" ";column.style=this.getView().getColumnStyle(i,true);if(cellTemplate){cols.push(cellTemplate.apply(column));}
else{cols.push(column);}}
return this._exportRow(cols);},_escapeColumns:function(row){var rowString=row.join("\",\"");rowString="\""+rowString+"\"";return rowString;},_getSummaryHTML:function(summaryDOM,view)
{var masterTemplate=new Ext.Template('<tr><table>','{body}','</table></tr>');var rowTemplate="<tr>{0}</tr>";var rows=Ext.query("div.rp-grid3-summary-row tr",summaryDOM);var cols,rowHTML,colHTML,colStyle,colValue,i;rowHTML=[];for(var row=0;row<rows.length;row++){cols=Ext.query("div.x-grid3-cell-inner",rows[row]);colHTML=[];for(i=0;i<cols.length;i++)
{colStyle=view.getColumnStyle(i,true);colValue=cols[i].innerHTML;colHTML.push(String.format('<td style="{0}">{1}</td>',colStyle,colValue));}
rowHTML.push(String.format(rowTemplate,colHTML.join("")));}
return masterTemplate.apply({body:rowHTML.join("")});},_getSummaryCSV:function(summaryDOM,view)
{var masterTemplate=new Ext.Template('{body}');var cols=Ext.query("div.x-grid3-cell-inner",summaryDOM);var row=this._exportRow(cols);return masterTemplate.apply({body:this._escapeColumns(row)});},_exportRow:function(cols){var row=[];for(var i=0;i<cols.length;i++){if(this._includeColumn(cols[i])){if(cols[i].innerHTML){row.push(cols[i].innerHTML);}
else if(cols[i].value){row.push(cols[i].value);}
else{row.push(cols[i]);}}}
return row;}});RP.iimplement(RP.ui.GridPanel,RP.interfaces.IPrintSource);Ext.reg("rpgridpanel",RP.ui.GridPanel);
Ext.ns('RP.ui');RP.ui.Panel=Ext.extend(Ext.Panel,{getFooterBar:function(){return this.fbar;}});Ext.reg("panel",RP.ui.Panel);
Ext.namespace("RP.ui");RP.ui.GridRowGroup=Ext.extend(Ext.grid.GroupingView,{groupRowSelector:null,hideChildRowColumns:null,initTemplates:function(){RP.ui.GridRowGroup.superclass.initTemplates.call(this);this.startGroup=new Ext.XTemplate('<div id="{groupId}" class="x-grid-group {cls}">','<div id="{groupId}-hd" class="{groupCssClass}" style="{style}">','{groupHeaderContent}','</div>','<div id="{groupId}-bd" class="x-grid-group-body">');this.startGroup.compile();this.templates.cell=new Ext.Template('<td class="x-grid3-col x-grid3-cell x-grid3-td-{id} {css} {customCSS}" style="{style}" tabIndex="0" {cellAttr}>','<div class="x-grid3-cell-inner x-grid3-col-{id}" unselectable="on" {attr}>{value}</div>','</td>');this.rpPrintGroupStart=new Ext.XTemplate('{groupHeaderContent}');this.rpPrintGroupStart.compile();},processEvent:function(name,e){var hd=e.getTarget('.x-grid-group-hd-rp',this.mainBody);if(hd&&name==="mousedown"&&e.button===0){var noChildren=!Ext.get(hd).hasClass("x-grid-group-hd-rp");if(noChildren){return;}
e.stopEvent();this.toggleGroup(hd.parentNode);}
else{RP.ui.GridRowGroup.superclass.processEvent.call(this,name,e);}},doRender:function(cs,rs,ds,startRow,colCount,stripe){if(rs.length<1){return'';}
var groupField=this.getGroupField();var colIndex=this.cm.findColumnIndex(groupField);this.enableGrouping=!!groupField;if(!this.enableGrouping||this.isUpdating){return RP.ui.GridRowGroup.superclass.doRender.apply(this,arguments);}
var gstyle='width:'+this.getTotalWidth()+';';var gidPrefix=this.grid.getGridEl().id;var cfg=this.cm.config[colIndex];var groupRenderer=cfg.groupRenderer||cfg.renderer;var prefix=this.showGroupName?(cfg.groupName||cfg.header)+': ':'';var groups=[],curGroup,i,len,gid;for(i=0,len=rs.length;i<len;i++){var rowIndex=startRow+i;var r=rs[i],gvalue=r.data[groupField],g=this.getGroup(gvalue,r,groupRenderer,rowIndex,colIndex,ds);if(!curGroup||curGroup.group!==g){gid=gidPrefix+'-gp-'+groupField+'-'+Ext.util.Format.htmlEncode(g);var isCollapsed=typeof this.state[gid]!=='undefined'?!this.state[gid]:this.startCollapsed;var gcls=isCollapsed?'x-grid-group-collapsed':'';curGroup={group:g,gvalue:gvalue,text:prefix+g,groupId:gid,startRow:rowIndex,rs:[r],cls:gcls,style:gstyle};groups.push(curGroup);}
else{curGroup.rs.push(r);}
r._groupId=gid;}
if(this.groupRowSelector){for(i=0,len=groups.length;i<len;i++){var gr=groups[i];var hdrIndex=this.groupRowSelector(gr.rs)||0;if(hdrIndex>0){var hdrRow=gr.rs[hdrIndex];gr.rs.splice(hdrIndex,1);gr.rs.unshift(hdrRow);}}}
var childrenCs=cs;if(this.hideChildRowColumns&&this.hideChildRowColumns.length){childrenCs=[];var emptyRender=function(){return"";};Ext.each(cs,function(c){var childCs=Ext.apply({},c);childrenCs.push(childCs);},this);Ext.each(childrenCs,function(c){for(var hidx=0;hidx<this.hideChildRowColumns.length;hidx++){if(c.name===this.hideChildRowColumns[hidx]){c.renderer=emptyRender;}}},this);}
var buf=[];var hdrCols=[];var col=0;Ext.each(cs,function(c){var cfg=Ext.apply({},c);if(!this.firstVisibleColID&&!this.cm.isHidden(col)){this.firstVisibleColID=c.id;}
hdrCols.push(cfg);col++;},this);var getGroupRowClass,origGetRowClass;if(this.getRowClass){origGetRowClass=this.getRowClass;getGroupRowClass=function(r,rowIndex,rp,ds){return(origGetRowClass(r,rowIndex,rp,ds)+" rp-grid-row-group");};}
else{getGroupRowClass=function(r,rowIndex,rp,ds){return"rp-grid-row-group";};}
for(i=0,len=groups.length;i<len;i++){var grp=groups[i];this.getRowClass=getGroupRowClass;var origCellApply=this.templates.cell.rpBeforeApplyFn;this.templates.cell.rpBeforeApplyFn=this.rpBeforeApplyFn.createDelegate(this);grp.groupHeaderContent=Ext.grid.GroupingView.superclass.doRender.call(this,hdrCols,grp.rs.slice(0,1),ds,grp.startRow,colCount,stripe);this.templates.cell.rpBeforeApplyFn=origCellApply;this.getRowClass=origGetRowClass;if(grp.rs.length>=2){grp.groupCssClass="x-grid-group-hd-rp";}
this.doGroupStart(buf,grp,cs,ds,colCount);buf[buf.length]=Ext.grid.GroupingView.superclass.doRender.call(this,childrenCs,grp.rs.slice(1),ds,grp.startRow+1,colCount,stripe);this.doGroupEnd(buf,grp,cs,ds,colCount);}
return buf.join('');},rpBeforeApplyFn:function(values){values.customCSS=(values.id===this.firstVisibleColID)?"rp-grid-row-group-first-cell":"";},processRows:function(startRow,skipStripe){if(!this.ds||this.ds.getCount()<1){return;}
var rows=this.getRows();skipStripe=skipStripe||!this.grid.stripeRows;startRow=startRow||0;Ext.each(rows,function(row,idx){row.rowIndex=idx;row.className=row.className.replace(this.rowClsRe,' ');if(!skipStripe&&(idx+1)%2===0){row.className+=' x-grid3-row-alt';}});if(rows.length>0){if(startRow===0){Ext.fly(rows[0]).addClass(this.firstRowCls);}
Ext.fly(rows[rows.length-1]).addClass(this.lastRowCls);}},resolveCell:function(row,col,hscroll){try{if(this.getRows().length===0){return null;}
return RP.ui.GridRowGroup.superclass.resolveCell.call(this,row,col,hscroll);}
catch(e){logger.logError(new RP.Exception("[GridRowGroup] resolveCell failed",e));return null;}},updateGroupWidths:function(){if(!this.enableGrouping||!this.hasRows()){return;}
var tw=this.cm.getTotalWidth()+'px';var gs=this.getGroups();for(var i=0,len=gs.length;i<len;i++){gs[i].firstChild.style.width=tw;gs[i].firstChild.firstChild.style.width=tw;gs[i].firstChild.firstChild.firstChild.style.width=tw;}
var colCount=gs[0].firstChild.firstChild.firstChild.rows[0].childNodes.length;Ext.each(gs,function(g){var firstVisibleColFound=false;for(var i=0;i<colCount;i++){if(firstVisibleColFound){if(this.cm.config[i].hidden===true){g.firstChild.firstChild.firstChild.rows[0].childNodes[i].style.display="none";}
else{g.firstChild.firstChild.firstChild.rows[0].childNodes[i].style.display="";}}
var w=parseInt(this.getColumnWidth(i),10);if(!firstVisibleColFound&&g.firstChild.firstChild.firstChild.rows[0].childNodes[i].style.display!=="none"){firstVisibleColFound=true;var pl=parseInt(g.firstChild.firstChild.firstChild.rows[0].childNodes[i].style.paddingLeft,10);var pr=parseInt(g.firstChild.firstChild.firstChild.rows[0].childNodes[i].style.paddingRight,10);if(!isNaN(pl)){w-=pl;}
if(!isNaN(pr)){w-=pr;}}
g.firstChild.firstChild.firstChild.rows[0].childNodes[i].style.width=w.toString()+"px";}},this);},applyEmptyText:function(){RP.ui.GridView.superclass.applyEmptyText.apply(this,arguments);if(this.emptyText&&!this.hasRows()){this.mainHd.hide(false);}
else{this.mainHd.show(false);}}});
Ext.ns("RP.ui");RP.ui.SummaryGroupingView=Ext.extend(Ext.grid.GroupingView,{customGroupCls:"rp-summary-group",defaultHeaderCls:"rp-summary-group-header",customHeaderCls:"rp-summary-group-header-custom",customBodyCls:"",defaultBodyCls:"rp-summary-group-view-body",groupTextTpl:"{groupHeaderContent}",initTemplates:function(){RP.ui.SummaryGroupingView.superclass.initTemplates.call(this);this.startGroup=new Ext.XTemplate('<div id="{groupId}" class="x-grid-group {cls} '+this.customGroupCls+'">','<div id="{groupId}-hd" class="x-grid-group-hd x-grid-group-title '+this.defaultHeaderCls+(!this.isTemplateDefault()?' '+this.customHeaderCls:'')+'" style="{style}"><div class="x-grid-group-title">',this.groupTextTpl,'</div></div>','<div id="{groupId}-bd" class="x-grid-group-body '+this.defaultBodyCls+" "+this.customBodyCls+'">');this.startGroup.compile();},doRender:function(cs,rs,ds,startRow,colCount,stripe){if(rs.length<1){return'';}
if(!this.canGroup()||this.isUpdating){return Ext.grid.GroupingView.superclass.doRender.apply(this,arguments);}
var groupField=this.getGroupField(),colIndex=this.cm.findColumnIndex(groupField),g,gstyle='width:'+this.getTotalWidth()+';',cfg=this.cm.config[colIndex],groupRenderer=cfg.groupRenderer||cfg.renderer,prefix=this.showGroupName?(cfg.groupName||cfg.header)+': ':'',groups=[],curGroup,i,len,gid;for(i=0,len=rs.length;i<len;i++){var rowIndex=startRow,r=rs[i],gvalue=r.data[groupField];g=this.getGroup(gvalue,r,groupRenderer,rowIndex,colIndex,ds);if(!curGroup||curGroup.group!=g){gid=this.constructId(gvalue,groupField,colIndex);this.state[gid]=!(Ext.isDefined(this.state[gid])?!this.state[gid]:this.startCollapsed);curGroup={group:g,gvalue:gvalue,text:prefix+g,groupId:gid,startRow:rowIndex,rs:[r],cls:this.state[gid]?'':'x-grid-group-collapsed',style:gstyle};groups.push(curGroup);}
else{curGroup.rs.push(r);}
r._groupId=gid;}
var buf=[];var hdrCols=[];Ext.each(cs,function(c){var cfg=Ext.apply({},c);hdrCols.push(cfg);},this);Ext.each(groups,function(g){if(this.isTemplateDefault()){var groupHeaderRs=[g.rs.slice(0,1)[0].copy()];Ext.each(this.cm.config,function(cfg){var newData="";if(!Ext.isEmpty(cfg.summaryType)){if(Ext.isFunction(cfg.summaryType)){newData=cfg.summaryType.call(this,g.rs,cfg.dataIndex);}
else{newData=this.determineSummaryFunction(cfg.summaryType,g.rs,cfg.dataIndex);}}
groupHeaderRs[0].data[cfg.dataIndex]=newData;},this);g.groupHeaderContent=Ext.grid.GroupingView.superclass.doRender.call(this,hdrCols,groupHeaderRs,ds,g.startRow,colCount,false);g.groupHeaderContent=g.groupHeaderContent.replace("x-grid3-row","");}
this.doGroupStart(buf,g,cs,ds,colCount);buf[buf.length]=Ext.grid.GroupingView.superclass.doRender.call(this,cs,g.rs,ds,g.startRow,colCount,stripe);this.doGroupEnd(buf,g,cs,ds,colCount);},this);return buf.join('');},updateGroupWidths:function(){if(!this.isTemplateDefault()){RP.ui.SummaryGroupingView.superclass.updateGroupWidths.apply(this,arguments);return;}
if(!this.enableGrouping||!this.hasRows()){return;}
var tw=Math.max(this.cm.getTotalWidth(),this.el.dom.offsetWidth-this.getScrollOffset())+"px";var gs=this.getGroups();for(var i=0,len=gs.length;i<len;i++){gs[i].firstChild.style.width=tw;gs[i].firstChild.firstChild.style.width=tw;gs[i].firstChild.firstChild.firstChild.style.width=tw;gs[i].firstChild.firstChild.firstChild.firstChild.style.width=tw;}
var colCount=gs[0].firstChild.firstChild.firstChild.firstChild.rows[0].childNodes.length;Ext.each(gs,function(g){var firstVisibleColFound=false;for(var i=0;i<colCount;i++){if(firstVisibleColFound){if(this.cm.config[i].hidden===true){g.firstChild.firstChild.firstChild.firstChild.rows[0].childNodes[i].style.display="none";}
else{g.firstChild.firstChild.firstChild.firstChild.rows[0].childNodes[i].style.display="";}}
var w=parseInt(this.getColumnWidth(i),10);if(!firstVisibleColFound&&g.firstChild.firstChild.firstChild.firstChild.rows[0].childNodes[i].style.display!=="none"){firstVisibleColFound=true;var pl=parseInt(g.firstChild.firstChild.firstChild.firstChild.rows[0].childNodes[i].style.paddingLeft,10);var pr=parseInt(g.firstChild.firstChild.firstChild.firstChild.rows[0].childNodes[i].style.paddingRight,10);if(!isNaN(pl)){w-=pl;}
if(!isNaN(pr)){w-=pr;}}
g.firstChild.firstChild.firstChild.firstChild.rows[0].childNodes[i].style.width=w.toString()+"px";}},this);},determineSummaryFunction:function(summaryType,rs,dataIndex){var summaryValue=0;var data={};data[dataIndex]=0;if(summaryType==="min"||summaryType==="max"){data[dataIndex]=rs[0].get(dataIndex);}
var fakeRecord={store:{getCount:function(){return rs.length;}}};Ext.each(rs,function(record,index){data[dataIndex]=RP.ui.GridSummary.Calculations[summaryType](record.get(dataIndex),fakeRecord,dataIndex,data,index);});return data[dataIndex];},isTemplateDefault:function(){return this.groupTextTpl==="{groupHeaderContent}";}});
Ext.ns('RP.ui');RP.ui.GridSummary=function(config){Ext.apply(this,config);if(!config.numSummaryRows||config.numSummaryRows<=0){throw new RP.Exception("Invalid numRows config parameter");}
this.summaryAlignment=config.summaryAlignment||'trailing';this.numSummaryRows=config.numSummaryRows;this.hideIfEmpty=config.hideIfEmpty;this.buttons=[];};Ext.extend(RP.ui.GridSummary,Ext.util.Observable,{init:function(grid){this.grid=grid;this.cm=grid.getColumnModel();this.view=grid.getView();var v=this.view;v.onLayout=this.onLayout.createDelegate(this);v.afterMethod('render',this.refreshSummary,this);v.afterMethod('refresh',this.refreshSummary,this);v.afterMethod('syncScroll',this.syncSummaryScroll,this);v.afterMethod('onColumnWidthUpdated',this.doWidth,this);v.afterMethod('onAllColumnWidthsUpdated',this.doAllWidths,this);v.afterMethod('onColumnHiddenUpdated',this.doHidden,this);grid.store.on({add:this.refreshSummary,remove:this.refreshSummary,clear:this.refreshSummary,update:this.refreshSummary,scope:this});this.addEvents('refresh');this.on('refresh',function(){Ext.each(this.buttons,function(button){var el=Ext.get(button.buttonId);if(el){el.on(button.buttonListeners);}},this);},this);if(!this.summaryTableTpl){this.summaryTableTpl=new Ext.Template('<div class="rp-grid3-summary-row x-grid3-gridsummary-row-offset">','{rows}','</div>');}
this.summaryTableTpl.disableFormats=true;var innerText=['<table class="x-grid3-summary-table" border="0" cellspacing="0" cellpadding="0" style="{tstyle}">','<tbody>','<tr>{cells}</tr>','</tbody>','</table>'].join("");if(!this.rowTpl){this.rowTpl=new Ext.Template('<div style="{tstyle}">'+innerText+'</div>');this.rowTpl.disableFormats=true;}
this.rowTpl.compile();if(!this.cellTpl){this.cellTpl=new Ext.Template('<td class="x-grid3-col x-grid3-cell x-grid3-td-{id} {css}" style="{style}">','<div class="x-grid3-cell-inner x-grid3-col-{id}" unselectable="on" {attr}>{value}</div>',"</td>");this.cellTpl.disableFormats=true;}
this.cellTpl.compile();if(!this.buttonTpl){this.buttonTpl=new Ext.Template('<td style="{style}"><button type="button" id="{buttonId}" style="{style} padding:0">{value}</button></td>');this.buttonTpl.disableFormats=true;}
this.buttonTpl.compile();},calculate:function(summaryRowIndex,rs,cm){var data={},cfg=cm.config;for(var i=0,len=cfg.length;i<len;i++)
{var cf=cfg[i],cname=cf.dataIndex;data[cname]=0;var summaryType=this.getSummaryType(cf,summaryRowIndex);if(summaryType){if(typeof(summaryType)==="function"){data[cname]=summaryType(rs);}
else{for(var j=0,jlen=rs.length;j<jlen;j++)
{var r=rs[j];var val;if(cf.summaryValue){val=cf.summaryValue(r,summaryRowIndex);}
else{val=r.get(cname);}
if(RP.ui.GridSummary.Calculations[summaryType]){data[cname]=RP.ui.GridSummary.Calculations[summaryType](val,r,cname,data,j);}
else{data[cname]="NaN";}}}}}
return data;},onLayout:function(vw,vh){if(this.grid.store.getTotalCount()===0&&this.hideIfEmpty)
{return;}
if(Ext.type(vh)!=='number'){return;}},syncSummaryScroll:function(){if(this.grid.store.getTotalCount()===0&&this.hideIfEmpty){return;}
var mb=this.view.scroller.dom;this.view.summaryWrap.dom.scrollLeft=mb.scrollLeft;this.view.summaryWrap.dom.scrollLeft=mb.scrollLeft;},doWidth:function(col,w,tw)
{if(this.grid.store.getTotalCount()===0&&this.hideIfEmpty){return;}
var s=this.view.summary.dom;for(var i=0;i<s.childElementCount;i++)
{s.childNodes[i].firstChild.style.width=tw;s.childNodes[i].firstChild.rows[0].childNodes[col].style.width=w;}},doAllWidths:function(ws,tw)
{if(this.grid.store.getTotalCount()===0&&this.hideIfEmpty){return;}
var s=this.view.summary.dom,wlen=ws.length;for(var i=0;i<s.childElementCount;i++)
{s.childNodes[i].firstChild.style.width=tw;var cells=s.childNodes[i].firstChild.rows[0].childNodes;for(var j=0;j<wlen;j++){cells[j].style.width=ws[j];}}},doHidden:function(col,hidden,tw){var s=this.view.summary.dom,display=hidden?'none':'';for(var i=0;i<s.childElementCount;i++)
{s.childNodes[i].firstChild.style.width=tw;s.childNodes[i].firstChild.rows[0].childNodes[col].style.display=display;}},renderSummary:function(summaryRowIndex,o,cs,cm){if(this.grid.store.getTotalCount()===0&&this.hideIfEmpty){return"";}
cs=cs||this.view.getColumnData();var cfg=cm.config,buf=[],last=cs.length-1;for(var i=0,len=cs.length;i<len;i++){var c=cs[i],cf=cfg[i],p={};p.id=c.id;p.style=c.style;p.css=i===0?'x-grid3-cell-first ':(i===last?'x-grid3-cell-last ':'');var summaryType=this.getSummaryType(cf,summaryRowIndex);if(summaryType||(cf.summaryRenderer&&cf.summaryRenderer(summaryRowIndex))){p.value=(((cf.summaryRenderer&&cf.summaryRenderer(summaryRowIndex))?cf.summaryRenderer(summaryRowIndex):null)||c.renderer)(o.data[c.name],p,o,summaryRowIndex,i);}
else{p.value='';}
if(p.value===undefined||p.value===""){p.value="";}
if(summaryType==="button"){var buttonId=Ext.id();var button={};var buttonListeners=cf.buttonListeners;button.buttonId=buttonId;p.buttonId=buttonId;button.buttonListeners=buttonListeners;this.buttons.push(button);buf[buf.length]=this.buttonTpl.apply(p);}
else{buf[buf.length]=this.cellTpl.apply(p);}}
return this.rowTpl.apply({cells:buf.join(''),tstyle:'width: '+this.view.getTotalWidth()});},refreshSummary:function(){var hidden=(this.grid.store.getTotalCount()===0&&this.hideIfEmpty);var rowsBuf=[];for(var i=0;i<this.numSummaryRows;i++){var g=this.grid,ds=g.store,cs=this.view.getColumnData(),cm=this.cm,rs=ds.getRange(),data=this.calculate(i,rs,cm),buf=this.renderSummary(i,{data:data},cs,cm);rowsBuf.push(buf);}
var summaryBuf=this.summaryTableTpl.apply({tstyle:'width:'+this.view.getTotalWidth()+';',rows:rowsBuf.join('')});if(!this.view.summaryWrap){var fn=Ext.DomHelper.append;if(this.summaryAlignment==='bottom'){fn=Ext.DomHelper.insertAfter;}
this.view.summaryWrap=fn.apply(Ext.DomHelper,[this.view.scroller,{tag:'div',cls:'x-grid3-gridsummary-row-inner'},true]);}
this.view.summaryWrap[hidden?'addClass':'removeClass']("x-hidden");this.view.summary=this.view.summaryWrap.update(summaryBuf).first();this.fireEvent("refresh");},toggleSummary:function(visible){var el=this.grid.getGridEl();if(el){if(visible===undefined){visible=el.hasClass('x-grid-hide-gridsummary');}
el[visible?'removeClass':'addClass']('x-grid-hide-gridsummary');this.view.layout();}},getSummaryNode:function(){return this.view.summary;},getSummaryType:function(config,summaryRowIndex){var type=config.summaryType;if(type&&Ext.isFunction(type)){type=type(summaryRowIndex);}
return type;}});Ext.reg('gridsummary',RP.ui.GridSummary);RP.ui.GridSummary.Calculations={sum:function(v,record,colName,data,rowIdx){return data[colName]+Ext.num(v,0);},count:function(v,record,colName,data,rowIdx){return rowIdx+1;},max:function(v,record,colName,data,rowIdx){return Math.max(Ext.num(v,0),data[colName]);},min:function(v,record,colName,data,rowIdx){return Math.min(Ext.num(v,0),data[colName]);},average:function(v,record,colName,data,rowIdx){var t=data[colName]+Ext.num(v,0),count=record.store.getCount();return rowIdx===count-1?(t/count):t;}};
Ext.ns("RP.ui");RP.ui.InactivityWarningDialog=Ext.extend(Ext.Window,{secondsUntilExpire:60,timeoutTask:{},id:"inactivityWarningDialog",isAjaxRequestExecuting:false,initComponent:function(){this.expireCountDown=this.secondsUntilExpire;Ext.apply(this,{title:RP.getMessage("rp.common.login.InactivityWarningTitle"),width:450,draggable:false,closable:false,resizable:false,padding:20,bodyStyle:"background-color: #fff",items:[{xtype:"box",itemId:"message",style:"font-size: 12px; margin-bottom: 30px;",html:this.getDisplayMessage()},{itemId:"pnlButtons",border:false,buttonAlign:"center",buttons:[{text:RP.getMessage("rp.common.login.ContinueButton"),id:'btnContinue',scope:this,handler:function(){RP.util.Helpers.keepSessionAlive();this.destroy();}},{text:RP.getMessage("rp.common.login.LogoutButton"),scope:this,itemId:'btnLogout',handler:function(){this.destroy();RP.util.Helpers.logout();}}]}]});RP.ui.InactivityWarningDialog.superclass.initComponent.call(this);},show:function(){Ext.getBody().maskEx();Ext.EventManager.onWindowResize(this.center,this);RP.ui.InactivityWarningDialog.superclass.show.apply(this,arguments);this.expireCountDown=this.secondsUntilExpire;var runFn=function(){this.getComponent("message").update(this.getDisplayMessage());if(this.expireCountDown--<=0&&!this.isAjaxRequestExecuting){this.isAjaxRequestExecuting=true;RP.util.Helpers.isUserActive(this.userActiveSuccess,this.expireSession,this);}};var taskCfg={run:runFn,interval:1000,scope:this};this.timeoutTask=Ext.TaskMgr.start(taskCfg);},userActiveSuccess:function(response,options){var intervalMillis=(this.secondsUntilExpire+RP.util.PageInactivityChecker.getTimeOutInSeconds())*1000;this.isAjaxRequestExecuting=false;try{var result=Ext.util.JSON.decode(response.responseText);if(Ext.isNumber(result.data)){var serverLastBrowserActivity=parseInt(result.data,10);var serverLastBrowserActivityElapsed=(new Date())-serverLastBrowserActivity;if(serverLastBrowserActivityElapsed<intervalMillis){this.destroy();return;}}
this.expireSession();}
catch(ex){this.expireSession();}},stopCountdown:function(){this.isAjaxRequestExecuting=false;Ext.TaskMgr.stop(this.timeoutTask);},destroy:function(){this.stopCountdown();Ext.getBody().unmask();Ext.EventManager.removeResizeListener(this.center,this);RP.event.AppEventManager.fire(RP.upb.AppEvents.ActiveAgain,{});RP.ui.InactivityWarningDialog.superclass.destroy.call(this);},expireSession:function(){this.stopCountdown();this.hide();RP.event.AppEventManager.fire(RP.upb.AppEvents.BeforeSessionExpired,{});RP.util.Helpers.markSessionForReAuthentication();if(!Ext.getCmp("sessionExpiredDialog")&&!Ext.getCmp("externalAuthenticationExpiredDialog")){var dialog;if(!RP.util.Helpers.isNativeLogin()){dialog=new RP.ui.ExternalAuthenticationExpiredDialog();}
else{dialog=new RP.ui.SessionExpiredDialog();}
dialog.on("destroy",this.destroy,this);dialog.show();}},getDisplayMessage:function(){return String.format(RP.getMessage("rp.common.login.InactivityWarning"),Math.max(this.expireCountDown,0));}});
Ext.ns("RP.ui");RP.ui.ExternalAuthenticationExpiredDialog=Ext.extend(Ext.Window,{id:"externalAuthenticationExpiredDialog",initComponent:function(){RP.event.AppEventManager.fire(RP.upb.AppEvents.SessionExpired,{});Ext.apply(this,{title:RP.getMessage("rp.common.login.InactivityTimeoutTitle"),width:450,draggable:false,closable:false,resizable:false,padding:20,bodyStyle:"background-color: #fff",items:[{xtype:"box",style:"font-size: 12px;",html:RP.getMessage("rp.common.login.ExternalAuthSessionExpired")},{itemId:"pnlButtons",border:false,buttonAlign:"center",buttons:[{itemId:"btnOk",text:Ext.MessageBox.buttonText.ok,handler:RP.util.Helpers.logout}]}]});RP.ui.ExternalAuthenticationExpiredDialog.superclass.initComponent.call(this);}});
Ext.apply(Ext.LoadMask.prototype,{show:function(){this.onBeforeLoad();this.hidden=false;},onLoad:function(){this.el.unmask(this.removeMask);this.hidden=true;}});
Ext.ns("RP.ui");RP.ui.TimeRange=Ext.extend(Ext.Container,{timeFormat:RP.core.Formats.Time.Default,offsetMinutes:60,startDate:new Date(),initComponent:function(){this.addEvents("change");var now=this.startDate.roundBackToHour();Ext.applyIf(this,{cls:"rp-ui-time-range",startDateTime:now,endDateTime:now.clone().addMinutes(this.offsetMinutes),layout:"table",layoutConfig:{columns:5}});this._setLastStartDate(this.startDateTime);Ext.apply(this,{items:this._createItems()});this.createListeners();RP.ui.TimeRange.superclass.initComponent.call(this);},_createItems:function(){var start=this.createStartDateTime();Ext.apply(this,start);var end=this.createEndDateTime();Ext.apply(this,end);return[this.startDateField,this.startTimeField,{xtype:"label",cls:"x-form-item",text:RP.getMessage("rp.common.components.ui.timeRange.toLabel")},this.endTimeField,this.endDateField];},createStartDateTime:function(){return{startDateField:new RP.ui.DateField({value:this._cloneAndClear(this.startDateTime)}),startTimeField:new RP.ui.TimeField({value:this.startDateTime.formatTime(this.timeFormat)})};},createEndDateTime:function(){return{endDateField:new RP.ui.DateField({value:this._cloneAndClear(this.endDateTime)}),endTimeField:new RP.ui.TimeField({value:this.endDateTime.formatTime(this.timeFormat)})};},getStartDateTime:function(){this.startTimeField.setTheDate(this.startDateField.getValue());return Ext.isEmpty(this.startTimeField.getDateTime())?null:this.startTimeField.getDateTime().clone();},getEndDateTime:function(){this.endTimeField.setTheDate(this.endDateField.getValue());return Ext.isEmpty(this.endTimeField.getDateTime())?null:this.endTimeField.getDateTime().clone();},setStartDateTime:function(startDate){this.startDateField.setValue(this._cloneAndClear(startDate));this.startTimeField.setValue(startDate.formatTime(this.timeFormat));},setEndDateTime:function(endDate){this.endDateField.setValue(this._cloneAndClear(endDate));this.endTimeField.setValue(endDate.formatTime(this.timeFormat));},createListeners:function(){this.startDateField.on({"select":this.onStartDateFieldUpdate,"change":this.onStartDateFieldUpdate,scope:this});this.endDateField.on("change",this.onEndDateFieldChange,this);this.startTimeField.on("change",this.onStartTimeFieldChange,this);this.endTimeField.on("change",this.onEndTimeFieldChange,this);this.startTimeField.on("blur",this.validateDuration,this);this.startDateField.on("blur",this.validateDuration,this);this.endTimeField.on("blur",this.validateDuration,this);this.endDateField.on("blur",this.validateDuration,this);},onEndDateFieldChange:function(){this.fireEvent("change",this.getStartDateTime(),this.getEndDateTime());},onStartDateFieldUpdate:function(field,newStartDate){var endTime=this.getEndDateTime();if(!Ext.isEmpty(endTime)){var deltaMS=this.getDurationDeltaMillis(this.lastStartDate,newStartDate);endTime.addMilliseconds(deltaMS);this.endTimeField.setValue(endTime.formatTime(this.timeFormat));this.endDateField.setValue(endTime);this._setLastStartDate(newStartDate);this.fireEvent("change",this.getStartDateTime(),this.getEndDateTime());}},onStartTimeFieldChange:function(field,newValue,oldValue){if(Ext.isEmpty(newValue)){this.startTimeField.setValue(null);}
else{this.startTimeField.setValue(newValue);var endTime=this.getEndDateTime();if(Ext.isEmpty(oldValue)&&!Ext.isEmpty(endTime)){oldValue=this.getStartDateTime().format("g:i a");}
else
if(Ext.isEmpty(oldValue)&&Ext.isEmpty(endTime)){oldValue=this.getStartDateTime().add(Date.MINUTE,-this.offsetMinutes).format("g:i a");}
if(Ext.isEmpty(endTime)){endTime=this.getStartDateTime();}
var newStartTime=this.getStartDateTime();var oldStartTime=IntervalJN.parseTimeAfterBase(oldValue,this._cloneAndClear(newStartTime));var deltaMS=this.getDurationDeltaMillis(oldStartTime,newStartTime);endTime.addMilliseconds(deltaMS);this.endTimeField.setValue(endTime.formatTime(this.timeFormat));this.endTimeField.setTheDate(endTime);this.endDateField.setValue(this._cloneAndClear(endTime));this.fireEvent("change",this.getStartDateTime(),this.getEndDateTime());}},getDurationDeltaMillis:function(oldDate,newDate){return newDate.deltaT(oldDate).ms;},onEndTimeFieldChange:function(field,newValue,oldValue){if(Ext.isEmpty(newValue)){this.endTimeField.setValue(null);}
else{var startTimeTest;if(Ext.isEmpty(this.getStartDateTime())){startTimeTest=this.getEndDateTime();}
else{startTimeTest=IntervalJN.parseTimeAfterBase(this.startTimeField.getValue(),this.startDateField.getValue().clone());}
var endTimeTest=IntervalJN.parseTimeAfterBase(this.endTimeField.getValue(),this.endDateField.getValue().clone());var endTime=this.getEndDateTime();if(this._cloneAndClear(startTimeTest).compareTo(this._cloneAndClear(endTimeTest))===0&&endTime<startTimeTest){endTime.addDays(1).clearTime();this.endTimeField.setTheDate(endTime);this.endDateField.setValue(endTime.clone());}
this.fireEvent("change",this.getStartDateTime(),this.getEndDateTime());}},validateDuration:function(){var startTime=this.getStartDateTime();var endTime=this.getEndDateTime();if(endTime<startTime){this.endTimeField.markInvalid(RP.getMessage("rp.common.components.ui.timeRange.invalidDuration"));this.endDateField.markInvalid(RP.getMessage("rp.common.components.ui.timeRange.invalidDuration"));}
else{this.endTimeField.clearInvalid();this.endDateField.clearInvalid();}},_setLastStartDate:function(date){this.lastStartDate=this._cloneAndClear(date);},_cloneAndClear:function(date){return date.clone().clearTime();}});
Ext.ns("RP.ui");RP.ui.TimeRangeDropDown=Ext.extend(RP.ui.TimeRange,{offsetMinutes:15,initComponent:function(){this.offsetMinutes=this.initialConfig.offsetMinutes;RP.ui.TimeRangeDropDown.superclass.initComponent.call(this);},createStartDateTime:function(){return{startDateField:new RP.ui.DateField({maxValue:this.initialConfig.maxValue,value:this._cloneAndClear(this.startDateTime)}),startTimeField:new RP.ui.TimeCombo({value:this.startDateTime.formatTime(this.timeFormat),format:this.timeFormat,offsetMinutes:this.offsetMinutes})};},createEndDateTime:function(){return{endDateField:new RP.ui.DateField({maxValue:this.initialConfig.maxValue,value:this._cloneAndClear(this.endDateTime)}),endTimeField:new RP.ui.TimeCombo({value:this.endDateTime.formatTime(this.timeFormat),format:this.timeFormat,offsetMinutes:this.offsetMinutes})};},createListeners:function(){RP.ui.TimeRangeDropDown.superclass.createListeners.call(this);this.startTimeField.on("focus",function(){this.endTimeField.collapse();},this);this.endTimeField.on("focus",function(){this.startTimeField.collapse();},this);}});Ext.reg("rpuitimerangedropdown",RP.ui.TimeRangeDropDown);
Ext.ns("RP.ui");RP.ui.TimeCombo=Ext.extend(Ext.form.ComboBox,{offsetMinutes:15,hoursToBoundary:12,enableAutoComplete:false,initComponent:function(){Ext.applyIf(RP.ui.TimeCombo.prototype,RP.ui.TimeField.prototype);RP.ui.TimeField.prototype.initComponent.call(this);this.offsetMinutes=this.initialConfig.offsetMinutes||this.offsetMinutes;this.hoursToBoundary=this.initialConfig.hoursToBoundary||this.hoursToBoundary;this.enableAutoComplete=this.initialConfig.enableAutoComplete||this.enableAutoComplete;this.autoSelect=false;this.enableKeyEvents=true;this.store=this.createTimes(new Date());this.doneInitialSelection=false;this.on("render",function(cmp){cmp.getEl().on("click",function(){cmp.expand();if(!this.doneInitialSelection){if(Ext.isIE){this.selectText.defer(30,this);}
else{this.selectText();}
this.doneInitialSelection=true;}},this);},this);this.on("keydown",function(field,event){if(!this.enableAutoComplete){this.collapse();this.minChars=Number.MAX_VALUE;}},this);this.on("expand",function(){this.store.loadData(this.createTimes(this.getDateTime(true)));if(!this.enableAutoComplete){this.setTheTime(this.getDateTime(true));}
this.selectByValue(this.getRawValue());this.select(this.selectedIndex+7);this.selectByValue(this.getRawValue(),false);},this);RP.ui.TimeCombo.superclass.initComponent.call(this);},createTimes:function(time){if(Ext.isEmpty(time)){time=new Date().clearTime();}
var times=[];var startDate=time.add(Date.HOUR,-this.hoursToBoundary);var date;for(date=startDate;date<startDate.add(Date.HOUR,this.hoursToBoundary*2);){date=date.add(Date.MINUTE,this.offsetMinutes);times.push(date.formatTime(this._format));}
return times;},beforeBlur:function(){RP.ui.TimeField.prototype.beforeBlur.apply(this,arguments);RP.ui.TimeCombo.superclass.beforeBlur.apply(this,arguments);},onFocus:function(){if(!Ext.isOpera){this.el.addClass(this.focusClass);}
if(!this.hasFocus){this.hasFocus=true;this.startValue=this.getRawValue();this.fireEvent("focus",this);if(!this.triggerCollapse){this.expand();}
this.triggerCollapse=false;}
this.selectText();},onSelect:function(record,index){RP.ui.TimeCombo.superclass.onSelect.apply(this,arguments);this.hasFocus=true;var value=this.store.getAt(index).json[0];if(String(value)!==String(this.startValue)){this.setRawValue(value);this.fireEvent('change',this,value,this.startValue);this.startValue=value;}},onBlur:function(){this.beforeBlur();this.el.removeClass(this.focusClass);this.hasFocus=false;this.doneInitialSelection=false;if(this.validationEvent!==false&&this.validateOnBlur&&this.validationEvent!="blur"){this.validate();}
var value=this.getRawValue();if(String(value)!==String(this.startValue)){this.fireEvent('change',this,value,this.startValue);this.startValue=value;}
this.fireEvent("blur",this);this.applyEmptyText();},onTriggerClick:function(){if(this.readOnly||this.disabled){return;}
if(this.isExpanded()){this.collapse();this.triggerCollapse=true;this.el.focus();}
else{this.onFocus({});this.el.focus();}}});Ext.reg("rpuitimecombo",RP.ui.TimeCombo);
Ext.ns("RP.ui");RP.ui.Toolbar=Ext.extend(Ext.Container,{initComponent:function(){var items=[];this._leftBar=null;this._rightBar=null;this._centerBar=null;this._containerCreated=false;if(this._hasLeftItems()||(this._hasCenterItems()&&!this._hasOnlyCenterItems())){this._createLeftBar(this.initialConfig.leftItems||[]);items=items.concat(this.getLeftBar());}
if(this._hasCenterItems()){this._createCenterBar(this.initialConfig.centerItems||[]);items=items.concat(this.getCenterBar());}
if(this._hasRightItems()||(this._hasCenterItems()&&!this._hasOnlyCenterItems())){this._createRightBar(this.initialConfig.rightItems||[]);items=items.concat(this.getRightBar());}
var containerConfig={layout:'hbox',cls:'rp-tbar-container '+this._getToolbarBackground(),hideBorders:true,items:items};Ext.apply(this,Ext.apply(this.initialConfig,containerConfig));RP.ui.Toolbar.superclass.initComponent.call(this);this._containerCreated=true;},getLeftBar:function(){return this._leftBar;},getCenterBar:function(){return this._centerBar;},getRightBar:function(){return this._rightBar;},addItemsToLeftBar:function(items){if(this._leftBar===null){this._createLeftBar(items);}
else{this._leftBar.add(items);}},addItemsToCenterBar:function(items){if(this._centerBar===null){this._createCenterBar(items);}
else{this._centerBar.add(items);}},addItemsToRightBar:function(items){if(this._rightBar===null){this._createRightBar(items);}
else{this._rightBar.add(items);}},_hasLeftItems:function(){return this.initialConfig.leftItems?true:false;},_hasCenterItems:function(){return this.initialConfig.centerItems?true:false;},_hasRightItems:function(){return this.initialConfig.rightItems?true:false;},_hasOnlyCenterItems:function(){return(this._hasCenterItems()&&!this._hasLeftItems()&&!this._hasRightItems())?true:false;},_createLeftBar:function(items){if(this._leftBar!==null){return;}
this._leftBar=new Ext.Toolbar({cls:'rp-tbar',items:items,flex:1});if(this._isContainerAlreadyCreated()){this.insert(0,this._leftBar);}},_createCenterBar:function(items){if(this._centerBar!==null){return;}
var centerConfig={layout:'hbox',layoutConfig:{pack:'center',align:'middle'},cls:'rp-tbar',items:items};if(this.initialConfig.centerWidth&&!this._hasOnlyCenterItems()){Ext.apply(centerConfig,{width:this.initialConfig.centerWidth});}
else{Ext.apply(centerConfig,{flex:1});}
this._centerBar=new Ext.Toolbar(centerConfig);if(this._isContainerAlreadyCreated()){this.insert(1,this._centerBar);}},_createRightBar:function(items){if(this._rightBar!==null){return;}
this._rightBar=new Ext.Toolbar({cls:'rp-tbar',items:["->",items],flex:1});if(this._isContainerAlreadyCreated()){this.insert(2,this._rightBar);}},_getToolbarBackground:function(){return this.initialConfig.backgroundCls||'rp-tbar-background';},_isContainerAlreadyCreated:function(){return this._containerCreated;}});Ext.reg("rptoolbar",RP.ui.Toolbar);
Ext.ns('RP.ui');RP.ui.TriCheckbox=Ext.extend(Ext.form.Checkbox,{values:[null,false,true],checkboxCls:['rp-ui-tri-checkbox-grayed',null,'rp-ui-tri-checkbox-checked'],validValues:this.values,defaultAutoCreate:{tag:'input',type:'hidden',autocomplete:'off'},onRender:function(ct,position){Ext.form.Checkbox.superclass.onRender.call(this,ct,position);this.innerWrap=this.el.wrap({tabIndex:this.tabIndex,cls:this.baseCls+'-wrap-inner'});this.wrap=this.innerWrap.wrap({cls:this.baseCls+'-wrap'});if(this.boxLabel){this.labelEl=this.innerWrap.createChild({tag:'label',htmlFor:this.el.id,cls:'x-form-cb-label',html:this.boxLabel});}
this.imageEl=this.innerWrap.createChild({tag:'img',src:Ext.BLANK_IMAGE_URL,cls:'x-checkbox'},this.el);this.imageEl.on("click",this.onClick,this);if((typeof this.value==="object"&&this.value===null)||this.value===true){this.setValue(this.value);}
else{this.setValue(false);}
this.originalValue=this.value;},getValue:function(){return Ext.form.Checkbox.superclass.getValue.call(this);},setValue:function(value){if(!(typeof value=="object"&&value===null)&&value!==true){value=false;}
if(this.validValue(value)){Ext.form.Checkbox.superclass.setValue.call(this,value);this.updateCheckCls();}
else{this.setCheckValueByIndex(this.getCheckIndex()+1);this.setValue(this.getNextCheckState());}},validValue:function(value){var valid=false;for(var ii=0;ii<this.validValues.length;ii++){var validValue=this.validValues[ii];if(value===validValue){valid=true;break;}}
return valid;},onClick:function(){this.toggleValue();},getCheckIndexByValue:function(value){for(var i=0;i<this.values.length;i++){if(value===this.values[i]){return i;}}
return 0;},getCheckIndex:function(){return this.getCheckIndexByValue(this.value);},setCheckValueByIndex:function(index){this.value=this.values[index];},setCheckState:function(state){if(typeof state==="number"){this.setCheckValueByIndex(state);}
else{var index=this.getCheckIndexByValue(state);this.setCheckValueByIndex(index);}
this.updateCheckCls();},updateCheckCls:function(){if(!this.wrap){return;}
var cls=this.checkboxCls[this.getCheckIndex()];this.wrap.replaceClass(this._checkCls,cls);this._checkCls=cls;},getNextCheckState:function(){return this.values[(this.getCheckIndex()+1)%this.values.length];},toggleValue:function(){if(!this.disabled&&!this.readOnly){this.setValue(this.getNextCheckState());}},afterRender:function(){Ext.form.Checkbox.superclass.afterRender.call(this);}});Ext.reg('rpuitricheckbox',RP.ui.TriCheckbox);
Ext.ns("RP.ui");RP.ui.DatePickerToolbar=Ext.extend(RP.ui.Toolbar,{initComponent:function()
{var config={leftItems:this.initialConfig.leftItems||[],centerItems:this.initialConfig.datePicker,rightItems:this.initialConfig.rightItems||[],centerWidth:this.initialConfig.centerWidth||150};Ext.apply(this,Ext.apply(this.initialConfig,config));RP.ui.DatePickerToolbar.superclass.initComponent.call(this);}});Ext.reg("rpdatepickertoolbar",RP.ui.DatePickerToolbar);
Ext.ns("RP.help");RP.help.RoboHelpLink=(function()
{var mainUrl;var showHelp=function(target,urlHashTranslatorFn)
{var w,urlHash=window.location.hash;if(urlHash)
{var mapped=urlHashTranslatorFn(urlHash);var url=mapped;if(mapped!==null){w=window.open(url,target,"height=680,left=700,location=no,menubar=no,resizable=yes,scrollbars=yes,status=no,titlebar=no,toolbar=no,top=20,width=500,zoominherit=no");w.focus();}
else{Ext.Msg.show({title:RP.getMessage("rp.common.misc.NoHelpFoundTitle"),msg:RP.getMessage("rp.common.misc.NoHelpFoundText"),buttons:Ext.Msg.OK,icon:Ext.MessageBox.WARNING});}}
else
{w=window.open(mainUrl,target,"height=680,left=400,top=20,width=800,location=no,menubar=no,resizable=yes,scrollbars=yes,status=no,titlebar=no,toolbar=no,zoominherit=no");w.focus();}};return{createHelpLink:function(config,mainURL,helpLabel,windowTarget,urlHashTranslatorFn)
{mainUrl=mainURL;return Ext.ComponentMgr.create(RP.util.Object.mergeProperties({id:'roboHelpLink',xtype:"hyperlink",text:helpLabel,handler:function()
{showHelp(windowTarget,urlHashTranslatorFn);}},config));}};})();
RP.help.HelpRegistry=(function(){var appIdMap={};var defaultHelpURL="";return{setDefaultHelpURL:function(url){defaultHelpURL=url;},register:function(appId,rootHelpUrl){appIdMap[appId]=rootHelpUrl;},getHelpRootURL:function(appId){if(appIdMap[appId]){return appIdMap[appId];}
else{return null;}}};})();
Ext.ns('RP.taskflow');RP.taskflow.BaseTaskflowWidget=Ext.extend(Ext.Panel,{disabledWidget:false,hyperlinkCls:"rp-widget-hyperlink",taskForm:null,initComponent:function(){this._taskContext=this.createDefaultTaskContext();if(this.initialConfig.xtype){var signature=RP.core.ComponentMgr.getSignature(this.initialConfig.xtype);for(var property in signature){var sig=signature[property];if(sig&&sig.required&&sig.direction.search(/in/i)!==-1&&!this.initialConfig[property]){logger.logDebug("[BaseTaskflowWidget] Required input config property: "+
property+" is missing on Widget: "+
this._getWidgetTitle());}}}
var extraCls=Ext.value(this.initialConfig.extraCls,this.hyperlinkCls,true);extraCls+=(this.initialConfig.hasPanel?"":" rp-widget-no-panel");this.initialConfig.cls="rp-vantage-item"+(extraCls?(" "+extraCls):"");this.initialConfig.anchor="100%";this.initialConfig.frame=true;this.title=this._getWidgetTitle();Ext.apply(this,this.initialConfig);RP.taskflow.BaseTaskflowWidget.superclass.initComponent.call(this);if(this.disabledWidget){this.addClass("rp-disabled-widget");}
this.addEvents("rpext-widgetclick","rpext-widgetchange");if(this.initialConfig.appEventHandlers){RP.event.AppEventProxy.registerListener(this,true);Ext.each(this.initialConfig.appEventHandlers,function(eh){RP.event.AppEventProxy.subscribe(eh.event,this,eh.handler,eh.removeDuplicates);},this);}
this.on("destroy",function(){this._taskflow=null;},this);},render:function(){RP.taskflow.BaseTaskflowWidget.superclass.render.apply(this,arguments);this.onRendered();},onRendered:function(c){this.mon(this.header,"click",this.onClick,this);this.mon(this.body,"click",this.onClick,this);if(this.onPostRender){this.onPostRender();}},onPostRender:function(){this.setActive(this.activeWidget);this._writeLine();this.el.addClassOnClick("rp-pressed-item");this.el.addClassOnOver("rp-hover-item");},createDefaultTaskContext:function(){return{};},getLocalContext:function(){return this.getTaskflow().getTaskMetadata(this.getTaskId()).getLocalContext();},getLocalContextValue:function(name){return this.getLocalContext()[name];},setLocalContextValue:function(name,value){var lc=this.getTaskflow().getTaskMetadata(this.getTaskId()).getLocalContext();lc[name]=value;},setTaskflow:function(tf){this._taskflow=tf;},getTaskflow:function(){return this._taskflow;},setTaskId:function(taskId){this._taskId=taskId;},getTaskId:function(){return this._taskId;},initializeLocalContext:Ext.emptyFn,getEnabled:function(){return!this.disabledWidget;},setEnabled:function(enabled){this.disabledWidget=!enabled;if(this.disabledWidget){this.addClass("rp-disabled-widget");}
else{this.removeClass("rp-disabled-widget");if(this.rendered){this.header.dom.disabled=false;}}},createTaskForm:Ext.emptyFn,getTaskForm:function(){return this.taskForm;},raiseWidgetClick:function(){if(!this.disabledWidget){this.fireEvent("rpext-widgetclick",this);}},subscribeWidgetClick:function(delegate){this.mon(this,"rpext-widgetclick",delegate);},unsubscribeWidgetClick:function(delegate){this.mun(this,"rpext-widgetclick",delegate);},raiseWidgetChange:function(){this.fireEvent("rpext-widgetchange");},subscribeWidgetChange:function(delegate){this.mon(this,"rpext-widgetchange",delegate);},unsubscribeWidgetChange:function(delegate){this.mun(this,"rpext-widgetchange",delegate);},getTaskContext:function(){return this._taskContext;},setTaskContext:function(taskContext){var oldCtx=RP.core.PageContext.encodeContextAsHashValue(this._taskContext);var newCtx=RP.core.PageContext.encodeContextAsHashValue(taskContext);if(oldCtx!==newCtx){if(RP.globals.CURRENT_HASH.taskID===this.getTaskId()){RP.core.PageContext.updateTaskContext(taskContext);}
this._taskContext=taskContext;this.onTaskContextChanged();}},onTaskContextChanged:Ext.emptyFn,setActive:function(isActive){if(isActive){this.activeWidget=true;this.addClass("rp-active-item");}
else{this.activeWidget=false;this.removeClass("rp-active-item");}},onClick:function(ev,target,options){if(ev){ev.stopEvent();target.blur();}
this.raiseWidgetClick();},_getWidgetTitle:function(){return(this.initialConfig.title||this.initialConfig.uiTitle||this.title||this.uiTitle||"&nbsp;");},_writeLine:function(){if(this.disabledWidget){this.header.dom.disabled=true;}
this.header.dom.innerHTML=String.format("<div class='x-panel-header-text rp-ellipsis'>{0}</div>",RP.getMessage(this.title));this._addWidgetQtip();},_addWidgetQtip:function(){var element=this.header.first();var textWidth=element.getTextWidth();var containerWidth=element.getWidth();if(textWidth>containerWidth){element.set({qtip:RP.getMessage(this.title)});}},_getTaskFormItemId:function(){return this.initialConfig.itemId+"-taskform";}});RP.iimplement(RP.taskflow.BaseTaskflowWidget,RP.interfaces.ITaskWidget);
Ext.ns("RP.taskflow");RP.taskflow.TaskflowWidgetRegistry=function(){function xtypeFn(appId,xtype){return appId+"-"+xtype;}
var registeredWidgets={};return{register:function(config){if((config.appId.length===0)||(config.appId.toLowerCase()!==config.appId)){throw new RP.Exception("appId must be lower-case and not empty - "+config.appId);}
if((config.xtype.length===0)||(config.xtype.toLowerCase()!==config.xtype)){throw new RP.Exception("xtype must be lower-case and not empty - "+config.xtype);}
logger.logTrace("[TaskflowWidgetRegistry] Adding to registry. appId: "+config.appId+"; xtype: "+config.xtype);var xtypeName=xtypeFn(config.appId,config.xtype);if(config.paramArray===undefined||config.paramArray===null){config.paramArray=[];}
RP.core.ComponentMgr.register(xtypeName,config.classRef,config.paramArray);registeredWidgets[config.xtype]=Ext.apply({},config);},getWidgetXtype:function(appId,xtype,config){var cfg=config||{};cfg.xtype=xtypeFn(appId,xtype);return cfg;},getAll:function(){var defs=[];Ext.iterate(registeredWidgets,function(name,def){defs.push(Ext.apply({},def));});return defs;}};}();RP.registerWidget=RP.taskflow.TaskflowWidgetRegistry.register;RP.getWidgetXtype=RP.taskflow.TaskflowWidgetRegistry.getWidgetXtype;
Ext.ns('RP.taskflow');RP.taskflow.BaseTaskflowWidgetWithPanel=Ext.extend(RP.taskflow.BaseTaskflowWidget,{initComponent:function(){var config=this.initialConfig;var bodyCfg=config.bodyCfg||{};config.bodyCfg=RP.util.Object.mergeProperties({height:bodyCfg.height||config.panelHeight||50,cls:"rp-widget-panel"},bodyCfg);config.hasPanel=true;config.extraCls=(config.extraCls||"")+" rp-widget-with-panel";config.layout=config.layout||"fit";config.items=config.panel;RP.taskflow.BaseTaskflowWidgetWithPanel.superclass.initComponent.call(this);},onPostRender:function(){this.setActive(this.activeWidget);this._writeLine();this.el.addClassOnClick("rp-pressed-panel");this.el.addClassOnOver("rp-hover-item");}});
Ext.ns('RP.taskflow');RP.taskflow.BaseTaskflowHyperlinkWidget=Ext.extend(RP.taskflow.BaseTaskflowWidget,{initComponent:function(){Ext.apply(this,{extraCls:"rp-widget-hyperlink"});RP.taskflow.BaseTaskflowHyperlinkWidget.superclass.initComponent.call(this);},_writeLine:function(){if(this.disabledWidget){this.header.dom.disabled=true;}
this.header.dom.innerHTML=String.format("<div class='x-panel-header-text'>{0}</div>",this.title);},_addParamToUrl:function(p){var param=this.initialConfig[p];if(Ext.isDate(this.initialConfig[p])){param=Date.encodeDateToURL(this.initialConfig[p]);}
return param;}});
Ext.ns("RP.taskflow");RP.taskflow.ExternalAppWidget=Ext.extend(RP.taskflow.BaseTaskflowWidget,{createTaskForm:function()
{this.taskForm=new RP.taskflow.ExternalAppTaskForm({url:this.initialConfig.url,frameTitle:this.initialConfig.frameTitle,itemId:this._getTaskFormItemId()});}});RP.registerWidget({appId:"stash",description:"External app widget",xtype:"external-app",classRef:RP.taskflow.ExternalAppWidget,paramArray:[]});
Ext.ns('RP.taskflow');RP.taskflow.BaseTaskForm=Ext.extend(Ext.Panel,{noHeader:false,initComponent:function(){logger.logTrace("[BaseTaskForm] initComponent itemId: "+this.itemId);RP.event.AppEventProxy.registerListener(this,false);if(this.initialConfig.appEventHandlers){Ext.each(this.initialConfig.appEventHandlers,function(eh){logger.logTrace("[BaseTaskForm] Subscribing to app event: "+eh.event);RP.event.AppEventProxy.subscribe(eh.event,this,eh.handler,eh.removeDuplicates);},this);}
Ext.apply(this,{frame:!this.noHeader});RP.taskflow.BaseTaskForm.superclass.initComponent.call(this);},dirtyWarningMessageId:"rp.common.misc.DirtyWarningMessage",isDirty:Ext.emptyFn,destroy:function(){logger.logTrace("[BaseTaskForm] destroyed itemId: "+this.itemId);RP.event.AppEventProxy.unregisterListener(this);RP.taskflow.BaseTaskForm.superclass.destroy.call(this);},onActivate:function(){logger.logTrace("[BaseTaskForm] onActivate itemId: "+this.itemId);window.onbeforeunload=function(){if(Ext.isFunction(this.isDirty)&&this.isDirty()===true){this.checkLeavePage.defer(3000);return RP.getMessage(this.dirtyWarningMessageId);}
window.leavingPage=true;}.createDelegate(this);RP.event.AppEventProxy.setState(this,true);},checkLeavePage:function(){if(Ext.Ajax.activeRequests>0){window.leavingPage=true;}
var reset=function(){window.leavingPage=false;}.defer(3000);},onBeforeDeactivate:function(cb){cb(true);},onDeactivate:function(){logger.logTrace("[BaseTaskForm] onDeactivate itemId: "+this.itemId);RP.event.AppEventProxy.setState(this,false);},getUrlHash:function(){if(!this.__urlHash){this._urlHash=Ext.id();}
return this.__urlHash;},setUrlHash:function(hash){this.__urlHash=hash;}});RP.iimplement(RP.taskflow.BaseTaskForm,RP.interfaces.ITaskForm);RP.core.ComponentMgr.register("rptaskform",RP.taskflow.BaseTaskForm,[]);
Ext.ns("RP.taskflow");RP.taskflow.BaseTaskFormWithDateMenu=Ext.extend(RP.taskflow.BaseTaskForm,{initComponent:function(){if(!this.dateMenuConfig){throw new RP.Exception("Missing required dateMenuConfig.");}
this._dateMenu=new RP.form.DirectionalDateField(this.dateMenuConfig);Ext.apply(this,{noHeader:true,header:false,tbar:this.createHeaderToolbar()});RP.taskflow.BaseTaskFormWithDateMenu.superclass.initComponent.apply(this,arguments);},getDateMenu:function(){return this._dateMenu;},createHeaderToolbar:function(){return{xtype:"container",layout:{type:"hbox",align:"middle"},cls:"rp-header-toolbar",defaults:{flex:1},items:[{xtype:"box",html:this.title},{xtype:"container",layout:{type:"hbox",pack:"center"},items:this.getDateMenu()},{xtype:"box"}]};}});
Ext.ns("RP.taskflow");RP.taskflow.ExternalAppTaskForm=Ext.extend(RP.taskflow.BaseTaskForm,{initComponent:function()
{var iframe=new Ext.ux.IFrameComponent({url:this.initialConfig.url||"about:blank"});Ext.apply(this,{items:iframe,layout:"fit",header:this.initialConfig.frameTitle?true:false,noHeader:this.initialConfig.frameTitle?false:true,title:this.initialConfig.frameTitle});RP.taskflow.ExternalAppTaskForm.superclass.initComponent.call(this);}});RP.core.ComponentMgr.register("rpexternalapp",RP.taskflow.ExternalAppTaskForm,[]);
Ext.ns("RP.taskflow");RP.taskflow.TaskContext=Ext.extend(Ext.util.Observable,{constructor:function(config){this._taskCfg=config.taskCfg;this._localContext=Ext.apply({},config.initialContext);this.addEvents("statuschanged","localcontextchanged");RP.taskflow.TaskContext.superclass.constructor.call(this);},getConfig:function(){return this._taskCfg;},subscribeStatusChange:function(handler){this.on("statuschanged",handler);},unsubscribeStatusChange:function(handler){this.un("statuschanged",handler);},fireStatusChange:function(){this.fireEvent("statuschanged",this);},getLocalContext:function(handler){return this._localContext;}});RP.iimplement(RP.taskflow.TaskContext,RP.interfaces.ITaskContext);
Ext.ns("RP.taskflow");RP.taskflow.Taskflow=Ext.extend(Ext.util.Observable,{constructor:function(config){RP.taskflow.Taskflow.superclass.constructor.call(this,null);this.initialConfig=Ext.apply({},config);this.flowContext=Ext.apply(config.initialContext||{},{});this._context={};this._initialized=false;this._completed=false;this._roster=null;this.addEvents("rpext-init","rpext-initialized","rpext-starting","rpext-task-completed","rpext-completed");if(Ext.isObject(config.listeners)){var l=config.listeners;var scope=l.scope||this;if(l.init){this.addInitListener(l.init.createDelegate(scope));}
if(l.afterInit){this.addPostInitListener(l.afterInit.createDelegate(scope));}
if(l.beforeStart){this.addTaskflowStartListener(l.beforeStart.createDelegate(scope));}
if(l.complete){this.addTaskflowCompletedListener(l.complete.createDelegate(scope));}}},getTaskflowContext:function(){return this._context;},mergeTaskflowContext:function(context){this._context=RP.mergeProperties(this._context,context);RP.core.PageContext.updateTaskflowContext(context);},getTaskflowUIConfig:function(){return this.initialConfig.uiConfig;},addInitListener:function(cb){this.on("rpext-init",cb);},addPostInitListener:function(cb){this.on("rpext-initialized",cb);},addTaskflowStartListener:function(cb){this.on("rpext-starting",cb);},addTaskCompletedListener:function(cb){this.on("rpext-task-completed",cb);},addTaskflowCompletedListener:function(cb){this.on("rpext-completed",cb);},setRebuildHandler:function(cb){this._rebuildHandler=cb;},rebuild:function(config){this._rebuildHandler(config);},isInitialized:function(){return this._initialized;},isCompleted:function(){return this._completed;},initTaskflow:function(initCompletedFn){this._completed=false;this._roster=new Ext.util.MixedCollection();var evtName="rpext-init";if(Ext.isObject(this.events[evtName])){var count=this.events[evtName].listeners.length;var continueFn=function(){count--;if(count===0){this._signalInitialized(initCompletedFn);}};this.fireEvent(evtName,this,continueFn.createDelegate(this));}
else{this._signalInitialized(initCompletedFn);}},getTaskflowDescription:function(){if(this.initialConfig.uiConfig){return this.initialConfig.uiConfig.description;}
return null;},setTaskflowDescription:function(desc){this.initialConfig.uiConfig=this.initialConfig.uiConfig||{};this.initialConfig.uiConfig.description=desc;},getDefaultTaskId:function(){return this.initialConfig.defaultTaskId;},getTaskflowRoster:function(tfConfig){return this.initialConfig.roster;},createTaskWidgetConfig:function(taskConfig){if(!taskConfig.id){logger.logDebug("[Taskflow] Roster item missing 'ID' member.");return null;}
var signature=RP.core.ComponentMgr.getSignature(taskConfig.widget.xtype);var tfCtx=this._mapFlowToLocalContext(taskConfig.inParameterMapping,{},signature);var widgetConfig=RP.mergeProperties(taskConfig.widget,tfCtx);this._roster.add(taskConfig.id,{taskContext:this._createTaskMetadata(taskConfig,tfCtx),widgetCfg:widgetConfig,completed:null});return widgetConfig;},getTaskMetadata:function(taskID){return this._roster.get(taskID).taskContext;},startTaskflow:function(tfConfig){this.fireEvent("rpext-starting",this);},updateStatus:function(){if(this._completed){return;}
this._roster.each(function(rosterItem){var taskContext=rosterItem.taskContext;var localContext=RP.mergeProperties(rosterItem.widgetCfg,taskContext.getLocalContext());var signature=RP.core.ComponentMgr.getSignature(localContext.xtype);var taskCfg=taskContext.getConfig();this._mapLocalToFlowContext(taskCfg.outParameterMapping,localContext,signature);},this);var waiter=null;var waitObjs=[];var waitedReturnFn=function(rosterItem){if(Ext.isObject(waiter)){waiter.remove(rosterItem);}
else{waitObjs.remove(rosterItem);}};this._roster.each(function(rosterItem){var taskContext=rosterItem.taskContext;var localContext=RP.mergeProperties(rosterItem.widgetCfg,taskContext.getLocalContext());var signature=RP.core.ComponentMgr.getSignature(localContext.xtype);var taskCfg=taskContext.getConfig();this._mapFlowToLocalContext(taskCfg.inParameterMapping,taskContext.getLocalContext(),signature);this._mapFlowToLocalContext(taskCfg.inParameterMapping,rosterItem.widgetCfg,signature);this._calculateTaskStatus(rosterItem,waitObjs,waitedReturnFn);},this);var tfCompletedCalcFn=(function(){var taskflowComplete=true;this._roster.each(function(rosterItem){taskflowComplete=taskflowComplete&&rosterItem.completed;},this);if(taskflowComplete){this._completed=true;this.fireEvent("rpext-completed",this);}}).createDelegate(this);if(Ext.isEmpty(waitObjs)){tfCompletedCalcFn();}
else{waiter=new RP.util.Waiter({objs:waitObjs,handler:tfCompletedCalcFn});}},isTaskCompleted:function(taskID){var rosterItem=this._roster.get(taskID);return rosterItem.completed;},setTaskCompleted:function(taskID,completedStatus){this._setTaskCompleted(this._roster.get(taskID),completedStatus);this.updateStatus();},getTaskConfig:function(taskID){var rosterItem=this._roster.get(taskID);return rosterItem.taskContext.getConfig();},_createTaskMetadata:function(taskCfg,initialContext){return new RP.taskflow.TaskContext({taskCfg:Ext.apply({},taskCfg),initialContext:initialContext});},_setTaskCompleted:function(rosterItem,completedStatus){var fire=(completedStatus&&!rosterItem.completed);rosterItem.completed=completedStatus;if(fire){this.fireEvent("rpext-task-completed",this,rosterItem.taskContext.getConfig());}},_mapLocalToFlowContext:function(map,localContext,signature){if(map){for(var property in map){var localName=map[property];if(!signature[localName]||signature[localName].direction.search(/out/i)===-1){logger.logDebug("[Taskflow] Parameter "+localName+" doesn't exist");}
this.flowContext[property]=localContext[localName];}}
return this.flowContext;},_mapFlowToLocalContext:function(map,localContext,signature){if(map){for(var property in map){var localName=map[property];if(!signature[localName]||signature[localName].direction.search(/in/i)===-1){logger.logDebug("[Taskflow] Parameter "+localName+" doesn't exist");}
localContext[localName]=this.flowContext[property];}}
return localContext;},_calculateTaskStatus:function(rosterItem,waitObjs,waitedResultFn){var taskContext=rosterItem.taskContext;var taskCfg=taskContext.getConfig();var statusCalculation=taskCfg.statusCalculation;var localContext=RP.mergeProperties(rosterItem.widgetCfg,taskContext.getLocalContext());var statusResultFn=(function(result){this._setTaskCompleted(rosterItem,result);waitedResultFn(rosterItem);}).createDelegate(this);if(taskCfg.completeTaskOnClick){return rosterItem.completed;}
else
if(!Ext.isDefined(statusCalculation)){this._setTaskCompleted(rosterItem,true);}
else
if(Ext.isString(statusCalculation)){logger.logTrace(String.format("[Taskflow] Performing eval() on '{0}' to set statusCalculation for '{1}'.",statusCalculation,localContext.itemId));statusCalculation=eval(statusCalculation);}
if(Ext.isFunction(statusCalculation)){waitObjs.push(rosterItem);statusCalculation.call({},localContext,this.flowContext,statusResultFn);}},_signalInitialized:function(initCompletedFn){this._initialized=true;initCompletedFn();this.fireEvent("rpext-initialized",this);}});RP.iimplement(RP.taskflow.Taskflow,RP.interfaces.ITaskflow2);
Ext.ns("RP.taskflow");RP.taskflow.TaskflowContainer=Ext.extend(RP.ui.AccordionScrollPanel,{initComponent:function(){logger.logTrace("[TaskflowContainer] initComponent; taskflow: "+this.initialConfig.taskflow+"; itemId: "+this.itemId);this._taskflow=null;this._initializing=false;this._widgets=null;this._activeWidget=null;if(!this.initialConfig.title){this.title="[Untitled Task Flow]";}
else if(this.initialConfig.isTitleMessageName){this.title=RP.getMessage(this.title);}
Ext.apply(this,{border:false,headerAsText:false,headerCfg:{tag:"div",cls:"x-panel-header rp-taskflow-header",children:[{tag:"div",cls:"left",children:[{tag:"div",cls:"right",children:[{tag:"div",cls:"middle",children:[{tag:"div",cls:"rp-ellipsis",children:[{tag:"span",cls:"x-panel-header-text"}]}]}]}]}]}});RP.taskflow.TaskflowContainer.superclass.initComponent.call(this);this.addEvents("rpext-appactivated","rpext-tf-created","rpext-tf-aborted");this.mon(this,"expand",this._onExpand,this);this.on("destroy",this._onDestroy,this);},setTitle:function(title,iconCls){this.title=title;if(this.header){this.header.child('span').update(title);}
if(iconCls){this.setIconClass(iconCls);}
this.fireEvent('titlechange',this,title);return this;},getTaskflowName:function(){return this.initialConfig.taskflow;},getTaskflow:function(){return this._taskflow;},onDeactivated:function(){this._deactivateCurrentWidget();},activateDefaultWidget:function(){if(!this.rendered||!this._taskflow){this._activateDefaultWidget=true;return;}
var activateFn=(function(){logger.logTrace("[TaskflowContainer] Activating widget...");this.ensureTaskflowInitialized();var idx=0;var defaultWidget=this.getWidgetByID(this._taskflow.getDefaultTaskId());if(defaultWidget){idx=this._widgets.indexOf(defaultWidget);}
var widget=this._widgets.itemAt(idx);while(widget.disabledWidget){widget=this._widgets.itemAt(++idx);}
this.onWidgetClick(widget,undefined);}).createDelegate(this);if(this._widgets&&this._widgets.getCount()>0){activateFn();}
else
if(!this._started){this._taskflow.addPostInitListener(activateFn);}},onWidgetClick:function(widget){if((widget!==this._activeWidget)){var fn=function(result){if(result){this._widgetClickHandler(widget);}
else{logger.logTrace("[TaskflowContainer] onWidgetClick widget canceled; itemId: "+widget.itemId);}};this._beforeAppActivateHandler(fn.createDelegate(this));}
else{this._widgetClickHandler(widget);}},getWidgetByID:function(id){if(this._widgets){return this._widgets.get(id);}
return null;},setBeforeAppActivateHandler:function(cb){this._beforeAppActivateHandler=cb;},addApplicationActivatedHandler:function(cb){this._addEventHandler("rpext-appactivated",cb);},addTaskflowCreationListener:function(cb){this.on("rpext-tf-created",cb);},removeTaskflowCreationListener:function(cb){this.un("rpext-tf-created",cb);},addTaskflowAbortHandler:function(cb){this.on("rpext-tf-aborted",cb);},setRebuildTaskflowHandler:function(delegate){this._rebuildHandler=delegate;},rebuild:function(config){this._rebuildHandler(this.getTaskflow(),config.title,config);},getActiveWidget:function(){return this._activeWidget;},_addEventHandler:function(evtName,cb){if(this.rendered){this.mon(this,evtName,cb);}
else{this.on("render",function(){this.mon(this,evtName,cb);});}},_removeEventHandler:function(evtName,cb){this.mun(this,evtName,cb);},_onExpand:function(){this.ensureTaskflowInitialized();},_onDestroy:function(){if(this._widgets){this._widgets.each(function(widget){var taskForm=widget.getTaskForm();if(taskForm){taskForm.destroy();}},this);}},ensureTaskflowInitialized:function(){var itf;if(this._taskflow||this._initializing){return;}
this._initializing=true;var initProgressMask=new Ext.LoadMask(this.getEl(),{msg:RP.getMessage("rp.common.misc.LoadingMaskText")});initProgressMask.show.defer(5,initProgressMask);logger.logTrace("[TaskflowContainer] ensureTaskflowInitialized() starting");var steps=new RP.util.FunctionQueue();if(!this._taskflow){steps.add(this._loadTaskflowCodeStep.createDelegate(this));}
steps.add(this._initTaskflowStep.createDelegate(this));steps.execute((function(){initProgressMask.hide();this._initializing=false;this.doLayout();logger.logTrace("[TaskflowContainer] ensureTaskflowInitialized() completed successfully");}).createDelegate(this),(function(){if(window.leavingPage){return;}
initProgressMask.hide();this._initializing=false;this.doLayout();logger.logFatal("[TaskflowContainer] ensureTaskflowInitialized() completed with ERROR");Ext.Msg.alert(RP.getMessage("rp.common.misc.Error"),RP.getMessage("rp.common.misc.TaskflowInitFailed"));}).createDelegate(this));},_loadTaskflowCodeStep:function(successFn,errorFn){var createTFSuccessFn=(function(tf){this._taskflow=tf;this.fireEvent("rpext-tf-created",this);var itf=RP.iget(this._taskflow,RP.interfaces.ITaskflow2);if(!itf){logger.logDebug("[TaskflowContainer] Taskflow does not implement the RP.interfaces.ITaskflow2 interface");errorFn();return;}
itf.addTaskCompletedListener(this._onTaskCompleted.createDelegate(this));itf.addTaskflowCompletedListener(this._onTaskflowCompleted.createDelegate(this));itf.setRebuildHandler(this.rebuild.createDelegate(this));if(this._activateDefaultWidget){this.activateDefaultWidget();}
successFn();}).createDelegate(this);var createTFFailedFn=(function(tfDef){this.fireEvent("rpext-tf-aborted",this);errorFn();}).createDelegate(this);RP.createTaskflow(this.initialConfig.taskflow,this.initialConfig.initialContext,createTFSuccessFn,createTFFailedFn);},_initTaskflowStep:function(successFn,errorFn){var itf=RP.iget(this._taskflow,RP.interfaces.ITaskflow2);if(!itf.isInitialized()){try{itf.initTaskflow((function(){this._loadWidgets(successFn,errorFn);this.fixScroll.defer(10,this);}).createDelegate(this));}
catch(e){logger.logError(e);errorFn();if(RP.globals.SERVER_TYPE==="development"){throw e;}}}},_loadWidgets:function(successFn,errorFn){var itf=RP.iget(this._taskflow,RP.interfaces.ITaskflow2);var tfConfig=Ext.apply({},this.initialConfig);var roster=itf.getTaskflowRoster(tfConfig);var widgetContainer=new Ext.Container();this._widgets=new Ext.util.MixedCollection();Ext.each(roster,function(item){var widgetCfg=itf.createTaskWidgetConfig(item);if(typeof widgetCfg.itemId==="undefined"){widgetCfg.itemId=item.id;}
if(widgetCfg){var widget=Ext.ComponentMgr.create(widgetCfg);var iwidget=RP.iget(widget,RP.interfaces.ITaskWidget);iwidget.setTaskflow(this._taskflow);iwidget.setTaskId(item.id);iwidget.initializeLocalContext();iwidget.subscribeWidgetClick(this.onWidgetClick.createDelegate(this));iwidget.subscribeWidgetChange(this._onWidgetChange.createDelegate(this));this._widgets.add(item.id,widget);widget.failedDependencies=[];widget.on("render",function(){if(Ext.isIE){this.mon(widget.el,"mouseenter",this._handleMouseOver,widget);this.mon(widget.el,"mouseleave",this._handleMouseOut,widget);}
else{this.mon(widget.el,"mouseover",this._handleMouseOver,widget);this.mon(widget.el,"mouseout",this._handleMouseOut,widget);}},this);}},this);var descriptionText=itf.getTaskflowDescription();var uicfg=itf.getTaskflowUIConfig();var descriptionComp;if(uicfg){if(uicfg.createDescriptionCompFn){descriptionComp=new Ext.Panel({itemId:"description",cls:"rp-taskflow-description",layout:"fit",items:uicfg.createDescriptionCompFn(this._taskflow,descriptionText)});}
else
if(descriptionText){descriptionComp=new Ext.Panel({itemId:"description",html:descriptionText,cls:"rp-taskflow-description"});}
if(descriptionComp){this.add(descriptionComp);}}
widgetContainer.add(this._widgets.getRange());this.add(widgetContainer);itf.startTaskflow();this._onWidgetChange();successFn();},_widgetClickHandler:function(widget){logger.logTrace("[TaskflowContainer] Widget clicked itemId: "+widget.itemId);var newInst=false;if(!widget.getTaskForm()){widget.createTaskForm();if(!widget.getTaskForm()){return;}
if(!widget.taskForm.itemId){logger.logWarning("[TaskflowContainer] Task form for widget with itemId '"+widget.itemId+"' is missing itemId.  Use BaseTaskflowWidget._getTaskFormItemId() to generate default itemId");}
newInst=true;}
var taskID;var itf=RP.iget(widget.taskForm,RP.interfaces.ITaskForm);if(newInst){if(!itf){logger.logDebug("[TaskflowContainer] Your taskflow app needs to implement the RP.interfaces.ITaskForm interface");return;}
taskID=this._widgets.keyOf(widget);if(taskID){itf.setUrlHash(RP.core.PageContext.getTaskHash(this.getTaskflowName(),taskID,this._taskflow.getTaskflowContext(),widget.getTaskContext()));}}
else if(widget.taskForm){taskID=this._widgets.keyOf(widget);itf.setUrlHash(RP.core.PageContext.getTaskHash(this.getTaskflowName(),taskID,this._taskflow.getTaskflowContext(),widget.getTaskContext()));}
if(widget!==this._activeWidget){this._deactivateCurrentWidget();var activeTaskID=this._widgets.keyOf(widget);var taskCfg=this._taskflow.getTaskConfig(activeTaskID);if(taskCfg.completeTaskOnClick){var itf2=RP.iget(this._taskflow,RP.interfaces.ITaskflow2);itf2.setTaskCompleted(activeTaskID,true);}
this._activeWidget=widget;widget.setActive(true);}
this.fireEvent("rpext-appactivated",this,widget.taskForm);},_deactivateCurrentWidget:function(){if(this._activeWidget){this._activeWidget.setActive(false);this._activeWidget=null;}},_handleMouseOver:function(ev,t){if(this.failedDependencies){Ext.each(this.failedDependencies,function(dependency){dependency.addClass("rp-widget-dependency");},this);}},_handleMouseOut:function(ev,t){if(this.failedDependencies){Ext.each(this.failedDependencies,function(dependency){dependency.removeClass("rp-widget-dependency");},this);}},_onWidgetChange:function(){var itf=RP.iget(this._taskflow,RP.interfaces.ITaskflow2);itf.updateStatus();if(itf.isCompleted()){return;}
this._widgets.each(function(widget){var failedDependecies=[];var taskID=this._widgets.keyOf(widget);var taskCfg=this._taskflow.getTaskConfig(taskID);if(taskCfg.dependencies){Ext.each(taskCfg.dependencies,function(dependency){if(!itf.isTaskCompleted(dependency)){failedDependecies.push(this._widgets.get(dependency));}},this);}
widget.setEnabled(failedDependecies.length===0);widget.failedDependencies=failedDependecies;},this);},_onTaskCompleted:function(tf,taskConfig){logger.logInfo("[TaskflowContainer] Task completed.  Taskflow name: "+tf.initialConfig.name+"; roster item id: "+taskConfig.id);var widget=this.getWidgetByID(taskConfig.id);if(Ext.isFunction(widget.onTaskCompleted)){widget.onTaskCompleted.call(widget);}},_onTaskflowCompleted:function(tf){logger.logInfo("[TaskflowContainer] Taskflow completed: "+this.initialConfig.taskflow);var itf=RP.iget(tf,RP.interfaces.ITaskflow2);var uiCfg=itf.getTaskflowUIConfig();if(uiCfg&&uiCfg.disableOnComplete){this._widgets.each(function(widget){widget.setEnabled(false);},this);}}});RP.iimplement(RP.taskflow.TaskflowContainer,RP.interfaces.ITaskflowContainer2);RP.core.ComponentMgr.register("rptfcontainer",RP.taskflow.TaskflowContainer,[]);
Ext.ns("RP.taskflow");RP.taskflow.TaskRegistry=function()
{var defsByApp={};var scriptsByApp={};var cssByApp={};var properties=["appId","taskId","widgetXtype","widgetCfg","stashLibs","scriptUrls","cssUrls","tags","desc","helpUrl","helpMapperFn","title"];function setDef(def){logger.logTrace("[TaskRegistry] Adding to registry. appId: "+def.appId+"; widge xtype: "+def.widgetXtype);var tDef=Ext.copyTo({},def,properties);var appTasks=defsByApp[def.appId];if(Ext.isEmpty(appTasks)){appTasks={};defsByApp[def.appId]=appTasks;}
appTasks[def.taskId]=tDef;}
function getDef(appId,taskId,throwOnError){var defs=defsByApp[appId];var scriptUrls=[];var cssUrls=[];if(Ext.isEmpty(defs)){if(throwOnError){throw new RP.Exception("No tasks with appId '"+appId+"' have been registered!");}
return undefined;}
var def=Ext.copyTo({},defs[taskId],properties);if(Ext.isEmpty(def)){if(throwOnError){throw new RP.Exception("No tasks with appId '"+appId+"' and taskId '"+taskId+"' registered!");}
return undefined;}
if(!Ext.isEmpty(scriptsByApp[appId])&&!Ext.isEmpty(scriptsByApp[appId][taskId])){def.scriptUrls=def.scriptUrls.concat(scriptsByApp[appId][taskId]);}
if(!Ext.isEmpty(cssByApp[appId])&&!Ext.isEmpty(cssByApp[appId][taskId])){def.cssUrls=def.cssUrls.concat(cssByApp[appId][taskId]);}
return def;}
function appendURLs(appId,taskId,dict,urls){if(!dict[appId]){dict[appId]={};dict[appId][taskId]=[];}
var tasks=dict[appId];var urlArray=tasks[taskId];if(!Ext.isArray(urls)){urls=[urls];}
Ext.each(urls,function(url){logger.logTrace("[TaskRegistry] Appending to task '"+appId+"."+taskId+"': "+url);urlArray.push(url);});}
return{register:function(def){if(Ext.isArray(def)){Ext.each(def,function(d){setDef(d);});}
else{setDef(def);}},get:function(appId,taskId){return getDef(appId,taskId,true);},appendScriptUrls:function(appId,taskId,urls){appendURLs(appId,taskId,scriptsByApp,urls);},appendCSSUrls:function(appId,taskId,urls){appendURLs(appId,taskId,cssByApp,urls);}};}();RP.registerTask=RP.taskflow.TaskRegistry.register;RP.getTask=RP.taskflow.TaskRegistry.get;
Ext.ns("RP.taskflow");RP.taskflow.TaskflowRegistry=function(){var defs={};var initialContexts={};var appendScriptURLs={};var appendCssURLs={};function set(def){logger.logTrace("[TaskflowRegistry] Adding to registry: "+def.name);if(def.scriptUrls){RP.util.ScriptLoader.load(def.scriptUrls,Ext.emptyFn,Ext.emptyFn);}
if(def.cssUrls){RP.util.CSSLoader.load(def.cssUrls,RP.globals.paths.STATIC);}
var tfDef=Ext.copyTo({},def,["name","title","isTitleMessageName","tasks","listeners","uiConfig","desc","defaultTaskId","scheduleCheckFn"]);defs[def.name]=tfDef;}
function get(name,throwOnError){var def=defs[name];if(Ext.isEmpty(def)){logger.logError("Taskflow definition with name '"+name+"' not registered!");if(throwOnError){throw new RP.Exception("Taskflow definition with name '"+name+"' not registered!");}
return undefined;}
return def;}
function createTaskflow(def,initialContext,successFn,errorFn){var roster=[];var stashLibs=[];var scriptUrls=[];var cssUrls=[];logger.logTrace("[TaskflowRegistry] createTaskflow name: "+def.name);Ext.each(def.tasks,function(t){var taskDef=RP.getTask(t.appId,t.taskId);if(Ext.isDefined(taskDef.title)){if(t.widgetCfg){t.widgetCfg={};}
t.widgetCfg={title:taskDef.title};}
logger.logTrace("[TaskflowRegistry] Adding task. appId: "+t.appId+"; widget xtype: "+taskDef.widgetXtype);roster.push({appId:t.appId,id:t.id,widget:RP.getWidgetXtype(t.appId,taskDef.widgetXtype,RP.util.Object.mergeProperties(taskDef.widgetCfg,t.widgetCfg)),statusCalculation:t.statusCalculation,inParameterMapping:t.inParameterMapping?Ext.apply({},t.inParameterMapping):undefined,outParameterMapping:t.outParameterMapping?Ext.apply({},t.outParameterMapping):undefined,dependencies:t.dependencies?t.dependencies.concat():undefined,helpUrl:taskDef.helpUrl,helpMapperFn:taskDef.helpMapperFn,completeTaskOnClick:t.completeTaskOnClick});if(Ext.isArray(taskDef.stashLibs)){stashLibs=stashLibs.concat(taskDef.stashLibs);}else if(Ext.isDefined(taskDef.stashLibs)){stashLibs.push(taskDef.stashLibs);}
if(Ext.isArray(taskDef.cssUrls)){cssUrls=cssUrls.concat(taskDef.cssUrls);}else if(Ext.isDefined(taskDef.cssUrls)){cssUrls.push(taskDef.cssUrls);}
if(Ext.isArray(taskDef.scriptUrls)){scriptUrls=scriptUrls.concat(taskDef.scriptUrls);}else if(Ext.isDefined(taskDef.scriptUrls)){scriptUrls.push(taskDef.scriptUrls);}});if(appendCssURLs[def.name]){cssUrls=cssUrls.concat(appendCssURLs[def.name]);}
if(appendScriptURLs[def.name]){scriptUrls=scriptUrls.concat(appendScriptURLs[def.name]);}
var queue=new RP.util.FunctionQueue();var loadSuccessFn=function(){logger.logTrace("[TaskflowRegistry] Finished downloading tasks script files (if any)...");if(def.listeners){Ext.iterate(def.listeners,function(key,value){if(Ext.isString(value)){logger.logTrace(String.format("[TaskflowRegistry] Performing eval() on '{0}' to set event listener for '{1}'.",value,key));def.listeners[key]=eval(value);}});}
successFn(new RP.taskflow.Taskflow({name:def.name,initialContext:initialContext,defaultTaskId:def.defaultTaskId,roster:roster,listeners:def.listeners,uiConfig:def.uiConfig}));};var loadErrorFn=function(){logger.logError("[RP.taskflow.TaskflowRegistry] Aborting creation of taskflow '"+def.name+"'because script file failed to download...");errorFn();};var createStashLib=function(sl){return function(succFn,errFn){RP.util.ScriptLoader.loadStashLibrary(sl.name,sl.version,succFn,errFn);};};if(stashLibs.length>0){Ext.each(stashLibs,function(sl){queue.add(createStashLib(sl));logger.logTrace("[TaskflowRegistry] Added loading of stash lib to queue: "+sl.name);});}
if(cssUrls.length>0){queue.add(function(succFn,errFn){RP.util.CSSLoader.load(cssUrls,true);succFn();});logger.logTrace("[TaskflowRegistry] Added downloading of CSS file(s) to queue");}
if(scriptUrls.length>0){queue.add(function(succFn,errFn){RP.util.ScriptLoader.load(scriptUrls,succFn,errFn);});logger.logTrace("[TaskflowRegistry] Added loading of script file(s) to queue");}
queue.add(function(succFn,errFn){RP.util.ScriptLoader.onReady(function(){logger.logTrace("[TaskflowRegistry] AT THIS POINT, SCRIPT LOADING HAS FINISHED.");succFn();});});queue.execute(loadSuccessFn,loadErrorFn);}
function setInitContext(tfName,initialContext){initialContexts[tfName]=Ext.apply({},initialContext);}
function getInitContext(tfName){return initialContexts[tfName];}
function appendURLs(tfName,dict,urls){var d=dict[tfName];if(!d){d=[];dict[tfName]=d;}
if(!Ext.isArray(urls)){urls=[urls];}
Ext.each(urls,function(url){logger.logTrace("[TaskflowRegistry] Appending to taskflow '"+tfName+"': "+url);d.push(url);});}
return{register:function(def){if(Ext.isArray(def)){Ext.each(def,function(d){set(d);});}else{set(def);}},get:function(name){return get(name,false);},getAll:function(){var tfDefs=[];Ext.iterate(defs,function(name,tfDef){tfDefs.push(Ext.apply({},tfDef));});return tfDefs;},create:function(name,initialContext,successFn,errorFn){var def=get(name,true);var tfInitContext=RP.util.Object.mergeProperties(initialContext,getInitContext(name));createTaskflow(def,tfInitContext,successFn,errorFn);},setInitialContext:function(name,initialContext){setInitContext(name,initialContext);},getInitialContext:function(name){return getInitContext(name);},appendScript:function(name,urls){appendURLs(name,appendScriptURLs,urls);},appendCSS:function(name,urls){appendURLs(name,appendCssURLs,urls);}};}();RP.registerTaskflow=RP.taskflow.TaskflowRegistry.register;RP.createTaskflow=RP.taskflow.TaskflowRegistry.create;
Ext.ns("RP.taskflow");RP.taskflow.ModuleRegistry=(function(){var defs={};var set=function(def){logger.logTrace("[ModuleRegistry] Adding to registry: "+def.name);var mdef=Ext.copyTo({},def,["name","label","icon","iconCls","sortOrder","initFn","scriptUrls","cssUrls","taskflows"]);defs[def.name]=mdef;if(mdef.scriptUrls){RP.util.ScriptLoader.load(mdef.scriptUrls,Ext.emptyFn,Ext.emptyFn);}
if(Ext.isArray(mdef.cssUrls)&&mdef.cssUrls.length>0){RP.util.CSSLoader.load(mdef.cssUrls,true);logger.logTrace("[ModuleRegistry] Downloading CSS files for module: "+mdef.name);}};var _get=function(name,throwOnError){var def=defs[name];if(Ext.isEmpty(def)){logger.logError("Module definition with name '"+name+"' not registered!");if(throwOnError){throw new RP.Exception("Module definition with name '"+name+"' not registered!");}
return undefined;}
return def;};return{register:function(def){if(Ext.isArray(def)){Ext.each(def,function(d){set(d);});}else{set(def);}},get:function(name){return _get(name,false);},getAllSorted:function(){var list=[];Ext.each(RP.upb.modules,function(d){list.push(_get(d));});return list;}};})();RP.registerModule=RP.taskflow.ModuleRegistry.register;
Ext.ns("RP.taskflow");RP.taskflow.TaskflowFrame=Ext.extend(Ext.Panel,{activeWidget:undefined,initComponent:function()
{logger.logTrace("[TaskflowFrame] initComponent; itemId: "+this.itemId);this._onAppActivatedFn=this._onAppActivated.createDelegate(this);this._rebuildTaskflowFn=this.rebuildTaskflow.createDelegate(this);this._tfAbortHandlerFn=this._tfAbortHandler.createDelegate(this);this._beforeAppActivatedFn=this._beforeAppActivatedHandler.createDelegate(this);this._initializeHistory();this._rpViewPanel=new Ext.Panel({id:'_rp_view_panel',region:"center",layout:"card",style:"zIndex: 0 ",bodyCssClass:"rp-ttf-app",border:false,layoutConfig:{deferredRender:true}});var t=this._createTaskflows();this._rpTaskflowsContainer=this._createTaskflowContainer();this._rpTaskflowNav=new Ext.Panel({region:'center',layout:'border',items:[this._rpTaskflowsContainer]});this._rpModuleNav=this._createModuleNavigation();if(this.initialConfig.navArea){this._rpTaskflowNav.add(new Ext.Panel({region:"north",layout:"fit",height:this.initialConfig.navAreaHeight||this.initialConfig.navArea.height||50,items:this.initialConfig.navArea}));this._rpTaskflowNav.doLayout();}
this._rpTaskflowNavContainer=new Ext.Panel({border:false,bodyBorder:false,region:this.initialConfig.navRegion||"east",collapseMode:'mini',collapsedCls:'rp-taskflow-splitbar',hideCollapseTool:true,split:true,margins:{top:0,right:0,bottom:0,left:0},itemId:"taskflowNavContainer",collapsible:true,layout:"border",cls:"rp-vantage",width:this.initialConfig.navInitialSize||200,minSize:this.initialConfig.navInitialSize||200,maxSize:this.initialConfig.navInitialSize||200,items:[this._rpModuleNav,this._rpTaskflowNav]});this.on("afterlayout",function(){var layout=this.layout.east?this.layout.east:this.layout.west;var splitterBar=layout.getSplitBar();var splitterProxy=Ext.get(splitterBar.proxy);splitterBar.el.addClass("rp-taskflow-splitbar");splitterProxy.addClass("rp-taskflow-splitbar");},this);Ext.apply(this,{layout:"border",border:false,itemId:this.initialConfig.itemId||"taskflowFrame",items:[this._rpTaskflowNavContainer,this._rpViewPanel]});RP.taskflow.TaskflowFrame.superclass.initComponent.apply(this);if(t.waiter){t.waiter.resume();}
else{this._addTaskflowContainers(t.taskflows);}},buildModules:function(modules){var items=[];if(!Ext.isEmpty(modules)){Ext.each(modules,function(module,index){items.push({title:String.format('<img src="{0}" /><br/>{1}',RP.globals.paths.STATIC+module.icon,RP.getMessage(module.label)),module:module,layout:'fit',itemId:module.name,items:module.items});if(module.name==RP.globals.CURRENT_MODULE.name){this._rpViewPanel.add(this._createLandingPage(module.landingPage));this._moduleIndex=index;}},this);}
else{this._rpViewPanel.add(this._createLandingPage());}
return items;},toggleNavPanel:function(){this._rpTaskflowNav.toggleCollapse();},hideNavPanel:function(){this._rpTaskflowNav.hide();},showNavPanel:function(){this._rpTaskflowNav.show();},activateTaskflow:function(tf,activateDefaultWidget,activatedFn){var tfc=this._getTaskflowContainer(tf);if(Ext.isEmpty(activateDefaultWidget)){activateDefaultWidget=true;}
this._activateTaskflow(tfc,activateDefaultWidget,activatedFn);},rebuildTaskflow:function(tf,title,initialContext){var tfc=this._getTaskflowContainer(tf);if(!tfc){logger.logError("[TaskflowFrame] Cannot find taskflow container");return;}
tfc.resumeEvents();RP.core.PageContext.updateTaskflowContext(initialContext);var expandNewTfc=!tfc.collapsed;var itfc=RP.iget(tfc,RP.interfaces.ITaskflowContainer2);var tfCfg=this._createTaskflowContainerConfig({itemId:tfc.itemId,taskflow:itfc.getTaskflowName(),title:title||tfc.title,isTitleMessageName:false,initialContext:initialContext});var idx=this._rpTaskflowsContainer.items.indexOf(tfc);var newTfc=Ext.ComponentMgr.create(tfCfg);this._rpTaskflowsContainer.remove(tfc,true);this._rpTaskflowsContainer.insert(idx,newTfc);this._rpTaskflowsContainer.doLayout();if(expandNewTfc){var hash=window.location.hash;this._activateTaskflow(tfc,Ext.isEmpty(hash)||hash===":",(function(taskFlowContainer){this.navigateToURLHash(hash);}).createDelegate(this));}
tfc.destroy();},addTaskflow:function(tfc,activateTF,activateDefaultWidget,activatedFn){logger.logInfo("[TaskflowFrame] addTaskflow called with itemId: "+tfc.initialConfig.itemId);if(typeof activateDefaultWidget==="undefined"){activateDefaultWidget=true;}
if(!RP.iget(tfc,RP.interfaces.ITaskflowContainer2)){logger.logDebug("[TaskflowFrame] RP.interfaces.ITaskflowContainer2 interface not implemented.");}
this._setupHandlersForTaskflowContainer(tfc);this._rpTaskflowsContainer.add(tfc);this._rpTaskflowsContainer.doLayout();if(activateTF){this._activateTaskflow(tfc,activateDefaultWidget,activatedFn);}},removeTaskflow:function(tfc,deferLayout){logger.logInfo("[TaskflowFrame] removeTaskflow called with itemId: "+tfc.initialConfig.itemId);this._rpTaskflowsContainer.remove(tfc);tfc.destroy();},navigateToURLHash:function(urlHash){logger.logTrace("[TaskflowFrame] navigateToHash() called: "+urlHash);if(this._rpTaskflowsContainer.items.getCount()===0){logger.logTrace("[TaskflowFrame] navigateToHash() - no taskflows, so ignoring...");return;}
this._activateDefaultWidget.defer(100,this,[urlHash]);},_getTaskflowContainer:function(tf){if(typeof tf==="string"){return this._findTaskflowContainer(function(itfc){return(itfc.getTaskflowName()===tf);});}
else{return this._findTaskflowContainer(function(itfc){return(itfc.getTaskflow()===tf);});}},_findTaskflowContainer:function(matchFn){var tfc=null;this._rpTaskflowsContainer.items.each(function(c){var itfc=RP.iget(c,RP.interfaces.ITaskflowContainer2);if(matchFn(itfc)){tfc=c;return false;}},this);return tfc;},_preprocessTaskflow:function(tfConfig,beginDeferHandler,endDeferHandler){if(typeof tfConfig.itemId==="undefined"){logger.logWarning("[TaskflowFrame] The 'itemId' config attribute for a taskflow is not specified.  Taskflow title: "+tfConfig.title);}
var scheduleCheckFn=RP.taskflow.TaskflowRegistry.get(tfConfig.taskflow).scheduleCheckFn;if(Ext.isString(scheduleCheckFn)){logger.logTrace('[TaskflowFrame] String scheduleCheckFn detected, performing eval.');var evaluatedFn=eval(scheduleCheckFn);if(Ext.isFunction(evaluatedFn)){scheduleCheckFn=evaluatedFn;}
else{logger.logError(String.format('[TaskflowFrame] Taskflow "{0}" has a String scheduleCheckFn of "{1}" that did not actually evaluate to a function that exists, so it will be processed as normal."',tfConfig.taskflow,scheduleCheckFn));}}
if(Ext.isFunction(scheduleCheckFn)){logger.logTrace("[TaskflowFrame] Checking schedule for taskflow: "+tfConfig.taskflow);beginDeferHandler(tfConfig);var resultFn=(function(result){logger.logTrace("[TaskflowFrame] Schedule check result for taskflow '"+tfConfig.taskflow+"': "+result);endDeferHandler.defer(1,this,[tfConfig,!!result]);}).createDelegate(this);var tfInitContext=RP.util.Object.mergeProperties(tfConfig.initialContext,RP.taskflow.TaskflowRegistry.getInitialContext(tfConfig.taskflow));scheduleCheckFn(resultFn,tfInitContext);}},_createModuleNavigation:function(){var moduleNav=new Ext.TabPanel({border:false,bodyBorder:false,region:'north',enableTabScroll:true,cls:'rp-taskflow-module-tabs',layoutOnTabChange:true,itemId:"moduleNav",items:this.buildModules(this.initialConfig.modules),itemTpl:this._getModuleTabItemTpl()});moduleNav.on("beforetabchange",function(tabPanel,panel,selectedPanel){if(panel.module.name!==selectedPanel.module.name){RP.core.PageContext.setActiveModule(panel.module.name);}
return false;});moduleNav.on("afterrender",function(){if(this._moduleIndex!==undefined&&this._moduleIndex!==null){this._rpModuleNav.suspendEvents(false);this._rpModuleNav.setActiveTab(this._moduleIndex,false);if(this._setEmptyHeight()===true){this._rpModuleNav.setHeight(0);}
this._rpModuleNav.resumeEvents();}},this);return moduleNav;},_getModuleTabItemTpl:function(){var tabTemplate=new Ext.Template('<li class="{cls}" id="{id}"><a class="x-tab-strip-close"></a>','<a class="x-tab-right" href="javascript:void(0)"><em class="x-tab-left">','<span class="x-tab-strip-inner"><span class="x-tab-strip-text {iconCls}">{text}</span></span>','</em></a></li>');tabTemplate.disableFormats=true;tabTemplate.compile();return tabTemplate;},_setEmptyHeight:function(){if(this._rpModuleNav.getActiveTab().items.getCount()===0){return true;}
return false;},_createTaskflowContainer:function(){return Ext.ComponentMgr.create({id:"_rp_taskflow_container",xtype:"panel",style:this.initialConfig.hideAccordion?"padding-top: 12px":"",border:false,header:false,region:"center",layout:this.initialConfig.hideAccordion?"fit":"accordion",collapsible:true,initialSize:this.initialConfig.navInitialSize||200,items:[]});},_createTaskflows:function(){var t={taskflows:[]};var beginDeferHandler=(function(tfConfig){if(!t.waiter){t.waiter=new RP.util.Waiter({handler:this._addTaskflowContainers.createDelegate(this,[t.taskflows])});t.waiter.suspend();}
t.waiter.add(tfConfig);}).createDelegate(this);var endDeferHandler=function(tfConfig,result){if(!result){t.taskflows.remove(tfConfig);}
t.waiter.remove(tfConfig);};Ext.each(this.initialConfig.taskflows,function(tfConfig){this._preprocessTaskflow(tfConfig,beginDeferHandler,endDeferHandler);t.taskflows.push(tfConfig);},this);return t;},_initializeHistory:function(){var html=[];html.push('<form id="history-form" class="x-hidden">');html.push('<input type="hidden" id="x-history-field" />');if(Ext.isIE)
{html.push('<iframe id="x-history-frame"></iframe>');}
html.push('</form>');Ext.DomHelper.insertHtml('beforeEnd',document.body,html.join());Ext.History.init();Ext.History.on("change",function(token){logger.logTrace("[TaskflowFrame] History change detected, token: "+token);var hash=this._parseHistoryToken(token);if(RP.util.Helpers.isSessionExpired()){var newUrl=RP.core.PageContext.getPageURL(RP.globals.SITEID,RP.core.PageContext.getActiveModuleName(),hash.tfName,hash.taskID,hash.moduleContext,hash.taskflowContext,hash.taskContext);RP.util.Helpers.redirect(newUrl);RP.util.Helpers.reload();return;}
if(RP.util.PageInactivityChecker.isInactive()){RP.util.Helpers.keepSessionAlive();Ext.getCmp("inactivityWarningDialog").destroy();}
var me=this;var activateWidgetFn=function(itfc,tfc,hash){var widget=itfc.getWidgetByID(hash.taskID);if(!widget){itfc.activateDefaultWidget();return;}
if(hash.taskContext){widget.setTaskContext(hash.taskContext);}
if(widget!==this.activeWidget){this.activeWidget=widget;var tfCompleted=itfc.getTaskflow().isCompleted();if(widget&&(widget.getEnabled()||tfCompleted)){widget.raiseWidgetClick();}
else{itfc.activateDefaultWidget();}
me._rpTaskflowsContainer.doLayout();}};var found=false;var waitObj;RP.globals.CURRENT_HASH=hash;this._rpTaskflowsContainer.items.each(function(c){itfc=RP.iget(c,RP.interfaces.ITaskflowContainer2);if(itfc.getTaskflowName()===hash.tfName){if(!itfc.getTaskflow()||!itfc.getTaskflow().isInitialized()){waitObj={itfc:itfc,tfc:c};}
else{found=true;activateWidgetFn.call(me,itfc,c,hash);}
return false;}},this);if(!found&&!waitObj&&this._rpTaskflowsContainer.items.getCount()>0){var c=this._rpTaskflowsContainer.items.first();waitObj={itfc:RP.iget(c,RP.interfaces.ITaskflowContainer2),tfc:c};}
if(!found&&waitObj&&this.taskflowsEnabled){var itfc=waitObj.itfc;var tfc=waitObj.tfc;var tfCreateListener=null;logger.logTrace("[TaskflowFrame] Waiting for tfc itemId: "+tfc.initialConfig.itemId);tfc.expand(false);tfc.fireEvent("expand",tfc);var postCreationFn=function(listenPostInit){logger.logTrace("[TaskflowFrame] postInit for tfc itemId: "+tfc.initialConfig.itemId);if(tfCreateListener){itfc.removeTaskflowCreationListener(tfCreateListener);}
itfc.getTaskflow().mergeTaskflowContext(hash.taskflowContext);if(listenPostInit){itfc.getTaskflow().addPostInitListener((function(tf){activateWidgetFn.call(me,itfc,tfc,hash);}).createDelegate(this));}};var tf=itfc.getTaskflow();if(tf){var itf=RP.iget(tf,RP.interfaces.ITaskflow2);if(itf.isInitialized()){postCreationFn(false);activateWidgetFn.call(me,itfc,tfc,hash);}
else{postCreationFn(true);}}
else{if(!tfCreateListener){tfCreateListener=function(){postCreationFn(true);};}
itfc.addTaskflowCreationListener(tfCreateListener);}}},this);},_parseHistoryToken:function(token){logger.logTrace("[TaskflowFrame] Parsing history token: "+token);return RP.core.PageContext.parseHash(token);},_activateTaskflow:function(tfc,activateDefaultWidget,activatedFn){logger.logTrace("[TaskflowFrame] Expanding taskflow container with itemId: "+tfc.initialConfig.itemId);this.taskflowsEnabled=true;tfc.expand(true);tfc.fireEvent("expand",tfc);var unhook=false;var tfCreatedFn=function(){var itfc=RP.iget(tfc,RP.interfaces.ITaskflowContainer2);if(activateDefaultWidget){itfc.activateDefaultWidget();}
if(unhook){itfc.removeTaskflowCreationListener(tfCreatedFn);}
if(Ext.isFunction(activatedFn)){activatedFn(tfc);}};var itfc=RP.iget(tfc,RP.interfaces.ITaskflowContainer2);if(itfc.getTaskflow()){tfCreatedFn();}
else{unhook=true;itfc.addTaskflowCreationListener(tfCreatedFn);}},_createTaskflowContainerConfig:function(tfcCfg){var tfcxtype=this.initialConfig.tfContainerXtype||"rptfcontainer";return RP.mergeProperties({xtype:tfcxtype,listeners:{render:{scope:this,fn:function(){var tfc=this._rpTaskflowsContainer.getComponent(tfcCfg.itemId);this._setupHandlersForTaskflowContainer(tfc);}}}},tfcCfg);},_setupHandlersForTaskflowContainer:function(tfc){var itfc=RP.iget(tfc,RP.interfaces.ITaskflowContainer2);itfc.addTaskflowAbortHandler(this._tfAbortHandlerFn);itfc.addApplicationActivatedHandler(this._onAppActivatedFn);itfc.setRebuildTaskflowHandler(this._rebuildTaskflowFn);itfc.setBeforeAppActivateHandler(this._beforeAppActivatedFn);},_addTaskflowContainers:function(taskflows){var tfcs=[];Ext.each(taskflows,function(tfDef){var tfCfg=this._createTaskflowContainerConfig(tfDef);logger.logTrace("[TaskflowFrame] Creating taskflow container with itemId: "+tfDef.itemId+"; tfContainerXtype: "+tfCfg.xtype);tfcs.push(Ext.ComponentMgr.create(tfCfg));},this);var addToContainerFn=(function(){this._rpTaskflowsContainer.add(tfcs);logger.logTrace("[TaskflowFrame] Taskflow containers added and laid out.");this._activateDefaultWidget(window.location.hash);if(this.initialConfig.taskflowsEnabled&&tfcs.length>0){this._rpTaskflowNavContainer.doLayout();}
else{this._rpTaskflowsContainer.suspendEvents(false);this._rpViewPanel.getLayout().setActiveItem(this._rpViewPanel.items.first());}}).createDelegate(this);addToContainerFn.defer(100);},_onAppActivated:function(tfc,taskForm){logger.logTrace("[TaskflowFrame] _onAppActivated; tfc itemId: "+tfc.initialConfig.itemId+"; taskForm itemId: "+taskForm.itemId);var itfc;var layout=this._rpViewPanel.getLayout();var activeItem=layout.activeItem;if(activeItem===taskForm){return;}
var hasOldActiveTaskForm=false;if(activeItem){if(Ext.isDefined(RP.iget(activeItem,RP.interfaces.ITaskForm))){hasOldActiveTaskForm=true;}}
if(tfc!==this._activeTFC){if(this._activeTFC){itfc=RP.iget(this._activeTFC,RP.interfaces.ITaskflowContainer2);itfc.onDeactivated();}
this._activeTFC=tfc;}
if(taskForm.xtype){taskForm=RP.core.ComponentMgr.create(taskForm.xtype,taskForm);}
var found=false;this._rpViewPanel.items.each(function(p){if(p===taskForm){found=true;return false;}},this);if(!found){this._rpViewPanel.add(taskForm);}
if(hasOldActiveTaskForm&&activeItem){RP.iget(activeItem,RP.interfaces.ITaskForm).onDeactivate();}
layout.setActiveItem(this.getComponentId(taskForm));activeItem=layout.activeItem;var itf=RP.iget(activeItem,RP.interfaces.ITaskForm);itf.onActivate();var newHash=itf.getUrlHash();if(newHash){Ext.History.add(newHash,true);}
this._currentHash=newHash||"";this._rpViewPanel.doLayout();itfc=RP.iget(tfc,RP.interfaces.ITaskflowContainer2);var taskId=itfc.getActiveWidget().getTaskId();var taskCfg=itfc.getTaskflow().getTaskMetadata(taskId).getConfig();RP.globals.CURRENT_TASK=Ext.apply({},{appId:taskCfg.appId,taskId:taskCfg.id,taskConfig:taskCfg,taskForm:itfc.getActiveWidget().taskForm});},_activateDefaultWidget:function(hash){if(hash){var loadFn=function(urlHash){Ext.History.fireEvent("change",urlHash);};if(typeof hash==="string"&&hash.charAt(0)==='#'){hash=hash.slice(1);}
loadFn.defer(10,this,[hash]);}
else{var tfc=this._rpTaskflowsContainer.items.first();if(tfc){var fn=function(){tfc.fireEvent("expand",tfc);var activateDefaultWidgetFn=function(){this.un("afterlayout",activateDefaultWidgetFn,this);var itfc=RP.iget(tfc,RP.interfaces.ITaskflowContainer2);itfc.activateDefaultWidget();};tfc.on("afterlayout",activateDefaultWidgetFn,tfc);};if(tfc.rendered){fn();}
else{tfc.on("render",fn,this);}}}},_tfAbortHandler:function(tfContainer){logger.logTrace("[TaskflowFrame] Aborting taskflow container with itemId: "+tfContainer.initialConfig.itemId);if(this._rpTaskflowsContainer.items.getCount()>1){var idx=this._rpTaskflowsContainer.items.indexOf(tfContainer);this._rpTaskflowsContainer.getLayout().setActiveItem((idx===0)?1:0);this._rpTaskflowsContainer.remove(tfContainer);this._rpTaskflowsContainer.doLayout();Ext.History.fireEvent("change",window.location.hash);}
else{if(this.initialConfig.blankForm){this._rpViewPanel.getLayout().setActiveItem(this.initialConfig.blankForm);}}},_beforeAppActivatedHandler:function(resultFn){var layout=this._rpViewPanel.getLayout();var activeItem=layout.activeItem;var tf=RP.iget(activeItem,RP.interfaces.ITaskForm);if(Ext.isDefined(tf)){tf.onBeforeDeactivate(resultFn);}
else{resultFn(true);}},_createLandingPage:function(landingPage){if(!landingPage){var messageId="rp.common.misc.NoTaskflows";var titleId="rp.common.misc.NoTaskflowsTitle";if(this.initialConfig.modules.length===0){messageId="rp.common.misc.NotAuthorized";titleId="rp.common.misc.NotAuthorizedTitle";}
landingPage={xtype:"panel",itemId:"landingPage",layout:{type:"vbox",align:"center"},title:RP.getMessage(titleId),items:[{xtype:"box",flex:0.5},{xtype:"panel",bodyCfg:{cls:"rp-taskflow-blank-form-text",align:"center"},border:false,layout:"fit",itemId:"landingPageText",html:RP.getMessage(messageId)},{xtype:"button",itemId:"continueButton",cls:"rp-taskflow-blank-form-button",text:RP.getMessage("rp.common.login.ContinueButton"),flex:0,autoWidth:false,scale:"medium",listeners:{click:RP.util.Helpers.logout}},{xtype:"box",flex:0.5}]};}
return Ext.ComponentMgr.create(landingPage);}});RP.core.ComponentMgr.register("rptfframe",RP.taskflow.TaskflowFrame,[]);
Ext.ns("RP.taskflow.widgets");RP.taskflow.widgets.WidgetWithState=Ext.extend(RP.taskflow.BaseTaskflowWidget,{widgetStates:{FAILED:"failed",NORMAL:"normal",SUCCESSFUL:"successful",WARNING:"warning",WORKING:"working"},vantageCls:"rp-vantage-status",statusImageHTML:'<img width="21" height="21" src="{0}" class="{1}">',initComponent:function(){if(!this.widgetState){this.showNormal();}
this.initialConfig.extraCls="rp-widget-state";RP.taskflow.widgets.WidgetWithState.superclass.initComponent.call(this);},isFailed:function(){return this.widgetState===this.widgetStates.FAILED;},isNormal:function(){return this.widgetState===this.widgetStates.NORMAL;},isSuccessful:function(){return this.widgetState===this.widgetStates.SUCCESSFUL;},isWarning:function(){return this.widgetState===this.widgetStates.WARNING;},isWorking:function(){return this.widgetState===this.widgetStates.WORKING;},showFailed:function(){this.widgetState=this.widgetStates.FAILED;this.backgroundCls="rp-widget-failed-item";this.imgCls="rp-widget-failed";this.applyIconClasses();},showNormal:function(){this.widgetState=this.widgetStates.NORMAL;this.backgroundCls="";this.imgCls="";this.applyIconClasses();},showSuccessful:function(){this.widgetState=this.widgetStates.SUCCESSFUL;this.backgroundCls="rp-widget-done-item";this.imgCls="rp-widget-checked";this.applyIconClasses();},showWarning:function(){this.widgetState=this.widgetStates.WARNING;this.backgroundCls="";this.imgCls="rp-widget-warning";this.applyIconClasses();},showWorking:function(){this.widgetState=this.widgetStates.WORKING;this.backgroundCls="";this.imgCls="rp-widget-loading";this.applyIconClasses();},createVantageStatus:function(){if(this.rendered&&!this.vantageStatus){this.vantageStatus=this.header.createChild({cls:this.vantageCls});}},removeVantageStatus:function(){if(this.rendered&&this.vantageStatus){Ext.removeNode(this.vantageStatus.dom);delete this.vantageStatus;}},applyIconClasses:function(){if(!this.rendered||this.isDestroyed){return;}
if(this.widgetState===this.widgetStates.NORMAL){this.addClass(this.hyperlinkCls);this.removeVantageStatus();}
else{this.removeClass(this.hyperlinkCls);this.createVantageStatus();this.vantageStatus.dom.innerHTML=String.format(this.statusImageHTML,Ext.BLANK_IMAGE_URL,this.imgCls);}
this.el.replaceClass(this.lastBackgroundCls,this.backgroundCls);this.lastBackgroundCls=this.backgroundCls;},onPostRender:function(){RP.taskflow.widgets.WidgetWithState.superclass.onPostRender.apply(this,arguments);this.applyIconClasses();}});
Ext.ns("RP.taskflow.widgets");RP.taskflow.widgets.WidgetWithCount=Ext.extend(RP.taskflow.widgets.WidgetWithState,{countHTML:'<span class="{0}">{1}</span>',displayCount:function(count){this._count=count;if(count===0){this.showSuccessful();}
else{this.showNormal();if(!this.rendered){return;}
var statusCls=!Ext.isEmpty(count)&&count.toString().length<=3?"":"rp-vantage-sum-small";this.createVantageStatus();this.removeClass(this.hyperlinkCls);this.vantageStatus.dom.innerHTML=String.format(this.countHTML,statusCls,count||"");}},getCount:function(){return this._count;},onPostRender:function(){RP.taskflow.widgets.WidgetWithCount.superclass.onPostRender.apply(this,arguments);if(this.widgetState===this.widgetStates.NORMAL){this.displayCount(this._count);}}});RP.taskflow.BaseTaskflowWidgetWithCount=RP.taskflow.widgets.WidgetWithCount;(function(){var proto=RP.taskflow.widgets.WidgetWithCount.prototype;Ext.apply(proto,{renderCount:proto.displayCount,writeLine:proto.displayCount});})();
Ext.ns("RP.login");Ext.QuickTips.init();RP.login.LoginForm=Ext.extend(Ext.Viewport,{authenticatedStatus:0,passwordExpiredStatus:1201,externalAuthentication:false,showJDALogo:true,initComponent:function(){var formTitle=RP.getMessage("rp.common.login.FormTitle"),formPanel={header:false,cls:"loginFormPanel",xtype:"form",id:"loginForm",height:250,width:300,hideBorders:true,labelAlign:'top',labelPad:8,labelWidth:225,layoutConfig:{labelSeparator:""},defaultType:'textfield',items:this._buildFormItems()},logoUrl=RP.stash.DEPLOYED_ROOT+'images/login/logo-small.png',loginCt,loginItems;if(formTitle==="null"||formTitle==="rp.common.login.FormTitle"){formTitle="<br>";}
loginItems=[{xtype:"box",cls:"login_ProdName",html:formTitle},formPanel];if(this.showJDALogo||this.replaceLogoWithCustomerLogo){if(this.customerLogoSrc!==undefined&&this.replaceLogoWithCustomerLogo){logoUrl=this.customerLogoSrc;}
loginItems.splice(0,0,{xtype:'container',cls:'jdaLogo',style:'background:url('+logoUrl+') no-repeat right center;',width:600,height:80});}
loginCt=Ext.ComponentMgr.create({cls:'loginCt',items:loginItems},'container');this.createCustomLogo();Ext.apply(this,{items:[this.createLogoStrip(),loginCt]});RP.login.LoginForm.superclass.initComponent.apply(this);},_buildFormItems:function(){var errorHidden=!this._hasError();var formItems=[{fieldLabel:RP.getMessage("rp.common.login.Username"),id:"userName",cls:"rp-login-label",itemCls:'loginUsername',hidden:this.externalAuthentication,width:171,autoCreate:{tag:"input",type:"text",autocomplete:"on"}},{fieldLabel:RP.getMessage("rp.common.login.Password"),id:"password",cls:"rp-login-label",itemCls:'loginPassword',width:171,hidden:this.externalAuthentication,inputType:"password"},{xtype:"panel",id:"warning",cls:"loginErrorMsg",header:false,height:30,hidden:errorHidden,html:RP.getMessage("rp.common.login.LoginFailed"),layout:'fit'},{xtype:'panel',cls:'rp-login-button-panel',height:35,items:[{id:"loginBtn",xtype:"button",hidden:this.externalAuthentication,cls:"rp-login-button",height:32,text:RP.getMessage("rp.common.login.LoginButtonUpper"),handler:this.submit,scope:this}]}];if(this.loginLocales){formItems.push(this._buildLocaleCombo());}
return formItems;},_buildLocaleCombo:function(){var localeData=[],currentLocale=this._getCurrentLocale();Ext.iterate(this.loginLocales,function(locale,localeMessage){localeData.push([locale,localeMessage]);});return new Ext.form.ComboBox({displayField:'localeMessage',editable:false,hideLabel:true,itemCls:'locale-selector',lazyRender:true,listClass:'locale-selector-list',listeners:{select:this.onLocaleSelect,scope:this},mode:'local',store:new Ext.data.ArrayStore({id:0,fields:['locale','localeMessage'],data:localeData}),triggerAction:'all',triggerConfig:{tag:"img",src:Ext.BLANK_IMAGE_URL,cls:"x-form-trigger"},typeAhead:true,value:currentLocale,valueField:'locale',width:170});},createLogoStrip:function(){return new Ext.Container({cls:'loginLogoStrip',height:111,items:[{xtype:'box',cls:'bottomBorder'},{xtype:'box',cls:'worldMap',autoEl:{tag:'img',src:RP.stash.DEPLOYED_ROOT+'images/login/map.png'}}]});},createCustomLogo:function(){if(this.customerLogoSrc!==undefined){var logoUrl=this.customerLogoSrc;if(this.replaceLogoWithCustomerLogo){logoUrl=RP.stash.DEPLOYED_ROOT+'images/login/logo-blue.png';}
var externalLogoContainer=new Ext.Container({cls:'jda-custom-logo',renderTo:Ext.getBody(),height:102,width:600,html:'',style:'background:url('+logoUrl+') no-repeat left center;'});}},_getCurrentQueryObject:function(){return Ext.urlDecode(window.location.search.replace("?",""));},_getCurrentLocale:function(){var queryObject=this._getCurrentQueryObject();return Ext.isEmpty(queryObject.locale)?RP.globals.getValue("BASE_LOCALE"):queryObject.locale;},onLocaleSelect:function(combo){var currentSelection=combo.getValue();if(this._getCurrentLocale()!==currentSelection){var URLQueryObject=this._getCurrentQueryObject();URLQueryObject.locale=currentSelection;var urlBase=String.format("{0}//{1}{2}",window.location.protocol,window.location.host,window.location.pathname);window.location=urlBase+"?"+Ext.urlEncode(URLQueryObject);}},_hasError:function(){var querystring=window.location.search.substring(1);if(querystring){var qsConfig=Ext.urlDecode(querystring);if(qsConfig&&qsConfig.reason){return true;}}
return false;},submit:function(){var results=Ext.getCmp("loginForm").getForm().getValues();if(results.userName&&results.password){return this.login(results.userName,results.password);}
else if(this.externalAuthentication){return this.login();}
else{Ext.getCmp("warning").show();}},login:function(userId,password){logger.logTrace("[Login] Submitting credentials...");var myMask=new Ext.LoadMask(document.body,{msg:RP.getMessage("rp.common.misc.PleaseWait")});myMask.show();this._disableFields();var params={loginName:userId,password:password};return Ext.Ajax.requestWithTextParams({url:this.initialConfig.securityServiceURL,method:"POST",params:params,scope:this,disableExceptionHandling:true,callback:function(options,success,response){if(response.status===-1){logger.logFatal("[Login] Request timed out.");myMask.hide();this._enableFields();Ext.getCmp("warning").show();}
else{var result;try{result=Ext.util.JSON.decode(response.responseText);logger.logTrace("[Login] Got result from server: "+result.message);}
catch(ex){result={};result.message="Received an invalid response from server.";}
if(result.status===this.passwordExpiredStatus&&!this.externalAuthentication){Ext.getCmp("loginForm").getComponent("password").reset();myMask.hide();this._enableFields();logger.logTrace("[Login] Displaying ChangePassword dialog.");var changePassword=new RP.ui.ChangePassword({formTitle:RP.getMessage("rp.common.resetpassword.FormTitle"),formIntro:RP.getMessage("rp.common.resetpassword.FormIntro")});changePassword.on("destroy",function(comp){if(changePassword.success===true){var newPassword=changePassword.getNewPassword();this.login(userId,newPassword);}},this);}
else if(result.status===this.authenticatedStatus){var redirectUrl=this.onAuthenticatedHandler(window.location.href);if(redirectUrl){RP.util.Helpers.redirect(redirectUrl);}
else{RP.core.PageContext.setInitialURL(result.data.siteId,result.data.module);}}
else if(this.externalAuthentication&&result.status!==0){myMask.hide();this._enableFields();var config={title:RP.getMessage("rp.common.misc.Error"),msg:RP.getMessage("rp.common.login.ExternalLoginFailed"),icon:Ext.MessageBox.WARNING,cls:"rp-login-external-failed-msg",closable:false,buttons:{}};var closeUrl=RP.globals.getPath("SSO_CLOSE_URL");if(!Ext.isEmpty(closeUrl)){delete config.buttons;Ext.apply(config,{fn:this.onExternalAuthenticationFailure,buttons:{ok:RP.getMessage("rp.common.login.ContinueButton")}});}
Ext.MessageBox.show(config);}
else if(!this.externalAuthentication&&result.status===RP.REFSExceptionCodes.LOGIN_ATTEMPTS_EXCEEDED_EXCEPTION){logger.logError("[Login] "+result.message);myMask.hide();this._enableFields();Ext.MessageBox.show({title:RP.getMessage("rp.common.misc.Error"),msg:RP.getMessage("rp.common.exception.LOGIN_ATTEMPTS_EXCEEDED_EXCEPTION"),icon:Ext.MessageBox.ERROR,buttons:Ext.MessageBox.OK});}
else{logger.logFatal("[Login] "+result.message);myMask.hide();this._enableFields();Ext.getCmp("warning").show();}}}});},onAuthenticatedHandler:function(href){var queryString=href.match(/\?(.+)$/);var redirectUrl;if(!Ext.isEmpty(queryString)){var params=Ext.urlDecode(queryString[1]);redirectUrl=params.redirectUrl;}
if(!Ext.isEmpty(redirectUrl)&&!redirectUrl.match(/\/rp\/?$/)){return redirectUrl;}
return undefined;},afterRender:function(){Ext.EventManager.on(document,"keydown",this.keyHandler,this);var task=new Ext.util.DelayedTask(function(){Ext.getCmp("userName").focus();},this);task.delay(200);RP.login.LoginForm.superclass.afterRender.apply(this);},beforeDestroy:function(){Ext.EventManager.removeListener(document,"keydown",this.keyHandler);RP.login.LoginForm.superclass.beforeDestroy.apply(this);},keyHandler:function(ev,target,opt){if(Ext.MessageBox.isVisible()){Ext.getCmp("warning").hide();Ext.getCmp("loginForm").getComponent("password").focus(false,500);return;}
if((ev.keyCode===ev.ENTER)&&(target.type!="button")){this.submit();}},onExternalAuthenticationFailure:function(buttonId,text){RP.util.Helpers.redirect(RP.globals.getPath("SSO_CLOSE_URL"));},_disableFields:function(){Ext.getCmp('userName').disable();Ext.getCmp('password').disable();},_enableFields:function(){Ext.getCmp('userName').enable();Ext.getCmp('password').enable();}});
Ext.ns("RP.logout");RP.logout.LogoutForm=Ext.extend(Ext.Viewport,{secondsBeforeRedirect:0,initComponent:function(){var closeURL=RP.globals.getPath("SSO_CLOSE_URL"),text;if(!Ext.isEmpty(closeURL)){text=String.format(RP.getMessage("rp.common.logout.Redirect"),closeURL);RP.util.Helpers.redirect(closeURL,this.secondsBeforeRedirect*1000);}
else{text=RP.getMessage("rp.common.logout.SessionEnded");}
Ext.apply(this,{items:{xtype:"box",style:"padding-top: 15px; text-align: center;",html:text}});RP.logout.LogoutForm.superclass.initComponent.call(this);}});
RP.locale.Dispatch.waitForMessageLoaded('rp.common.ext.blankTextOne',function(){Ext.UpdateManager.defaults.indicatorText='<div class="loading-indicator">'+RP.getMessage("rp.common.ext.loadingText")+'</div>';if(Ext.DataView){Ext.DataView.prototype.emptyText="";}
if(Ext.grid.GridPanel){Ext.grid.GridPanel.prototype.ddText=RP.getMessage("rp.common.ext.ddText");}
if(Ext.LoadMask){Ext.LoadMask.prototype.msg=RP.getMessage("rp.common.ext.loadingText");}
Date.monthNames=RP.Formatting.Dates.getMonthNames();Date.getShortMonthName=function(month){return RP.Formatting.Dates.getShortMonthNames()[month];};Date.monthNumbers={Jan:0,Feb:1,Mar:2,Apr:3,May:4,Jun:5,Jul:6,Aug:7,Sep:8,Oct:9,Nov:10,Dec:11};Date.getMonthNumber=function(name){return Date.monthNumbers[name.substring(0,1).toUpperCase()+name.substring(1,3).toLowerCase()];};Date.dayNames=RP.Formatting.Dates.getDayNames();Date.getShortDayName=function(day){return RP.Formatting.Dates.getShortDayNames()[day];};Date.parseCodes.S.s=RP.getMessage("rp.common.ext.ordinalNumber");if(Ext.MessageBox){Ext.MessageBox.buttonText={ok:RP.getMessage("rp.common.ext.ok"),cancel:RP.getMessage("rp.common.ext.cancel"),yes:RP.getMessage("rp.common.ext.yes"),no:RP.getMessage("rp.common.ext.no")};}
if(Ext.util.Format){Ext.util.Format.date=function(value,format){if(!value){return"";}
if(!Ext.isDate(value)){value=new Date(Date.parse(value));}
return value.dateFormat(format||RP.Formatting.Dates.getExtPattern(RP.core.Formats.Date.Medium));};}
if(Ext.DatePicker){Ext.apply(Ext.DatePicker.prototype,{todayText:RP.getMessage("rp.common.ext.todayText"),minText:RP.getMessage("rp.common.ext.minDateText"),maxText:RP.getMessage("rp.common.ext.maxDateText"),disabledDaysText:"",disabledDatesText:"",monthNames:Date.monthNames,dayNames:Date.dayNames,nextText:RP.getMessage("rp.common.ext.nextMonthText"),prevText:RP.getMessage("rp.common.ext.prevMonthText"),monthYearText:RP.getMessage("rp.common.ext.monthYearText"),todayTip:RP.getMessage("rp.common.ext.todayTip"),ariaTitleDateFormat:RP.Formatting.Dates.getExtPattern(RP.core.Formats.Date.FullDateWithoutDayName),format:RP.Formatting.Dates.getExtPattern(RP.core.Formats.Date.Medium),longDayFormat:RP.Formatting.Dates.getExtPattern(RP.core.Formats.Date.FullDateWithoutDayName),okText:"&#160;OK&#160;",cancelText:RP.getMessage("rp.common.ext.cancel"),startDay:RP.Formatting.Dates.getWeekStartDay()});}
if(Ext.PagingToolbar){Ext.apply(Ext.PagingToolbar.prototype,{beforePageText:RP.getMessage("rp.common.ext.beforePageText"),afterPageText:RP.getMessage("rp.common.ext.afterPageText"),firstText:RP.getMessage("rp.common.ext.firstPageText"),prevText:RP.getMessage("rp.common.ext.prevPageText"),nextText:RP.getMessage("rp.common.ext.nextPageText"),lastText:RP.getMessage("rp.common.ext.lastPageText"),refreshText:RP.getMessage("rp.common.ext.refreshText"),displayMsg:RP.getMessage("rp.common.ext.displayMsg"),emptyMsg:RP.getMessage("rp.common.ext.emptyMsg")});}
if(Ext.form.BasicForm){Ext.form.BasicForm.prototype.waitTitle=RP.getMessage("rp.common.ext.waitTitle");}
if(Ext.form.Field){Ext.form.Field.prototype.invalidText=RP.getMessage("rp.common.ext.invalidFieldText");}
if(Ext.form.TextField){Ext.apply(Ext.form.TextField.prototype,{minLengthText:RP.getMessage("rp.common.ext.minLengthText"),maxLengthText:RP.getMessage("rp.common.ext.maxLengthText"),blankText:RP.getMessage("rp.common.ext.blankText"),regexText:"",emptyText:null});}
if(Ext.form.NumberField){Ext.apply(Ext.form.NumberField.prototype,{decimalSeparator:RP.Formatting.Numbers.getDecimalSeparator(),decimalPrecision:2,minText:RP.getMessage("rp.common.ext.minValText"),maxText:RP.getMessage("rp.common.ext.maxValText"),nanText:RP.getMessage("rp.common.ext.nanValText")});}
if(Ext.form.DateField){Ext.apply(Ext.form.DateField.prototype,{disabledDaysText:RP.getMessage("rp.common.ext.disabledText"),disabledDatesText:RP.getMessage("rp.common.ext.disabledText"),minText:RP.getMessage("rp.common.ext.minDateText"),maxText:RP.getMessage("rp.common.ext.maxDateText"),invalidText:RP.getMessage("rp.common.ext.invalidDateText"),format:RP.Formatting.Dates.getExtPattern(RP.core.Formats.Date.Medium),altFormats:RP.Formatting.Dates.createAltString()});}
if(Ext.form.ComboBox){Ext.apply(Ext.form.ComboBox.prototype,{loadingText:RP.getMessage("rp.common.ext.loadingText"),valueNotFoundText:undefined});}
if(Ext.form.VTypes){Ext.apply(Ext.form.VTypes,{emailText:RP.getMessage("rp.common.ext.emailText"),urlText:RP.getMessage("rp.common.ext.urlText"),alphaText:RP.getMessage("rp.common.ext.alphaText"),alphanumText:RP.getMessage("rp.common.ext.alphanumText")});}
if(Ext.form.HtmlEditor){Ext.apply(Ext.form.HtmlEditor.prototype,{createLinkText:'Please enter the URL for the link:',buttonTips:{bold:{title:RP.getMessage("rp.common.ext.boldTitle"),text:RP.getMessage("rp.common.ext.boldText"),cls:Ext.baseCSSPrefix+'html-editor-tip'},italic:{title:RP.getMessage("rp.common.ext.italicTitle"),text:RP.getMessage("rp.common.ext.italicText"),cls:Ext.baseCSSPrefix+'html-editor-tip'},underline:{title:RP.getMessage("rp.common.ext.underlineTitle"),text:RP.getMessage("rp.common.ext.underlineText"),cls:Ext.baseCSSPrefix+'html-editor-tip'},increasefontsize:{title:RP.getMessage("rp.common.ext.growTitle"),text:RP.getMessage("rp.common.ext.growText"),cls:Ext.baseCSSPrefix+'html-editor-tip'},decreasefontsize:{title:RP.getMessage("rp.common.ext.shrinkTitle"),text:RP.getMessage("rp.common.ext.shrinkText"),cls:Ext.baseCSSPrefix+'html-editor-tip'},backcolor:{title:RP.getMessage("rp.common.ext.highlightTitle"),text:RP.getMessage("rp.common.ext.highlightText"),cls:Ext.baseCSSPrefix+'html-editor-tip'},forecolor:{title:RP.getMessage("rp.common.ext.fontColorTitle"),text:RP.getMessage("rp.common.ext.fontColorText"),cls:Ext.baseCSSPrefix+'html-editor-tip'},justifyleft:{title:RP.getMessage("rp.common.ext.leftTitle"),text:RP.getMessage("rp.common.ext.leftText"),cls:Ext.baseCSSPrefix+'html-editor-tip'},justifycenter:{title:RP.getMessage("rp.common.ext.centerTitle"),text:RP.getMessage("rp.common.ext.centerText"),cls:Ext.baseCSSPrefix+'html-editor-tip'},justifyright:{title:RP.getMessage("rp.common.ext.rightTitle"),text:RP.getMessage("rp.common.ext.rightText"),cls:Ext.baseCSSPrefix+'html-editor-tip'},insertunorderedlist:{title:RP.getMessage("rp.common.ext.bulletTitle"),text:RP.getMessage("rp.common.ext.bulletText"),cls:Ext.baseCSSPrefix+'html-editor-tip'},insertorderedlist:{title:RP.getMessage("rp.common.ext.numberedTitle"),text:RP.getMessage("rp.common.ext.numberedText"),cls:Ext.baseCSSPrefix+'html-editor-tip'},createlink:{title:RP.getMessage("rp.common.ext.hyperLinkTitle"),text:RP.getMessage("rp.common.ext.hyperLinkText"),cls:Ext.baseCSSPrefix+'html-editor-tip'},sourceedit:{title:RP.getMessage("rp.common.ext.sourceTitle"),text:RP.getMessage("rp.common.ext.sourceText"),cls:Ext.baseCSSPrefix+'html-editor-tip'}}});}
if(Ext.grid.GridView){Ext.apply(Ext.grid.GridView.prototype,{sortAscText:RP.getMessage("rp.common.ext.sortAscText"),sortDescText:RP.getMessage("rp.common.ext.sortDescText"),columnsText:RP.getMessage("rp.common.ext.columnsText")});}
if(Ext.grid.GroupingView){Ext.apply(Ext.grid.GroupingView.prototype,{emptyGroupText:RP.getMessage("rp.common.ext.emptyGroupText"),groupByText:RP.getMessage("rp.common.ext.groupByText"),showGroupsText:RP.getMessage("rp.common.ext.showGroupsText")});}
if(Ext.grid.PropertyColumnModel){Ext.apply(Ext.grid.PropertyColumnModel.prototype,{nameText:RP.getMessage("rp.common.ext.nameText"),valueText:RP.getMessage("rp.common.ext.valueText"),dateFormat:RP.Formatting.Dates.getExtShortDatePattern(),falseText:RP.getMessage("rp.common.ext.falseText")});}
if(Ext.grid.BooleanColumn){Ext.apply(Ext.grid.BooleanColumn.prototype,{trueText:RP.getMessage("rp.common.ext.trueText"),falseText:RP.getMessage("rp.common.ext.falseText"),undefinedText:'&#160;'});}
if(Ext.grid.NumberColumn){Ext.apply(Ext.grid.NumberColumn.prototype,{format:String.format("0{0}000{1}00",RP.Formatting.Numbers.getThousandSeparator(),RP.Formatting.Numbers.getDecimalSeparator())});}
if(Ext.grid.DateColumn){Ext.apply(Ext.grid.DateColumn.prototype,{format:RP.Formatting.Dates.getExtPattern(RP.core.Formats.Date.Medium)});}
if(Ext.layout.BorderLayout&&Ext.layout.BorderLayout.SplitRegion){Ext.apply(Ext.layout.BorderLayout.SplitRegion.prototype,{splitTip:RP.getMessage("rp.common.ext.splitTip"),collapsibleSplitTip:RP.getMessage("rp.common.ext.collapsibleSplitTip")});}
if(Ext.form.TimeField){Ext.apply(Ext.form.TimeField.prototype,{minText:RP.getMessage("rp.common.ext.minTimeText"),maxText:RP.getMessage("rp.common.ext.maxTimeText"),invalidText:RP.getMessage("rp.common.ext.invalidTimeText"),format:RP.Formatting.Times.getExtPattern(RP.core.Formats.Time.Default),altFormats:"g:ia|g:iA|g:i a|g:i A|h:i|g:i|H:i|ga|ha|gA|h a|g a|g A|gi|hi|gia|hia|g|H"});}
if(Ext.form.CheckboxGroup){Ext.apply(Ext.form.CheckboxGroup.prototype,{blankText:RP.getMessage("rp.common.ext.blankTextAtLeast")});}
if(Ext.form.RadioGroup){Ext.apply(Ext.form.RadioGroup.prototype,{blankText:RP.getMessage("rp.common.ext.blankTextOne")});}});
RP.stash.api.endLoadLib();