/*
 *  $Copyright-Start$
 *
 *  Copyright (c) 2013
 *  RedPrairie Corporation
 *  All Rights Reserved
 *
 *  This software is furnished under a corporate license for use on a
 *  single computer system and can be copied (with inclusion of the
 *  above copyright) only for use on such a system.
 *
 *  The information in this document is subject to change without notice
 *  and should not be construed as a commitment by RedPrairie Corporation.
 *
 *  RedPrairie Corporation assumes no responsibility for the use of the
 *  software described in this document on equipment which has not been
 *  supplied or approved by RedPrairie Corporation.
 *
 *  $Copyright-End$
 */

Ext.define('Ext.button.overrides.Button',{override:'Ext.button.Button',initComponent:function(c){this.callParent(arguments);if(Ext.is.Tablet||Ext.is.Android){this.handleMouseEvents=false;}}});
RP.Date={clearTime:function(date){if(date.toString()==="Invalid Date"){return;}
var cloneDate=this.clone(date);var d=cloneDate.getDate();cloneDate.setHours(0);cloneDate.setMinutes(0);cloneDate.setSeconds(0);cloneDate.setMilliseconds(0);if(cloneDate.getDate()!=d){for(var hr=1,c=Ext.Date.add(cloneDate,Ext.Date.HOUR,hr);c.getDate()!=d;hr++,c=Ext.Date.add(cloneDate,Ext.Date.HOUR,hr)){}
cloneDate.setDate(d);cloneDate.setHours(c.getHours());}
return cloneDate;},compare:function(date1,date2){if(isNaN(date1)||isNaN(date2)){RP.throwError(date1+" - "+date2);}
else if((date1 instanceof Date)&&(date2 instanceof Date)){return(date1<date2)?-1:(date1>date2)?1:0;}
else{throw new TypeError(date1+" - "+date2);}},clone:function(date){return new Date(date.getTime());},equals:function(date1,date2){return this.compare(date1,date2||new Date())===0;},between:function(date,start,end){return date.getTime()>=start.getTime()&&date.getTime()<=end.getTime();},isAfter:function(date1,date2){return this.compare(date1,date2||new Date())===1;},isOnOrAfter:function(date1,date2){return this.compare(date1,date2||new Date())>=0;},isBefore:function(date1,date2){return this.compare(date1,date2||new Date())===-1;},isOnOrBefore:function(date1,date2){return this.compare(date1,date2||new Date())<=0;},addMilliseconds:function(date,value){var cloneDate=this.clone(date);cloneDate.setTime(cloneDate.getTime()+value);return cloneDate;},addSeconds:function(date,value){return this.addMilliseconds(date,value*1000);},addMinutes:function(date,value){return this.addMilliseconds(date,value*60000);},addHours:function(date,value){return this.addMilliseconds(date,value*3600000);},addDays:function(date,value){var cloneDate=this.clone(date);var expectedHours=cloneDate.getHours(),expectedMinutes=cloneDate.getMinutes();cloneDate.setTime(cloneDate.getTime()+value*86400000);this.adjustForDST(cloneDate,expectedHours,expectedMinutes);return cloneDate;},adjustForDST:function(date,expectedHours,expectedMinutes){var cloneDate=this.clone(date);var currentMinutes=cloneDate.getMinutes(),currentHours=cloneDate.getHours();if(currentHours==expectedHours&&currentMinutes==expectedMinutes){return cloneDate;}
var vectorHours=currentHours-expectedHours,deltaHours=Math.abs(vectorHours),deltaMinutes=Math.abs(currentMinutes-expectedMinutes);if(Math.abs((currentHours+24)-expectedHours)<deltaHours){vectorHours=(currentHours+24)-expectedHours;deltaHours=Math.abs(vectorHours);}
if(Math.abs(currentHours-(expectedHours+24))<deltaHours){vectorHours=currentHours-(expectedHours+24);deltaHours=Math.abs(vectorHours);}
if(deltaMinutes>0){cloneDate=this.addMinutes(cloneDate,-deltaMinutes*(vectorHours/Math.abs(vectorHours)));}
else{cloneDate=this.addHours(cloneDate,-vectorHours);}
return cloneDate;},addWeeks:function(date,value){return this.addDays(date,value*7);},addMonths:function(date,value){var cloneDate=this.clone(date);var n=cloneDate.getDate();cloneDate.setDate(1);cloneDate.setMonth(cloneDate.getMonth()+value);cloneDate.setDate(Math.min(n,this.getDaysInMonth(cloneDate.getFullYear(),cloneDate.getMonth())));return cloneDate;},addYears:function(date,value){return this.addMonths(date,value*12);},decodeDateInURL:function(val){if(!val){return null;}
if(typeof(val)==="string"){var parts=val.split("-");return new Date(parseInt(parts[2],10),parseInt(parts[0],10)-1,parseInt(parts[1],10));}
else{return val;}},encodeDateToURL:function(date){return Ext.String.format("{0}-{1}-{2}",date.getMonth()+1,date.getDate(),date.getFullYear());},isLeapYear:function(year){return((year%4===0&&year%100!==0)||year%400===0);},getDaysInMonth:function(year,month){return[31,(this.isLeapYear(year)?29:28),31,30,31,30,31,31,30,31,30,31][month];},formatDate:function(date,format){if(format&&!RP.Formatting.Dates.isValidFormat(format))
{return Ext.Date.format.apply(Ext.Date,arguments);}
return RP.core.Format.formatDate(date,format);},dateFormat:function(date){return this.formatDate.apply(date,[date,arguments[1],true]);},formatTime:function(date,formatObj){return RP.core.Format.formatTime(date,formatObj);},extParseDate:Ext.Date.parse,parseDate:function(date,format){if(arguments.length>1&&(format.length>1||format.length===1&&date.length<3)){return Ext.Date.parse.apply(Date,arguments);}
return RP.core.Format.parseDateTime(date,format);},parseTime:function(time,format){return RP.core.Format.parseTime(time,format);},deltaT:function(date1,date2){return new RP.TimeSpan(date1.getTime()-date2.getTime());},round:function(date,roundToMinutes){var cloneDate=this.clone(date);if(roundToMinutes===undefined){roundToMinutes=15;}
var m=cloneDate.getMinutes()%roundToMinutes;if(m>0){var halfRound=parseInt(roundToMinutes/2,10);if(m<=halfRound){cloneDate=this.addMinutes(cloneDate,-1*m);}
else{cloneDate=this.addMinutes(cloneDate,roundToMinutes-m);}}
cloneDate.setSeconds(0);cloneDate.setMilliseconds(0);return cloneDate;},roundToNearestMinute:function(date){var cloneDate=this.clone(date);if(cloneDate.getSeconds()>=30){cloneDate=this.addMinutes(cloneDate,1);}
cloneDate.setSeconds(0);cloneDate.setMilliseconds(0);return cloneDate;},roundToNearestSeconds:function(date,secondsInterval){var cloneDate=this.clone(date);if(secondsInterval===undefined){secondsInterval=15;}
var seconds=cloneDate.getSeconds()%secondsInterval;if(seconds>0){var halfRound=parseInt(secondsInterval/2,10);if(seconds<=halfRound){cloneDate=this.addSeconds(cloneDate,-1*seconds);}
else{cloneDate=this.addSeconds(cloneDate,secondsInterval-seconds);}}
cloneDate.setMilliseconds(0);return cloneDate;},roundBackToHour:function(date){var cloneDate=this.clone(date);cloneDate.setMinutes(0);cloneDate.setSeconds(0);cloneDate.setMilliseconds(0);return cloneDate;},addTime:function(date,time){var cloneDate=this.clone(date);cloneDate.setHours(time.getHours());cloneDate.setMinutes(time.getMinutes());cloneDate.setSeconds(time.getSeconds());cloneDate.setMilliseconds(time.getMilliseconds());return cloneDate;},getISO8601StringNoTranslation:function(date){return RP.core.Format.formatDate(date,RP.core.Format.ISO8601NoOffset);},getISO8601StringInUserTimeZone:function(date){var userTimeZoneOffset=Ext.Date.isDST(date)?RP.globals.getValue("USER_TIME_ZONE").daylightTimeOffset:RP.globals.getValue("USER_TIME_ZONE").standardTimeOffset;var minDecimal=userTimeZoneOffset%1;var hours=userTimeZoneOffset-minDecimal;var min=Math.round(minDecimal*60);var sign=userTimeZoneOffset>=0?"+":"-";hours=Math.abs(hours);hours=(hours.toString().length===1?"0":"")+hours;min=(min.toString().length===1?"0":"")+min;var sFormatVal=sign+hours+":"+min;return RP.core.Format.formatDate(date,RP.core.Format.ISO8601NoOffset)+sFormatVal;},translateFormat:function(format){return format.replace(/d/,"dd").replace(/D/,"DDD").replace(/j/,"d").replace(/m/,"mm").replace(/M/,"MMM").replace(/n/,"m").replace(/y/,"yy").replace(/Y/,"yyyy").replace(/a/,"am/pm").replace(/A/,"AM/PM").replace(/h/,"hh").replace(/H/,"HH").replace(/g/,"h").replace(/G/,"H").replace(/i/,"mm").replace(/s/,"ss").replace(/u/g,"s");}};
Ext.define('Ext.view.overrides.Table',{override:'Ext.view.Table',initComponent:function(){this.callParent(arguments);if(Ext.is.Tablet||Ext.is.Android){this.trackOver=false;}}});
Ext.ns("RP.util");RP.util.DeprecationUtils=function(){var deprecationMessageTracker={};function convertNameSpaceToWindowNameSpace(namespace){var contexts=namespace.split(".");var baseContext=window;for(var i=0;i<contexts.length;i++){if(!Ext.isDefined(baseContext)){return undefined;}
baseContext=baseContext[contexts[i]];}
return baseContext;}
function replaceProperty(oldObject,oldName,newObject,property,deprecationMessage){if(Ext.isFunction(newObject[property])){deprecationMessageTracker[oldName+"."+property]=false;oldObject[property]=function(){if(deprecationMessageTracker[oldName+"."+property]===false){RP.util.DeprecationUtils.logStackTrace(deprecationMessage);deprecationMessageTracker[oldName+"."+property]=true;}
return newObject[property].apply(newObject,arguments);};}
else{oldObject[property]=newObject[property];}}
return{renameClass:function(oldName,newName){var newClass=convertNameSpaceToWindowNameSpace(newName);var oldClass=convertNameSpaceToWindowNameSpace(oldName);var deprecationMessage=Ext.String.format("[DEPRECATED] The use of the {0} shorthand is deprecated.  Please use {1}.",oldName,newName);if(!Ext.isDefined(oldClass)){oldClass=Ext.define(oldName,{});}
if(newClass.prototype){for(var property in newClass.prototype){replaceProperty(oldClass.prototype,oldName,newClass.prototype,property,deprecationMessage);}
for(var prop in newClass){if(!Ext.isDefined(newClass.prototype[prop])){replaceProperty(oldClass,oldName,newClass,prop,deprecationMessage);}}}
else{Ext.iterate(newClass,function(property){replaceProperty(oldClass,oldName,newClass,property,deprecationMessage);});}},deprecatedConfigOption:function(className,oldName,optionalMessage){if(!Ext.isDefined(optionalMessage)){optionalMessage="";}
var deprecationMessage=Ext.String.format("The configuration option, {0}, is no longer supported by the {1} class. {2}",oldName,className,optionalMessage);RP.util.DeprecationUtils.logStackTrace(deprecationMessage);},deprecatedInstanceMethod:function(oldClassName,newClassName,oldMethodName,newMethodName,optionalMessage){var oldClass=convertNameSpaceToWindowNameSpace(oldClassName);var newClass=convertNameSpaceToWindowNameSpace(newClassName);if(!Ext.isDefined(optionalMessage)){optionalMessage="";}
var deprecatedMsg=Ext.String.format("[DEPRECATED] The use of {0}.{1} is deprecated.  Please use {2}.{3} {4}.",oldClassName,oldMethodName,newClassName,newMethodName,optionalMessage);deprecationMessageTracker[oldClassName+"."+oldMethodName]=false;oldClass.prototype[oldMethodName]=function(){if(deprecationMessageTracker[oldClassName+"."+oldMethodName]===false){RP.util.DeprecationUtils.logStackTrace(deprecatedMsg);deprecationMessageTracker[oldClassName+"."+oldMethodName]=true;}
return newClass.prototype[newMethodName].apply(this,arguments);};},deprecatedStaticMethodToStaticMethod:function(oldClassName,newClassName,oldMethodName,newMethodName,optionalMessage){var oldClass=convertNameSpaceToWindowNameSpace(oldClassName);var newClass=convertNameSpaceToWindowNameSpace(newClassName);if(!Ext.isDefined(optionalMessage)){optionalMessage="";}
var deprecatedMsg=Ext.String.format("[DEPRECATED] The use of {0}.{1} is deprecated.  Please use {2}.{3} {4}.",oldClassName,oldMethodName,newClassName,newMethodName,optionalMessage);deprecationMessageTracker[oldClassName+"."+oldMethodName]=false;oldClass[oldMethodName]=function(){if(deprecationMessageTracker[oldClassName+"."+oldMethodName]===false){RP.util.DeprecationUtils.logStackTrace(deprecatedMsg);deprecationMessageTracker[oldClassName+"."+oldMethodName]=true;}
return newClass[newMethodName].apply(newClass,arguments);};},deprecatedPrototypeMethodToStaticMethod:function(oldClassName,newClassName,oldMethodName,newMethodName,optionalMessage){var oldClass=convertNameSpaceToWindowNameSpace(oldClassName);var newClass=convertNameSpaceToWindowNameSpace(newClassName);if(!Ext.isDefined(optionalMessage)){optionalMessage="";}
var deprecatedMsg=Ext.String.format("[DEPRECATED] The use of {0}.prototype.{1} is deprecated.  Please use {2}.{3} {4}",oldClassName,oldMethodName,newClassName,newMethodName,optionalMessage);deprecationMessageTracker[oldClassName+"."+oldMethodName]=false;oldClass.prototype[oldMethodName]=function(){if(deprecationMessageTracker[oldClassName+"."+oldMethodName]===false){RP.util.DeprecationUtils.logStackTrace(deprecatedMsg);deprecationMessageTracker[oldClassName+"."+oldMethodName]=true;}
var newArgs=Ext.Array.clone(arguments);newArgs.unshift(this);return newClass[newMethodName].apply(newClass,newArgs);};},deprecatedStaticMethodToPrototypeMethod:function(oldClassName,newClassName,oldMethodName,newMethodName,optionalMessage){var oldClass=convertNameSpaceToWindowNameSpace(oldClassName);var newClass=convertNameSpaceToWindowNameSpace(newClassName);if(!Ext.isDefined(optionalMessage)){optionalMessage="";}
var deprecatedMsg=Ext.String.format("[DEPRECATED] The use of {0}.{1} is deprecated.  Please use {2}.prototype.{3} {4}",oldClassName,oldMethodName,newClassName,newMethodName,optionalMessage);deprecationMessageTracker[oldClassName+"."+oldMethodName]=false;oldClass[oldMethodName]=function(){if(deprecationMessageTracker[oldClassName+"."+oldMethodName]===false){RP.util.DeprecationUtils.logStackTrace(deprecatedMsg);deprecationMessageTracker[oldClassName+"."+oldMethodName]=true;}
var newArgs=Ext.Array.clone(arguments);var object=newArgs.shift();return newClass.prototype[newMethodName].apply(object,newArgs);};},logStackTrace:function(msg){if(RP.globals.getValue("SERVER_TYPE")!=="production"){if(window.console&&console.error){console.error(msg);}
logger.logWarning(msg+"  See the browser console for detailed information.");}}};}();
Ext.ns("RP.core");RP.core.FormatEngine=function(formats,constants){var FORMAT_ISO8601_WITH_OFFSET="yyyy\u0027-\u0027MM\u0027-\u0027ddTHH:mm:sszzz";var FORMAT_ISO8601_WITHOUT_OFFSET="S";var _FormatInfo={};function _SetFormatInfo(formatObj,sFormatType)
{_FormatInfo={};_FormatInfo.FormatString=Ext.String.trim(formatObj.formatstring);}
function _IsValidInputToFormat(input){var bValid=true;var re=/^\d+$/;if(!re.test(input)){bValid=false;}
return bValid;}
function _TransStringFormat(value){var sFormatString=_FormatInfo.FormatString;var sOutput="";var sChar="";var j=value.length-1;var bBodyText=false;for(var i=sFormatString.length-1;i>=0;i--){sChar=sFormatString.charAt(i);if(sChar==="0")
{if(j<0){break;}
sOutput=value.charAt(j)+sOutput;j--;}
else
{if(sChar==="'")
{if(!bBodyText){bBodyText=true;}
else{if(sFormatString.charAt(i-1)==="'"){sOutput=sChar+sOutput;}
if(sFormatString.charAt(i+1)!=="'"){bBodyText=false;}}}
else
{if(bBodyText){sOutput=sChar+sOutput;}}}}
return sOutput;}
function _FormatDate(date,format){if(!format){format=RP.core.Formats.Date.Default;}
return RP.Formatting.Dates.format(date,format);}
function _FormatTime(time,format){if(!format){format=RP.core.Formats.Time.Default;}
return RP.Formatting.Times.format(time,format);}
function _FormatTimeSpan(value,formatObj){var s=value.totalSeconds();var m=Math.floor(s/60)%60;var h=Math.floor(s/3600);var hh=Ext.String.leftPad(h,2,"0");var mm=Ext.String.leftPad(m,2,"0");var ss=Ext.String.leftPad(Math.round(s%60),2,"0");if(!formatObj.template){formatObj.template=new Ext.Template(formatObj.formatstring);formatObj.template.compile();}
return formatObj.template.apply({h:h,hh:hh,mm:mm,ss:ss});}
function _FormatCurrency(number,format){if(!format){format=RP.core.Formats.Currency.Default;}
return RP.Formatting.Currencies.format(number,format);}
function _FormatNumber(number,format,precision){if(!format){format=RP.core.Formats.Number.Default;}
if(format===RP.core.Formats.Number.CustomPrecision){return RP.Formatting.Numbers.format(number,format,precision);}
if(format.indexOf("p")>-1){return RP.Formatting.Percentages.format(number,format,precision);}
else if(format.indexOf("c")!==-1){return RP.Formatting.Currencies.format(number,format);}
return RP.Formatting.Numbers.format(number,format,precision);}
function _FormatString(value,formatObj){if(!_IsValidInputToFormat(value)){RP.throwError("Invalid input: "+value.toString()+" to format as: String");}
if(!formatObj){RP.throwError("Must specify format type object");}
_SetFormatInfo(formatObj,"string");return _FormatBasedOnType("string",value,formatObj);}
function _ParseDate(date,format){var parsedDate=RP.Formatting.Dates.parse(date,format);if(parsedDate){return RP.Date.clearTime(parsedDate);}
return parsedDate;}
function _ParseTime(time,format){return RP.Formatting.Times.parse(time,format);}
function _ParseDateWithTime(datetime,format){return RP.Formatting.Dates.parse(datetime,format);}
function _ParseCurrency(number){if(number===""){return 0;}
try{return RP.Formatting.Currencies.parse(number);}
catch(e){return NaN;}}
function _ParseNumber(number,format){return RP.Formatting.Numbers.parse(number,format);}
function _ParseString(sValue){var sOutput="";if(sValue){var re=/\d+/;while(re.test(sValue)){sOutput=sOutput+RegExp.lastMatch;sValue=RegExp.rightContext;}}
return sOutput;}
function _ConvertDateToUserTimeZone(date){if(Ext.isEmpty(RP.globals.getValue("USER_TIME_ZONE").standardTimeOffset)||Ext.isEmpty(RP.globals.getValue("USER_TIME_ZONE").daylightTimeOffset)){throw new Error("The authentication connection does not have user preferred time zone implemented");}
var userTimeZoneOffset=Ext.Date.isDST(date)?RP.globals.getValue("USER_TIME_ZONE").daylightTimeOffset:RP.globals.getValue("USER_TIME_ZONE").standardTimeOffset;var timezoneDifference=(date.getTimezoneOffset()/60)+userTimeZoneOffset;return RP.Date.addHours(date,timezoneDifference);}
function _FormatDateInUserTimeZone(date,format){return _FormatDate(_ConvertDateToUserTimeZone(date),format);}
function _FormatTimeInUserTimeZone(date,format){return _FormatTime(_ConvertDateToUserTimeZone(date),format);}
function _ConvertDateToServerTimeZone(date){if(Ext.isEmpty(date.isoDateNoOffset)){throw new Error("This date can't be displayed with no translation, the date must be created as an ISO-8601 String.");}
return new Date(date.isoDateNoOffset);}
function _FormatDateNoTranslation(date,format){return _FormatDate(_ConvertDateToServerTimeZone(date),format);}
function _FormatTimeNoTranslation(date,format){return _FormatTime(_ConvertDateToServerTimeZone(date),format);}
return{ISO8601:FORMAT_ISO8601_WITH_OFFSET,ISO8601NoOffset:FORMAT_ISO8601_WITHOUT_OFFSET,formatCurrency:_FormatCurrency,formatDate:_FormatDate,formatDateInUserTimeZone:_FormatDateInUserTimeZone,formatDateNoTranslation:_FormatDateNoTranslation,formatNumber:_FormatNumber,formatTime:_FormatTime,formatTimeInUserTimeZone:_FormatTimeInUserTimeZone,formatTimeNoTranslation:_FormatTimeNoTranslation,formatTimeSpan:_FormatTimeSpan,parseCurrency:_ParseCurrency,parseDate:_ParseDate,parseDateTime:_ParseDateWithTime,parseTime:_ParseTime,parseNumber:_ParseNumber};};
Ext.ns("RP.core");RP.core.Formats={Date:{Long:"y",Default:"J",Medium:"J",TimeStamp:"x",MediumWithHours:"K",FullDateOnly:"D",FullDateTime:"v",POSDate:"S",MediumDateExp:"b",WeekdayDate:"w",Month:"MMM",FullMonth:"MMMM",LongYear:"yyyy",ShortWeekday:"ddd",Weekday:"dddd",Short:"A",ShortLongYear:"d",MonthYear:"B",FullMonthYear:"C",MonthDate:"E",FullMonthDate:"M",FullDateWithoutDayName:"G",MonthDateDay:"I",ShortDateTime:"H",ShortWeekdayMedium:"q",AbbrFull:"a",ISO2014:"yyyy\u0027-\u0027MM\u0027-\u0027dd",ISO8601:"yyyy\u0027-\u0027MM\u0027-\u0027ddTHH:mm:sszzz",AbbrFullDateTime:"z",WeekDayTime:"k"},Time:{Default:"m",ShortAMPM:"s",Long:"l",Military:"HH:mm",MilitaryWithSeconds:"HH:mm:ss",HourOnly:"h",MilitaryShort:"H:mm",Short:"t",TrimHoursLong:"T"},Number:{Default:"n",HighPrecision:"n4",MediumPrecision:"n2",MediumLowPrecision:"n1",LowPrecision:"n0",ScheduleTotal:"r",MediumPrecisionRaw:"r",MinusSign:"o",CustomPrecision:"precision"},Currency:{Default:"c",HighPrecision:"c",MediumPrecision:"c",LowPrecision:"c0"},Percent:{Default:"p",HighPrecision:"p4",MediumPrecision:"p2",MediumLowPrecision:"p1",LowPrecision:"p0",CustomPrecision:"precision"},TimeSpan:{Short:{type:"timespan",formatstring:"{h}:{mm}",template:undefined},Medium:{type:"timespan",formatstring:"{h}:{mm}:{ss}",template:undefined},Long:{type:"timespan",formatstring:"{hh}:{mm}:{ss}",template:undefined}}};RP.core.FormatConstants={Weekdays:RP.Formatting.Dates.getShortDayNames(),FullWeekdays:RP.Formatting.Dates.getDayNames(),Months:RP.Formatting.Dates.getShortMonthNames(),FullMonths:RP.Formatting.Dates.getMonthNames()};RP.core.Format=RP.core.FormatEngine(RP.core.Formats,RP.core.FormatConstants);
Ext.ns("RP.util");Ext.define("RP.util.LogMessage",{extend:"Ext.data.Model",fields:[{name:'message'},{name:'level'},{name:'cls'}]});Ext.define("RP.util.logger",{mixins:{observable:"Ext.util.Observable"},_maxEntries:1000,_logToServer:false,_clientLogLastPost:new Date(),_clientLogInterval:5000,_clientLogsBuffer:[],_clientLogsCaptured:false,_levels:{TRACE:"TRACE",DEBUG:"DEBUG",INFO:"INFO",WARNING:"WARNING",ERROR:"ERROR",FATAL:"FATAL",ALL:"ALL"},_store:new Ext.data.ArrayStore({model:"RP.util.LogMessage"}),_currentFilter:undefined,constructor:function(config){this.mixins.observable.constructor.call(this,config);this.addEvents("logtoservertoggled");this.callParent(arguments);},getStore:function(){return this._store;},log:function(message,level){if(level===undefined){level=this._levels.INFO;}
var dateLogged=new Date();var formattedMessage=Ext.String.format("<{0}::{1}.{2}> {3}",RP.Date.formatTime(dateLogged,RP.core.Formats.Time.Military),dateLogged.getSeconds(),dateLogged.getMilliseconds(),message);var newModel=new this._store.model({message:formattedMessage,level:level,cls:this.getLogClass(level)});var suspended=this._store.eventsSuspended;if(this._currentFilter&&!suspended){this._store.suspendEvents(false);}
this._store.add(newModel);if(this._logToServer){this._clientLogsBuffer.push(Ext.String.format("{0} {1}",level,formattedMessage));}
if(this._store.getCount()>this._maxEntries){this._store.removeAt(0);}
if(this._currentFilter&&!suspended){this._store.resumeEvents();this.filterBy(this._currentFilter);}},getLogClass:function(level){var cls;switch(level){case this._levels.DEBUG:cls="rp-log-d";break;case this._levels.INFO:cls="rp-log-i";break;case this._levels.WARNING:cls="rp-log-w";break;case this._levels.ERROR:cls="rp-log-e";break;case this._levels.FATAL:cls="rp-log-f";break;default:cls="rp-log-t";break;}
return cls;},logTrace:function(message){this.log(message,this._levels.TRACE);},logDebug:function(message){this.log(message,this._levels.DEBUG);},logInfo:function(message){this.log(message,this._levels.INFO);},logWarning:function(message){this.log(message,this._levels.WARNING);},logError:function(e){var type,body;if(e.name==="Ext.Error"){type="Ext.Error";body=e.message;}
else if(e.statusText){type="AJAX Exception";body=Ext.String.format("status={0}; statusText={1}",e.status,e.statusText);}
else{type="JS Error";body=e.toString();}
this.log(Ext.String.format("[{0}]: {1}",type,body),this._levels.ERROR);},logFatal:function(message){this.log(message,this._levels.FATAL);},print:function(){var texts='Number of entries: '+this._store.getCount()+'\n';this._store.each(function(record){var entries=record.get('message');texts=texts+" \n "+entries;});return texts;},filterBy:function(levels){if(!Ext.isArray(levels)){levels=[levels];}
if(this._currentFilter){delete this._currentFilter;}
this._currentFilter=levels;this._store.filterBy(function(record,id){if(Ext.Array.indexOf(levels,record.get("level"))!=-1){return true;}
return false;},this);},_getLocale:function(){if(navigator.language){return navigator.language;}
else if(navigator.browserLanguage){return navigator.browserLanguage;}
else if(navigator.systemLanguage){return navigator.systemLanguage;}
else if(navigator.userLanguage){return navigator.userLanguage;}},logEnvironment:function(){this.logInfo("[Logger] REFS Session ID: "+(Ext.util.Cookies.get("REFSSessionID")!==null?Ext.util.Cookies.get("REFSSessionID"):"Not logged in"));this.logInfo("[Logger] User ID: "+(RP.globals!==undefined?RP.globals.USERNAME:"No current user"));this.logInfo("[Logger] Browser Code Name: "+navigator.appCodeName);this.logInfo("[Logger] Browser Name: "+navigator.appName);this.logInfo("[Logger] Browser Version: "+navigator.appVersion);this.logInfo("[Logger] Browser Minor Version: "+navigator.appMinorVersion);this.logInfo("[Logger] Platform: "+navigator.platform);this.logInfo("[Logger] User Agent: "+navigator.userAgent);this.logInfo("[Logger] Locale: "+this._getLocale());this.logInfo("[Logger] SSL: "+(Ext.isSecure?"yes":"no"));this.logInfo("[Logger] Cookies Enabled: "+(navigator.cookieEnabled?"yes":"no"));this.logInfo("[Logger] Java Enabled: "+(navigator.javaEnabled()?"yes":"no"));this.logInfo("[Logger] Ext core version: "+Ext.getVersion("core").version);this.logInfo("[Logger] Ext JS version: "+Ext.getVersion("extjs").version);var url=window.location.href.split("#");this.logInfo("[Logger] Location: "+url[0]);},clearAll:function(){var suspended=this._store.eventsSuspended;if(suspended){this._store.resumeEvents();}
this._store.removeAll();if(suspended){this._store.suspendEvents(false);}},toggleLogToServer:function(){this.setLogToServer(!this._logToServer,true);},setUIMaxEntries:function(value){this._maxEntries=value;if(this._store.getCount()>this._maxEntries){var diff=this._store.getCount()-this._maxEntries;for(var i=0;i<=diff;i++){this._store.removeAt(0);}}},setLogToServer:function(flag,notifyServer){if(this._logToServer){this.flushClientLogs();}
if(!this._clientLogsCaptured){this._clientLogsCaptured=true;this._store.each(function(record){this._clientLogsBuffer.push(Ext.String.format("{0} {1}",record.get("level"),record.get("message")));},this);}
this._logToServer=flag;this.fireEvent("logtoservertoggled");if(notifyServer){if(flag===false&&this.isLogDownloadEnabled()){Ext.Msg.show({title:RP.getMessage('rp.common.misc.DownloadLogPromptTitle'),msg:RP.getMessage('rp.common.misc.DownloadLogPrompt'),buttons:Ext.Msg.OKCANCEL,icon:Ext.Msg.QUESTION,scope:this,fn:function(btn){if(btn==='ok'){Ext.getBody().mask(RP.getMessage('rp.common.misc.LoadingMaskText'));}
Ext.Ajax.request({url:this._clientLogPostURL,params:{action:'enable',content:'false',download:(btn==='ok'?'true':'false')},scope:this,success:(btn!=='ok'?Ext.emptyFn:function(response){Ext.getBody().unmask();if(response.responseObject.data.downloadable===true){var downloadToken=Ext.id(null,'LogDownloadToken-');var url=Ext.String.format('{0}?action=download&content={1}',this._clientLogPostURL,downloadToken);if(!this.DownloadIFrame){this.DownloadIFrame=new Ext.ux.IFrameComponent({url:url,hidden:true});this.DownloadIFrame.render(Ext.getBody());}
else{this.DownloadIFrame.load(url);}
this.LogDownloadResponseTask=Ext.TaskManager.start({interval:250,scope:this,run:this._checkLogDownloadResponse,args:[downloadToken,response.responseObject.data.filename]});}else{Ext.Msg.show({title:RP.getMessage('rp.common.misc.LogDownloadFailedTitle'),msg:RP.getMessage('rp.common.misc.LogTooBigForDownload')+'$REFSDIR/logs/'+response.responseObject.data.filename,buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR});}}),callback:(btn!=='ok'?Ext.emptyFn:function(){Ext.getBody().unmask();})});}});}else{Ext.Ajax.request({url:this._clientLogPostURL,params:{action:"enable",content:flag?"true":"false"},scope:this,failure:function(){this.logError("[logger] Failed to enable/disable log to server");}});}}},isLogDownloadEnabled:function(){return RP.globals.getValue("LOG_DOWNLOAD_ENABLED")==="true";},_checkLogDownloadResponse:function(downloadToken,filename){var token=Ext.util.Cookies.get('REFS-LogDownloadToken');var success=Ext.util.Cookies.get('REFS-LogDownloadSuccess')==="true";if(token===downloadToken){if(!success){Ext.Msg.show({title:RP.getMessage('rp.common.misc.LogDownloadFailedTitle'),msg:RP.getMessage('rp.common.misc.LogDownloadFailed')+'$REFSDIR/logs/'+filename,buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR});}
Ext.TaskManager.stop(this.LogDownloadResponseTask);}},getIsLogToServer:function(){return this._logToServer;},setLogToServerInterval:function(intervalMS){this._clientLogInterval=intervalMS;},getLogToServerInterval:function(){return this._clientLogInterval;},setLogToServerURL:function(url){this._clientLogPostURL=url;},getLogToServerURL:function(){return this._clientLogPostURL;},flushClientLogs:function(){if(!this._clientLogPostURL||this._clientLogsBuffer.length===0){return;}
if(this._clientLogsBuffer.length>0){this.logTrace("[logger] Dumping client logs to server.... ");Ext.Ajax.request({url:this._clientLogPostURL,params:{action:"post",content:this._clientLogsBuffer.join("\n")+"\n"},scope:this,success:function(){this._clientLogLastPost=new Date();this._clientLogsBuffer=[];},failure:function(){this._clientLogLastPost=new Date();this.logError("[logger] Client Log failed to flush to the server");}});}}});logger=new RP.util.logger();logger.logEnvironment();if(Ext.isFunction(window.onunload)){window.onunload=window.onunload.createSequence(function(){logger.flushClientLogs();});}
else{window.onunload=function(){logger.flushClientLogs();};}
var serverLogTask=Ext.TaskManager.start({run:function(){if(!logger.getIsLogToServer()){return;}
logger.flushClientLogs();},interval:logger.getLogToServerInterval()});
Ext.ns("RP.util");RP.util.Waiter=function(config){config=config||{};this.config=Ext.apply({},config);this.config.defer=(!Ext.isDefined(config.defer)||(config.defer!==false));this.waitObjs=[];this.handlers=[];if(!Ext.isEmpty(config.handler)){this.addHandlers(config.handler);}
this._suspended=false;if(Ext.isArray(config.objs)){this.waitObjs=config.objs.concat();}
else if(!Ext.isEmpty(config.objs)){this.waitObjs.push(config.objs);}};RP.util.Waiter.prototype={add:function(obj){if(Ext.isArray(obj)){this.waitObjs=this.waitObjs.concat(obj);Ext.each(obj,function(o){logger.logTrace("[Waiter] Added "+o);});}
else{this.waitObjs.push(obj);logger.logTrace("[Waiter] Added "+obj);}},getCount:function(){return this.waitObjs.length;},isEmpty:function(){return(this.getCount()===0?true:false);},remove:function(obj){logger.logTrace("[Waiter] Removed "+obj);Ext.Array.remove(this.waitObjs,obj);if(!this._suspended&&this.waitObjs.length===0){this._invokeHandlers();}},clear:function(){delete this.waitObjs;this.waitObjs=[];delete this.handlers;this.handlers=[];},addHandler:function(handler,scope){this.handlers.push({fnction:handler,scope:scope||this});},addHandlers:function(handlers){if(Ext.isEmpty(handlers)){return;}
if(!Ext.isArray(handlers)){handlers=[handlers];}
Ext.each(handlers,function(handler){if(Ext.isObject()&&handler.fnction){this.addHandler(handler.fnction,handler.scope||undefined);}
else{this.addHandler(handler);}},this);},insertHandler:function(handler,scope){this.handlers.splice(0,0,{fnction:handler,scope:scope||this});},suspend:function(){this._suspended=true;},resume:function(){if(this._suspended){this._suspended=false;if(this.waitObjs.length===0){this._invokeHandlers();}}},_invokeHandlers:function(){while(this.handlers.length){var h=this.handlers.shift();if(this.config.defer){Ext.defer(h.fnction,1,h.scope);}
else{h.fnction.call(h.scope);}}}};
Ext.ns("RP.util");RP.util.FunctionQueue=function(config){this._config=config||{};this._q=[];};RP.util.FunctionQueue.prototype={add:function(f){this._q.push(f);},execute:function(successFn,errorFn){logger.logTrace("[FunctionQueue] Starting execution of queue ("+this._q.length+" items)...");this._successFn=successFn;this._errorFn=errorFn;this._executeNext();},_executeNext:function(){if(this._q.length>0){var f=this._q.splice(0,1)[0];logger.logTrace("[FunctionQueue] Executing next item...");try{f(Ext.bind(this._onItemSuccess,this),Ext.bind(this._onItemFailure,this));}
catch(e){logger.logError(e);if(RP.globals.SERVER_TYPE==="development"){throw e;}
this._onItemFailure();}}
else{logger.logTrace("[FunctionQueue] Successfully executed all items...");if(Ext.isFunction(this._successFn)){this._successFn();}}},_onItemSuccess:function(){logger.logTrace("[FunctionQueue] Item successfully executed.");if(this._config.noDefer){this._executeNext();}
else{Ext.defer(this._executeNext,10,this);}},_onItemFailure:function(){logger.logTrace("[FunctionQueue] Item failed.");if(Ext.isFunction(this._errorFn)){this._errorFn();}}};
Ext.define('RP.util.URLTransformer',{singleton:true,transformStatic:function(url){var base=RP.globals&&RP.globals.paths&&!Ext.isEmpty(RP.globals.paths.STATIC)?RP.globals.paths.STATIC:undefined;return RP.util.URLTransformer.rebase(url,base);},transformStash:function(url){var base=RP.globals&&RP.globals.paths&&!Ext.isEmpty(RP.globals.paths.STASH)?RP.globals.paths.STASH:undefined;return RP.util.URLTransformer.rebase(url,base);},rebase:function(url,base){if(url&&base&&url.indexOf("://")===-1&&url.indexOf(base)!==0){url=base+url;}
return url;},replaceClientMode:function(url){if(url&&url.indexOf("{client-mode}")>=0){url=url.replace(/\{client-mode\}/g,RP.globals.CLIENTMODE);}
return url;}});
Ext.define('RP.util.ScriptLoader',{singleton:true,semaphore:0,constructor:function(cfg){this.lab=$LAB.setOptions({AlwaysPreserveOrder:Ext.isIE});this.callParent(arguments);},onReady:function(fn){if(this.semaphore===0){logger.logTrace("[ScriptLoader] onReady - Called with no scripts in the queue.");fn();}else{logger.logTrace("[ScriptLoader] onReady - Waiting for scripts in queue to load...");$LAB.queueWait(fn);}},loadSerial:function(urls,callback){this.load(urls,callback);},load:function(urls,callback){this._doLoadWithUrlTransform(urls,callback,RP.util.URLTransformer.transformStatic);},loadFromStashRoot:function(urls,callback){this._doLoadWithUrlTransform(urls,callback,RP.util.URLTransformer.transformStash);},loadDirect:function(urls,callback){this._doLoadWithUrlTransform(urls,callback,function(url){return url;});},_doLoadWithUrlTransform:function(urls,callback,transformFn){if(Ext.isEmpty(urls)){return;}
callback=callback||Ext.emptyFn;urls=Ext.Array.from(urls);var ii;for(ii=0;ii<urls.length;ii++){if(Ext.isString(urls[ii])){urls[ii]=transformFn(urls[ii]);urls[ii]=RP.util.URLTransformer.replaceClientMode(urls[ii]);}}
logger.logTrace("[ScriptLoader] Loading Scripts: "+urls.join(","));this.semaphore++;this.lab.script(urls).wait(Ext.bind(function(){callback();this.semaphore--;if(this.semaphore===0){logger.logTrace("[ScriptLoader] onReady - Scripts in queue loaded, so invoking handlers...");$LAB.runQueue();}},this));},loadStashLibrary:function(name,version,callback,errorFn){var incs;try{incs=RP.stash.getLibraryIncludes(name,version);}
catch(error){logger.logFatal("[ScriptLoader] "+error.message);}
if(incs.length===0){logger.logDebug("[ScriptLoader] No items for library '"+name+"'");return;}
logger.logDebug("[ScriptLoader] Loading library '"+name+"' version "+version);for(var i=0;i<incs.length;i++){var inc=incs[i];if(inc.isType("s")){logger.logTrace("[ScriptLoader] Adding external script: "+inc.getUrl());this.load(inc.getUrl(),callback,errorFn);}
else if(inc.isType("c")){logger.logTrace("[ScriptLoader] Adding CSS: "+inc.getUrl());RP.util.CSSLoader.load(inc.getUrl(),false);callback();}
else if(inc.isType("j")){logger.logTrace("[ScriptLoader] Adding inline script: "+inc.getInlineCode());try{eval(inc.getInlineCode());callback();}catch(e){errorFn();throw e;}}
else{logger.logFatal("[ScriptLoader] Unhandled include type from library: "+inc.getType());}}}});
Ext.define('RP.util.SourceScriptLoader',{singleton:true,srcServletPath:"src/{0}",instrumented:(function(){var instrumentedFiles,map={};if(localStorage){instrumentedFiles=Ext.JSON.decode(localStorage.getItem('instrumentedFiles'));Ext.Array.each(instrumentedFiles,function(path){map[path]=true;});}
return map;}()),urlTransform:function(url){var prefix='',staticPath='';if(RP.globals&&RP.globals.paths&&!Ext.isEmpty(RP.globals.paths.STATIC)){prefix=RP.globals.paths.STATIC;staticPath=prefix.replace(/web\/?$/,'');}
if(prefix&&(url.indexOf("://")<0)){url=staticPath+url;}
return url;},load:function(urls){if(!Ext.isArray(urls)){urls=[urls];}
var srcUrls=[];Ext.each(urls,function(url){url=url.replace(/\\/g,"/");srcUrls.push(this.tryRedirectToInstrumented(url));},this);RP.util.ScriptLoader.load(srcUrls);},tryRedirectToInstrumented:function(url){if(this.instrumented[url]===true){url=url.replace(/^(\/|[^\/]+\/)/,RP.globals.paths.STATIC+'instrumented/');}
else{url=this.urlTransform(Ext.String.format(this.srcServletPath,url));}
return url;}});