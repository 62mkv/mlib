/*
 *  $Copyright-Start$
 *
 *  Copyright (c) 2013
 *  RedPrairie Corporation
 *  All Rights Reserved
 *
 *  This software is furnished under a corporate license for use on a
 *  single computer system and can be copied (with inclusion of the
 *  above copyright) only for use on such a system.
 *
 *  The information in this document is subject to change without notice
 *  and should not be construed as a commitment by RedPrairie Corporation.
 *
 *  RedPrairie Corporation assumes no responsibility for the use of the
 *  software described in this document on equipment which has not been
 *  supplied or approved by RedPrairie Corporation.
 *
 *  $Copyright-End$
 */

RP.globals=RP.globals||{};RP.stash.api.beginLoadLib();
Ext.override(Ext.AbstractComponent,{stateful:false});
Ext.override(Ext.Component,{initComponent:function(){this.callOverridden(arguments);this.on('afterrender',function(){this.on('resize',function(){this.el.isMasked();},this);},this,{single:true});}});
Ext.Element.addMethods(function(){var defaultMaskColor="#000";var defaultMaskOpacity=0.85;var defaultZIndex=50000;return{maskEx:function(msg,msgCls,opacity,color){color=color||defaultMaskColor;opacity=opacity||defaultMaskOpacity;var m=this.mask(msg,msgCls);m.setStyle("background-color",color);m.setStyle("opacity",opacity);m.setStyle("z-index",defaultZIndex);},isEmpty:function(){var html=Ext.String.trim(this.dom.innerHTML);return html==""||html=="&nbsp;";}};}());
Ext.override(Ext.form.field.Date,{getErrors:function(value){var errors=this.callOverridden(arguments);for(var i=0;i<errors.length;i++){errors[i]=errors[i].replace(this.format,RP.Date.translateFormat(this.format));}
return errors;}});
Ext.ns("RP.date");(function(){RP.date.NativeDate=Date;RP.date.DateOverride=function(){var date=new RP.date.NativeDate();if(arguments.length===1&&typeof arguments[0]==="string"&&arguments[0].match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}/)){date=RP.Date.extParseDate(arguments[0],"c");var isoDateNoOffset=arguments[0].replace(/(\+|-)(\d?\d:?\d\d)/,"");if(!Ext.isEmpty(isoDateNoOffset)){date.isoDateNoOffset=isoDateNoOffset;}}
else if(arguments.length===0){return new RP.date.NativeDate();}
else if(arguments.length===1){var str;if(Ext.isGecko&&Ext.isString(arguments[0])&&arguments[0].match(/^\d{4}$/)){str=arguments[0].substr(0,2)+":"+arguments[0].substr(2);}
else if(Ext.isChrome&&Ext.isString(arguments[0])&&arguments[0].match(/:\d+/)){var testDate=new RP.date.NativeDate(arguments[0]);var minuteInt=parseInt(arguments[0].match(/:(\d+)/)[1],10);if(minuteInt>=60&&testDate&&!isNaN(testDate.getFullYear())){return new RP.date.NativeDate("Invalid date");}
str=arguments[0];}
else{str=arguments[0];}
date=new RP.date.NativeDate(str);}
else if(arguments.length>1){date=new RP.date.NativeDate(arguments[0],arguments[1],arguments[2],arguments[3]||0,arguments[4]||0,arguments[5]||0,arguments[6]||0);if(date.toString()==="Invalid Date"&&arguments.length===1){date=new RP.date.NativeDate(arguments[0]);}}
if(arguments.length>=1&&arguments[0]instanceof Date){if(arguments[0].isoDateNoOffset!==undefined){date.isoDateNoOffset=arguments[0].isoDateNoOffset;}}
return date;};for(var prop in RP.date.NativeDate){if(prop!=="constructor"){RP.date.DateOverride[prop]=RP.date.NativeDate[prop];}}
RP.date.DateOverride.prototype=RP.date.NativeDate.prototype;Date=RP.date.DateOverride;Date.parse=RP.date.NativeDate.parse;Date.UTC=RP.date.NativeDate.UTC;})();(function(){var _setTimeValue=function(date,newValue,timeUnitGetterFnName,multiplier){var currentTimeValue=date[timeUnitGetterFnName]();date.setTime((date.getTime()-currentTimeValue*multiplier)+newValue*multiplier);};var _fixDstCompensation=function(date,isMonthMovingForward,fn,args){fn.apply(date,args);var beforeOffset=date.getTimezoneOffset();var afterOffset=Ext.Date.add(date,Ext.Date.HOUR,1).getTimezoneOffset();var dstShift=Math.abs(afterOffset-beforeOffset);var isInDstTimeRange=beforeOffset<afterOffset;if(isInDstTimeRange&&isMonthMovingForward===false){date.setTime(Ext.Date.add(date,Ext.Date.MINUTE,dstShift).getTime());}};var nativeSetMonth=Date.prototype.setMonth;Ext.apply(Date.prototype,{setMilliseconds:function(milliseconds){_setTimeValue(this,milliseconds,"getMilliseconds",1);},setSeconds:function(seconds,milliseconds){_setTimeValue(this,seconds,"getSeconds",1000);if(!Ext.isEmpty(milliseconds)){this.setMilliseconds(milliseconds);}},setMinutes:function(minutes,seconds,milliseconds){_setTimeValue(this,minutes,"getMinutes",60000);if(!Ext.isEmpty(seconds)||!Ext.isEmpty(milliseconds)){this.setSeconds(seconds,milliseconds);}},setHours:function(hours,minutes,seconds,milliseconds){var beforeIsDst=Ext.Date.isDST(this);var beforeTimeZoneOffset=this.getTimezoneOffset();_setTimeValue(this,hours,"getHours",3600000);if(!Ext.isEmpty(minutes)||!Ext.isEmpty(seconds)||!Ext.isEmpty(milliseconds)){this.setMinutes(minutes,seconds,milliseconds);}
var afterIsDst=Ext.Date.isDST(this);var afterTimeZoneOffset=this.getTimezoneOffset();var dstShift=Math.abs(afterTimeZoneOffset-beforeTimeZoneOffset);if(beforeIsDst===false&&afterIsDst===true&&hours!==2){this.setTime(Ext.Date.add(this,Ext.Date.MINUTE,-dstShift).getTime());}
else if(beforeIsDst===true&&afterIsDst===false){this.setTime(Ext.Date.add(this,Ext.Date.MINUTE,dstShift).getTime());}},setDate:function(day){var beforeIsDst=Ext.Date.isDST(this);var beforeTimeZoneOffset=this.getTimezoneOffset();_setTimeValue(this,day,"getDate",86400000);var afterIsDst=Ext.Date.isDST(this);var afterTimeZoneOffset=this.getTimezoneOffset();var dstShift=Math.abs(afterTimeZoneOffset-beforeTimeZoneOffset);if(beforeIsDst===false&&afterIsDst===true){this.setTime(Ext.Date.add(this,Ext.Date.MINUTE,-dstShift).getTime());}
else if(beforeIsDst===true&&afterIsDst===false){this.setTime(Ext.Date.add(this,Ext.Date.MINUTE,dstShift).getTime());}},setMonth:function(month,date){var currentMonth=this.getMonth();var monthsToAdd=month-currentMonth;var day=this.getDate();if(currentMonth==month&&Ext.isEmpty(date)){return;}
var isMonthMovingForward=currentMonth<month;_fixDstCompensation(this,isMonthMovingForward,this.setDate,[1]);_fixDstCompensation(this,isMonthMovingForward,nativeSetMonth,[currentMonth+monthsToAdd]);_fixDstCompensation(this,isMonthMovingForward,this.setDate,[Math.min(day,Ext.Date.getDaysInMonth(new Date(this.getFullYear(),month,1)))]);if(!Ext.isEmpty(date)){this.setDate(date);}},setFullYear:function(year,month,date){var yearsToAdd=year-this.getFullYear();this.setMonth(yearsToAdd*12+this.getMonth());if(!Ext.isEmpty(month)||!Ext.isEmpty(date)){this.setMonth(month,date);}}});})();
Ext.JSON.extDecode=Ext.JSON.decode;Ext.JSON.decode=function(){if(arguments.length===2){return Ext.JSON.extDecode.apply(Ext.JSON,arguments);}
else{return Ext.JSON.extDecode.call(Ext.JSON,arguments[0],true);}};Ext.decode=Ext.JSON.decode;
(function(){var oldAdd=Ext.util.History.add;Ext.apply(Ext.util.History,{add:function(token,preventDup){oldAdd.apply(this,arguments);if(this.oldIEMode){window.top.location.hash=token;}},cleanHashMark:function(token){var i=token.indexOf("#");return i>=0?token.substr(i+1):token;},updateIFrame:function(token){var html='<html><body><div id="state">'+
Ext.util.Format.htmlEncode(this.cleanHashMark(token))+'</div></body></html>';try{var doc=this.iframe.contentWindow.document;doc.open();doc.write(html);doc.close();return true;}
catch(e){return false;}}});})();
(function(){var stripRe=/[\$,%]/g;var msdateRe=/\/Date\((-?\d+)\)\//;var convertStringToDate=function(v){if(!v){return'';}
if(v instanceof Date){return v;}
if((/T(\d{2}):(\d{2})/).test(v)){return new Date(v);}
if(v.match){var match=v.match(msdateRe);if(match!==null&&match.length>1){return new Date(parseInt(v.replace(msdateRe,'$1'),10));}}
var dateFormat=this.dateFormat;if(dateFormat){if(dateFormat==="timestamp"){return new Date(v*1000);}
if(dateFormat==="time"){return new Date(parseInt(v,10));}
return Date.parseTime(v,dateFormat);}
var parsed=Ext.isNumeric(v)?v:Date.parse(v);return parsed?new Date(parsed):null;};Ext.data.Types.DATE={convert:function(v){return convertStringToDate(v);},sortType:Ext.data.SortTypes.asDate,type:"date"};Ext.data.Types.TIME={convert:function(v){var dt=convertStringToDate(v);if(!dt||dt===''){return'';}
return dt.formatTime();},sortType:Ext.data.SortTypes.asDate,type:"time"};Ext.data.Types.DATESTRING={convert:function(v){var dt=convertStringToDate(v);if(!dt||dt===''){return'';}
return dt.formatDate(RP.core.Formats.Date.FullDateTime);},sortType:Ext.data.SortTypes.asDate,type:"datestring"};})();
Ext.define('Ext.data.overrides.Types',{override:'Ext.data.Types',singleton:true},function(){var st=Ext.data.SortTypes;Ext.apply(Ext.data.Types,{AUTO:{convert:function(v){return v;},sortType:st.none,type:'auto'}});});
Ext.override(Ext.data.reader.Json,{getResponseData:function(){try{return this.callOverridden(arguments);}
catch(error){logger.logError(error.message);}}});
Ext.apply(Ext.data.reader.Reader.prototype,{nullResultSet:Ext.create('Ext.data.ResultSet',{total:0,count:0,records:[],success:true})});
RP.stash.api.endLoadLib();