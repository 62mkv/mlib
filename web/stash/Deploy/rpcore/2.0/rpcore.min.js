/*
 *  $Copyright-Start$
 *
 *  Copyright (c) 2013
 *  RedPrairie Corporation
 *  All Rights Reserved
 *
 *  This software is furnished under a corporate license for use on a
 *  single computer system and can be copied (with inclusion of the
 *  above copyright) only for use on such a system.
 *
 *  The information in this document is subject to change without notice
 *  and should not be construed as a commitment by RedPrairie Corporation.
 *
 *  RedPrairie Corporation assumes no responsibility for the use of the
 *  software described in this document on equipment which has not been
 *  supplied or approved by RedPrairie Corporation.
 *
 *  $Copyright-End$
 */

RP.globals=RP.globals||{};RP.stash.api.beginLoadLib();
RP.throwError=(function(){var truncateLength=80;var maxStackTraceDepth=25;var anonymousString="(anonymous)";var truncateFunction=function(fn){var functionString=fn.toString();return functionString.replace(/\s+/g," ");};var printObject=function(obj){var result="";if(obj==Ext){return result;}
for(var property in obj){var value=obj[property];if(Ext.isString(value)){value="'"+value+"'";}
else if(Ext.isArray(value)){value="[ "+value+" ]";}
else if(Ext.isFunction(value)){value=truncateFunction(value);}
result+=property+" : "+value+", ";}
return"{"+result.replace(/, $/,"")+"}";};var prettyPrintArguments=function(args){var prettyArgs=Ext.Array.map(args,function(value){if(value){if(Ext.isFunction(value)){return truncateFunction(value);}
else if(Ext.isObject(value)){return printObject(value);}
else if(value.getValue){return value.getValue();}}});return prettyArgs;};var getStackTrace=function(method){var stackTrace=[];var counter=0;while(method&&counter<maxStackTraceDepth){var stackPiece=anonymousString;if(method.$owner&&method.$owner.$className){stackPiece=method.$owner.$className;}
var argArr=prettyPrintArguments(Ext.Array.toArray(method["arguments"]));if(method.$name){stackPiece+="."+method.$name+"("+argArr.join(",")+")";}
if(stackPiece===anonymousString){stackPiece+=" "+truncateFunction(method);}
if(stackPiece.length>truncateLength){stackPiece=stackPiece.substring(0,truncateLength)+"...";}
stackTrace.push("\tat "+stackPiece);if(method.caller){method=method.caller;}
else{method=null;}
counter++;}
if(counter==maxStackTraceDepth){stackTrace.push("and more ...");}
return stackTrace.join("\n");};return function(message){var method=this.throwError.caller;var newMessage=message+":\n"+getStackTrace(method);if(Ext.isSafari&&Ext.safariVersion<5.1){RP.showErrorDialog(newMessage);}
throw new Error(newMessage);};}());RP.showErrorDialog=function(message){Ext.MessageBox.setAutoScroll(true);Ext.MessageBox.show({title:"Error",msg:message.replace(/\n/g,"<br/>").replace(/\t/g,"&#160;&#160;&#160;&#160;"),buttons:Ext.MessageBox.OK,width:650,fn:function(){Ext.MessageBox.setAutoScroll(false);}});};
Ext.onReady(function(){RP.locale.Dispatch.includeLocalePack("rpext");RP.locale.Dispatch.includeLocalePack("ext");RP.locale.Dispatch.includeLocalePack("components");RP.locale.Dispatch.includeLocalePack("exceptions");RP.locale.Dispatch.includeLocalePack("login");RP.locale.Dispatch.includeLocalePack("misc");RP.locale.Dispatch.includeLocalePack("dateranges");});
Ext.ns("RP.core");RP.core.ApplicationSites=function(){var appMetaData={};function getApplication(applicationId){for(var app in appMetaData){if(app.toLowerCase()===applicationId.toLowerCase()){return appMetaData[app];}}
return undefined;}
function getClientSite(applicationId,siteId){var application=appMetaData[applicationId];if(Ext.isArray(application)){for(var i=0;i<application.length;i++){var clientSite=application[i];if(clientSite.siteId===siteId){return clientSite;}}}
return null;}
function compareString(stringA,stringB){var a=stringA.toLowerCase();var b=stringB.toLowerCase();if(a<b){return-1;}
else if(a>b){return 1;}
return 0;}
return{setApps:function(applicationMetaData){appMetaData=applicationMetaData;},getAllSiteIds:function(){var clientSites,siteId,siteIds=[],uniqueSiteIds={};for(var application in appMetaData){clientSites=appMetaData[application];if(Ext.isArray(clientSites)){for(var i=0;i<clientSites.length;i++){siteId=clientSites[i].siteId;if(!uniqueSiteIds[siteId]){siteIds.push(siteId);}
uniqueSiteIds[siteId]=true;}}}
return this.sortSiteIds(siteIds);},sortSiteIds:function(uniqueSites){var numberSites=[],stringSites=[];for(var j=0;j<uniqueSites.length;j++){var site=uniqueSites[j];if(Ext.isNumber(parseInt(site,10))){numberSites.push(site);}
else{stringSites.push(site);}}
numberSites.sort(function(a,b){var parsedA=parseInt(a,10),parsedB=parseInt(b,10);if(parsedA===parsedB&&a!==b){return compareString(a.replace(parsedA.toString(),""),b.replace(parsedB.toString(),""));}
return parsedA-parsedB;});stringSites.sort(compareString);return numberSites.concat(stringSites);},getNativeId:function(applicationId,siteId){var clientSite=getClientSite(applicationId,siteId);if(clientSite!==null){return clientSite.nativeId;}
return null;},getSiteLocale:function(siteID){var app,site;for(var appindex in appMetaData){app=appMetaData[appindex];for(var siteindex in app){site=app[siteindex];if(site.siteId===siteID&&site.locale!=='')
{return site.locale;}}}
return null;},getSessionKeepAliveUrl:function(){logger.logTrace("[Application Site] Finding Keep Alive URL");return RP.core.PageContext.getPageUrl()+this.buildDataServiceUrl("rp","admin/sessionKeepAlive");},isAppInstalled:function(appId){var application=getApplication(appId);return application!==undefined;},buildDataServiceUrl:function(appId,bean,params){logger.logTrace("[Application Site] Creating a fully qualified data service URL");var globalSiteId=RP.globals.getValue("SITEID");var serverName=RP.location.DEFAULT_NONE;var siteId=RP.location.DEFAULT_NONE;var application=getApplication(appId);if(Ext.isDefined(application)){var clientSite=getClientSite(appId,globalSiteId);var potentialSiteId=RP.core.ApplicationSites.getNativeId(appId,globalSiteId);if(Ext.isDefined(potentialSiteId)){siteId=potentialSiteId;}
if(clientSite!==null&&siteId!==null){serverName=clientSite.server;}}
params=params||{};var siteName=(serverName!==RP.location.DEFAULT_NONE?serverName:globalSiteId);var url=RP.globals.getFullyQualifiedPath("PATH_TO_DATA_ROOT");if(appId==="rp"){url+=appId;}
else if(params.siteName){url+=params.siteName;}
else{url+=siteName;}
url+="/"+bean;if(!params.siteId&&siteId!==RP.location.DEFAULT_NONE){params.siteId=siteId;}
if(RP.core.Sundial.hasOffset()){params.demoDate=Ext.Date.format(RP.core.Sundial.now(),"c");}
url=Ext.urlAppend(url,Ext.urlEncode(params));return url;},buildWebUrl:function(appId,path){logger.logTrace("[Application Site] Creating a web folder URL");if(path.charAt(0)=='/'){path=path.substring(1);}
return RP.globals.paths.STATIC+appId+"/"+path;}};}();RP.isAppInstalled=RP.core.ApplicationSites.isAppInstalled;RP.buildDataServiceUrl=RP.core.ApplicationSites.buildDataServiceUrl;RP.buildWebUrl=RP.core.ApplicationSites.buildWebUrl;RP.getSessionKeepAliveUrl=RP.core.ApplicationSites.getSessionKeepAliveUrl;
Ext.ns("RP.core");RP.core.PageContext=(function(){var CONTEXT_TOKEN=":";var refreshOnModuleContextChange=true;function getRootUrl(){var baseUrl=RP.globals.getPath("BASE_URL");if(!Ext.isEmpty(baseUrl)){return baseUrl;}
return Ext.String.format("{0}//{1}",window.location.protocol,window.location.host);}
function getPageRootPath(moduleName,siteId){if(!Ext.isDefined(siteId)){siteId=RP.globals.getValue("SITEID");}
var siteIdStr=Ext.String.format("/{0}",encodeURIComponent(siteId));var rootPath=Ext.String.format("{0}{1}/{2}",RP.globals.getFullyQualifiedPath("PB_ROOT"),siteIdStr,moduleName);if(rootPath.indexOf("http")!==0){rootPath=getRootUrl()+rootPath;}
return rootPath;}
function setLocationToModule(moduleName,moduleContext){var moduleContextStr=moduleContext?Ext.urlEncode(moduleContext):"";RP.util.Helpers.redirect(Ext.String.format("{0}#/{1}",getPageRootPath(moduleName),moduleContextStr));}
function getValidContextProperties(objs){var ret={};Ext.iterate(objs,function(key,value){if(Ext.isPrimitive(value)){ret[key]=value;}});return ret;}
function getContextAsUrl(moduleContext,taskflowContext,taskContext){var moduleCtx=moduleContext?Ext.urlEncode(getValidContextProperties(moduleContext)):"";var taskflowCtx=taskflowContext?Ext.urlEncode(getValidContextProperties(taskflowContext)):"";var taskCtx=taskContext?Ext.urlEncode(getValidContextProperties(taskContext)):"";if(!Ext.isEmpty(moduleCtx)||!Ext.isEmpty(taskflowCtx)||!Ext.isEmpty(taskCtx)){return Ext.String.format("/{0}/{1}/{2}",moduleCtx,taskflowCtx,taskCtx);}
return"";}
function parseUrl(hash){if(!Ext.isDefined(hash)||hash===null){hash="";}
var parts=hash.split("/");var tfNav=parts[0].split(CONTEXT_TOKEN);var moduleCtx={},taskflowCtx={},taskCtx={};if(!Ext.isEmpty(parts[1])){moduleCtx=Ext.urlDecode(parts[1]);}
if(parts.length>2){taskflowCtx=Ext.urlDecode(parts[2]);}
if(parts.length>3){taskCtx=Ext.urlDecode(parts[3]);}
return{tfName:tfNav[0]||"",taskID:tfNav[1]||"",moduleContext:moduleCtx,taskflowContext:taskflowCtx,taskContext:taskCtx};}
function createUrlHash(taskflowName,taskName,moduleContext,taskflowContext,taskContext){var ctxUrl=getContextAsUrl(moduleContext,taskflowContext,taskContext)||"";taskName=taskName||"";taskflowName=taskflowName||"";return Ext.String.format("{0}{1}{2}{3}",taskflowName,CONTEXT_TOKEN,taskName,ctxUrl);}
return{isRefreshOnModuleContextChange:function(){return refreshOnModuleContextChange;},encodeContextAsHashValue:function(ctx){return Ext.urlEncode(getValidContextProperties(ctx));},parseHash:function(hash){return parseUrl(hash);},getPageUrl:function(){return getRootUrl();},getActiveModuleName:function(){var urlPathName=window.location.pathname;var urlPath=urlPathName.split("/");var moduleName=urlPath[urlPath.length-1];if(moduleName!=="rp"&&moduleName!==RP.globals.SITEID){return moduleName;}
return null;},determineModule:function(moduleName){var modules=RP.taskflow.ModuleRegistry.getAllSorted();var activeModuleName=this.getActiveModuleName();if(!moduleName&&activeModuleName){moduleName=activeModuleName;}
else if(!moduleName&&modules.length>0){moduleName=modules[0].name;}
var activeModule=RP.taskflow.ModuleRegistry.get(moduleName);if(activeModule===undefined&&modules.length>0){activeModule=RP.taskflow.ModuleRegistry.get(modules[0].name);var url=RP.core.PageContext.getPageURL(RP.globals.SITEID,modules[0].name);RP.util.Helpers.redirect(url);}
RP.globals.CURRENT_MODULE=activeModule;return activeModuleName;},setActiveModule:function(moduleName,moduleContext){var currentModuleName=RP.globals.CURRENT_MODULE.name;var activeModuleName=this.determineModule(moduleName);if(!moduleContext&&RP.globals.CURRENT_MODULE&&moduleName===currentModuleName&&RP.globals.CURRENT_HASH&&RP.globals.CURRENT_HASH.moduleContext){moduleContext=RP.globals.CURRENT_HASH.moduleContext;}
if(Ext.isDefined(activeModuleName)&&activeModuleName!=moduleName){setLocationToModule(moduleName,moduleContext);}
else{RP.util.Helpers.reload(100);}},setInitialURL:function(siteId,moduleName){RP.globals.SITEID=siteId;RP.location={};RP.location.DEFAULT_NONE='NONE';RP.util.Helpers.redirect(getPageRootPath(moduleName,siteId));},getActiveTaskflowName:function(){var urlTokens=window.location.hash.split(CONTEXT_TOKEN);if(urlTokens.length>0){return urlTokens[0].replace(/^#/,"");}
return null;},getActiveTaskName:function(){var urlTokens=window.location.hash.split(CONTEXT_TOKEN);if(urlTokens.length>1){return urlTokens[1].replace(/\/.*$/,"");}
return null;},getTaskHash:function(taskflowName,taskID,taskflowContext,taskContext){var currCtx=parseUrl(window.location.hash);var newHash=createUrlHash(taskflowName,taskID,currCtx.moduleContext,taskflowContext,taskContext);return newHash;},getModuleContext:function(){var currCtx=parseUrl(window.location.hash);return currCtx.moduleContext;},updateModuleContext:function(moduleContext,refreshBrowser){if(!Ext.isEmpty(refreshBrowser)){refreshOnModuleContextChange=refreshBrowser;}
var currCtx=parseUrl(window.location.hash);var newHash=createUrlHash(currCtx.tfName,currCtx.taskID,moduleContext,currCtx.taskflowContext,currCtx.taskContext);Ext.util.History.add(newHash,true);},updateTaskflowContext:function(taskflowContext){var currCtx=parseUrl(window.location.hash);var newHash=createUrlHash(currCtx.tfName,currCtx.taskID,currCtx.moduleContext,taskflowContext,currCtx.taskContext);Ext.util.History.add(newHash,true);},updateTaskContext:function(taskContext){var currCtx=parseUrl(window.location.hash);var newHash=createUrlHash(currCtx.tfName,currCtx.taskID,currCtx.moduleContext,currCtx.taskflowContext,taskContext);if(newHash){Ext.util.History.add(newHash,true);}},getPageURL:function(siteId,moduleName,taskflowName,taskName,moduleCtx,taskflowCtx,taskCtx){return Ext.String.format("{0}#{1}",getPageRootPath(moduleName,siteId),createUrlHash(taskflowName,taskName,moduleCtx,taskflowCtx,taskCtx));},switchSite:function(siteId,openNewWindow){var url=RP.core.PageContext.getPageURL(siteId,RP.core.PageContext.getActiveModuleName());if(openNewWindow===true){RP.core.PageContext.openWindow(url);}
else{RP.util.Helpers.redirect(url);}},openWindow:function(url,name,options){var opt=[];options=options||{};name=name||new Date().getTime().toString();Ext.iterate(options,function(key,value){opt.push(Ext.String.format("{0}={1}",key,value?1:0));});return window.open(url,name,opt.toString());}};})();
Ext.ns("RP.core");RP.core.SessionSecurity=(function(){function startTimerFn(){RP.util.PageInactivityChecker.start(60*RP.globals.getValue("INACTIVITY_TIMEOUT_MINUTES"));}
function inactivityWarningFn(){logger.logTrace("[Session Security] User inactive, starting expiration countdown");RP.event.AppEventManager.fire(RP.upb.AppEvents.Inactive,{});var dlg=Ext.getCmp("inactivityWarningDialog");if(!dlg){dlg=new RP.ui.InactivityWarningDialog();}
RP.event.AppEventManager.register(RP.upb.AppEvents.ActiveAgain,startTimerFn);dlg.show();}
function terminatedSession(){logger.logTrace("[Session Security] Session expired, displaying dialog");if(!Ext.getCmp("sessionExpiredDialog")&&!Ext.getCmp("externalAuthenticationExpiredDialog")){Ext.getBody().maskEx();var dialog;if(!RP.util.Helpers.isNativeLogin()){dialog=new RP.ui.ExternalAuthenticationExpiredDialog();}
else{dialog=new RP.ui.SessionExpiredDialog();}
dialog.on("destroy",function(){Ext.getBody().unmask();});dialog.show();}}
function clearDirtyPageChecks(){if(Ext.isFunction(window.onbeforeunload)){window.onbeforeunload=null;}}
Ext.Ajax.on("sessionterminated",terminatedSession,this);Ext.Ajax.on("sessionterminated",clearDirtyPageChecks,this);if(Ext.isString(RP.globals.paths.REAUTHENTICATE)&&Ext.isNumber(parseInt(RP.globals.INACTIVITY_TIMEOUT_MINUTES,10))&&RP.globals.INACTIVITY_TIMEOUT_MINUTES>0){RP.util.PageInactivityChecker.addHandler(inactivityWarningFn);startTimerFn();}})();
Ext.ns("RP.upb");RP.upb.AppEvents={Inactive:"rp.upb.inactive",ActiveAgain:"rp.upb.activeAgain",ModuleContextChanged:"rp.ub.moduleCtxChanged",BeforeSessionExpired:"rp.upb.beforeSession",SessionExpired:"rp.upb.sessionExpired",SessionReauthenticated:"rp.upb.sessionReauthenticated",KeepAlive:"rp.upb.keepAlive",KeepAliveSuccess:"rp.upb.keepAliveSuccess",KeepAliveFailure:"rp.upb.keepAliveFailure"};
Ext.define("RP.upb.ChangeSiteWindow.SiteModel",{extend:"Ext.data.Model",fields:["siteId"]});Ext.define("RP.upb.ChangeSiteWindow",{extend:"Ext.window.Window",alias:"widget.changesitewindow",width:450,closeAction:"hide",draggable:false,resizable:false,closable:false,modal:true,bodyPadding:20,bodyStyle:"background-color: #fff",initComponent:function(){Ext.apply(this,{title:RP.getMessage("rp.common.changesite.FormTitle"),items:this.createItems()});this.callParent();},createItems:function(){var store=new Ext.data.Store({model:"RP.upb.ChangeSiteWindow.SiteModel"});Ext.each(RP.core.ApplicationSites.getAllSiteIds(),function(site){store.add({siteId:site});});return[{xtype:"panel",itemId:"changeSitePanel",height:90,border:false,layout:{type:"vbox",align:"center"},items:[{xtype:"combo",itemId:"chooseSite",value:RP.globals.SITEID,labelAlign:"right",fieldLabel:RP.getMessage("rp.common.changesite.CurrentSite"),store:store,displayField:"siteId",valueField:"siteId",typeAhead:true,queryMode:"local",forceSelection:true,triggerAction:"all",selectOnFocus:true,labelStyle:"font-weight: bold",listeners:{specialkey:this.onSpecialKey,scope:this}},{xtype:"checkboxfield",boxLabel:RP.getMessage("rp.common.changesite.OpenInNewWindow")}],bbar:this.createBottomToolbar()}];},createBottomToolbar:function(){return{xtype:"toolbar",dock:"bottom",ui:"footer",layout:{type:"hbox",pack:"center"},defaults:{xtype:"button",minWidth:this.minButtonWidth},items:[{itemId:"btnSubmit",text:RP.getMessage("rp.common.changesite.SelectButton"),handler:this.openSelectedSite,scope:this},{itemId:"btnCancel",text:RP.getMessage("rp.common.changesite.CancelButton"),handler:this.close,scope:this}]};},changeSite:function(siteId,openNewWindow){RP.core.PageContext.switchSite(siteId,openNewWindow);this.close();},openSelectedSite:function(){var siteId=this.down("combobox").getValue();var openNewWindow=this.down("checkboxfield").getValue();this.changeSite(siteId,openNewWindow);},onSpecialKey:function(field,e){if(e.getKey()==e.ENTER&&field.findRecordByValue(field.getValue())){e.stopEvent();this.openSelectedSite();}}});
Ext.define("RP.upb.UnstableEnvironmentWindow",{extend:"Ext.Component",singleton:true,alias:"widget.unstableenvironmentwindow",id:"_rp-unstable-environment-window",show:function(){Ext.MessageBox.show({itemId:this.id,buttons:Ext.MessageBox.OK,icon:Ext.MessageBox.WARNING,title:RP.getMessage("rp.common.misc.UnstableEnvironmentMessageTitle"),msg:RP.getMessage("rp.common.misc.UnstableEnvironmentMessageDescription")});},isVisible:function(){if(Ext.MessageBox.cfg.itemId===this.id){return Ext.MessageBox.isVisible();}},close:function(){if(Ext.MessageBox.cfg.itemId===this.id){Ext.MessageBox.close();}}});
Ext.define("RP.upb.HeaderPanel",{extend:"Ext.panel.Panel",alias:"widget.rpheaderpanel",initComponent:function(){var demoDateHtml=this._getDemoDateHtml();var html=Ext.String.format('<div class="rp-header">'+'<div class="rp-header-logo"></div>'+'<div class="rp-header-nav">'+'<div class="rp-header-nav-top">'+'</div>'+
demoDateHtml+'</div>'+'</div>');var appHeader=new Ext.panel.Panel({border:false,html:html});var exitLink;var exitLinkId="_rpExitLink";if(RP.upb.PageBootstrapper.isNativeLogin()===false){exitLink=new Ext.Component({autoEl:{tag:"a",href:RP.globals.getFullyQualifiedPath("LOGOUT"),html:RP.getMessage("rp.common.misc.Close")},cls:"rp-header-nav-link",id:exitLinkId});}
else{exitLink=new Ext.Component({autoEl:{tag:"a",href:RP.globals.getFullyQualifiedPath("LOGOUT"),html:RP.getMessage("rp.common.misc.Logout")},cls:"rp-header-nav-link",id:exitLinkId});}
var mainHelpURL=RP.globals.getPath('BASE_URL')+RP.globals.getValue('PATH_TO_ROOT')+"web/refs/help/main.htm";RP.help.HelpRegistry.setDefaultHelpURL(mainHelpURL);var helpLink=RP.help.RoboHelpLink.createHelpLink({cls:"rp-header-nav-link"},mainHelpURL,RP.getMessage("rp.common.misc.HelpLinkLabel"),"rphelpwindow",this.helpMapper);Ext.apply(this,{border:false,layout:"fit",items:[appHeader]});appHeader.on("afterrender",function(){this.displayHeaderNotification("_rp-headerNotification");this.addHeaderComponent(new RP.upb.UserComponent({externalAuthentication:this.externalAuthentication}));this.addHeaderComponent(this.getSiteComponent());this.addHeaderComponent(exitLink);this.addHeaderComponent(helpLink);},this);this.callParent(arguments);},_getDemoDateHtml:function(){var demoDateHtml="";var sundial=RP.core.Sundial;if(sundial.hasOffset()){var demoDateStr=RP.Date.formatDate(sundial.now(),RP.core.Formats.Date.Long);demoDateHtml='<div class="rp-header-nav-bottom">'+'<span class="rp-header-demo-time">'+RP.getMessage("rp.common.misc.DemoDateLabel")+
demoDateStr+'</span>'+'</div>';}
return demoDateHtml;},displayHeaderNotification:function(renderToId){if(RP.globals.getValue("UNSTABLE")==="true"){this.addHeaderComponent(new RP.upb.HeaderNotification({id:renderToId}));}},addHeaderComponent:function(component){if(!Ext.isEmpty(component)){var domQuery=Ext.core.DomQuery;var headerNav=domQuery.selectNode(".rp-header .rp-header-nav-top");var separatorHtml='<span class="rp-header-nav-separator">|</span>';if(domQuery.selectNode(".rp-header .rp-header-nav-top:has(*)")){Ext.core.DomHelper.insertHtml("beforeEnd",headerNav,separatorHtml);}
component.render(headerNav);}},getSiteComponent:function(){var sites=RP.core.ApplicationSites.getAllSiteIds();var siteId=RP.globals.getValue("SITEID");if(!Ext.isEmpty(sites)){if(sites.length>1){return new RP.ui.Hyperlink({text:siteId,cls:"rp-header-nav-link",id:"_rp-siteSelectLink",scope:this,handler:function(){if(!this.changeSiteWindow){this.changeSiteWindow=new RP.upb.ChangeSiteWindow();}
this.changeSiteWindow.show();}});}
else if(siteId!==RP.location.DEFAULT_NONE){return new Ext.form.Label({text:siteId});}}
return null;},helpMapper:function(){var currTask=RP.globals.CURRENT_TASK;if(!Ext.isDefined(currTask)){return null;}
var currTaskConfig=currTask.taskConfig;if(Ext.isFunction(currTaskConfig.helpMapperFn)){var taskMappedHelpUrl=currTaskConfig.helpMapperFn();if(!Ext.isEmpty(taskMappedHelpUrl)){return taskMappedHelpUrl;}}
var taskHelpUrl=currTaskConfig.helpUrl;var helpRootUrl=RP.help.HelpRegistry.getHelpRootURL(currTask.appId);if(taskHelpUrl.indexOf("http://")===0||taskHelpUrl.indexOf("https://")===0){return taskHelpUrl;}
if(Ext.isEmpty(taskHelpUrl)||Ext.isEmpty(helpRootUrl)){return null;}
return(helpRootUrl+taskHelpUrl);}});
Ext.define("RP.upb.HeaderNotification",{extend:"Ext.Component",alias:"widget.rpheadernotification",initComponent:function(){Ext.apply(this,{autoEl:{tag:"a",href:["javascript",":void(0);"].join(""),html:RP.getMessage("rp.common.misc.UnstableEnvironmentWarning")}});this.on("afterrender",this.attachClickHandler,this);this.callParent();},attachClickHandler:function(){this.getEl().on("click",this.displayMessage,this);},displayMessage:function(){RP.upb.UnstableEnvironmentWindow.show();}});
Ext.define("RP.upb.UserComponent",{extend:"Ext.Component",initComponent:function(){var userFullName=RP.globals.getValue("USER_FULL_NAME");Ext.apply(this,{id:"_rp-userName",autoEl:{tag:"span",html:RP.globals.getValue("DISPLAY_USER_FULLNAME")&&!Ext.isEmpty(userFullName)?userFullName:RP.globals.getValue("USERNAME")}});this.on("afterrender",this.onAfterRender,this);this.callParent();},onAfterRender:function(){if(!this.externalAuthentication){this.addMenu();}
else{this.removeDownArrow();}},addMenu:function(){var menu=new Ext.menu.Menu({id:"_rpUserMenu"});menu.add({itemId:"changePassword",text:RP.getMessage("rp.common.changepassword.FormTitle"),handler:function(){var changePassword=new RP.ui.ChangePassword();changePassword.show();}});this.getEl().on("click",function(){menu.showBy(this,"bl");});},removeDownArrow:function(){this.getEl().set({id:""});}});
Ext.define("RP.upb.Viewport",{extend:"Ext.container.Viewport",northHeight:55,initComponent:function(){var centerPanel=this.createCenterPanel();var northPanel=this.createNorthPanel();Ext.apply(this,{layout:'border',items:[northPanel,centerPanel]});this.callParent(arguments);},createCenterPanel:function(){return Ext.create("Ext.panel.Panel",{itemId:"_rp_center_panel",cls:"rp-center-panel",region:'center',border:false,layout:"fit",items:this.centerItems});},createNorthPanel:function(){return{region:'north',split:false,height:this.northHeight,border:false,collapsible:false,layout:'fit',items:[{id:"_rp_header_panel",xtype:'rpheaderpanel',externalAuthentication:this.externalAuthentication}]};}});
Ext.ns("RP.upb");RP.upb.PageBootstrapper=(function(){var viewPortId="rpViewport";var externalAuthentication=false;var nativeLogin=true;var taskflowFrameItemId="taskflowFrame";function renderPage(config){externalAuthentication=config.externalAuthentication||false;nativeLogin=Ext.valueFrom(config.nativeLogin,true);var currentModule=config.currentModule||"";var modules=RP.taskflow.ModuleRegistry.getAllSorted();if(!Ext.isEmpty(currentModule)&&Ext.isString(currentModule)){RP.globals.CURRENT_MODULE=RP.taskflow.ModuleRegistry.get(currentModule);}
else{RP.core.PageContext.determineModule();}
var activeModule=RP.globals.CURRENT_MODULE;var taskflows=[];if(activeModule){logger.logInfo("[PageBootstraper] Loading module '"+activeModule.name+"'");var taskflowsEnabled=true;if(activeModule.taskflows.names){taskflowsEnabled=activeModule.taskflows.enabled;activeModule.taskflows=activeModule.taskflows.names;}
Ext.each(activeModule.taskflows,function(tfName){var tfDef=RP.taskflow.TaskflowRegistry.get(tfName);if(tfDef){taskflows.push({itemId:tfName,taskflow:tfName,title:tfDef.title,isTitleMessageName:tfDef.isTitleMessageName,widgetContainerXtype:tfDef.widgetContainerXtype});}});}
var createViewportFn=function(){var viewport;if(RP.taskflow.prototype&&RP.taskflow.prototype.TaskflowFrame){viewport=new RP.upb.prototype.Viewport({id:viewPortId,taskflowFrameItemId:taskflowFrameItemId,externalAuthentication:externalAuthentication,taskflows:taskflows,taskflowsEnabled:taskflowsEnabled,modules:modules});}
else{viewport=new RP.upb.Viewport({id:viewPortId,externalAuthentication:externalAuthentication,centerItems:[new RP.taskflow.TaskflowFrame({itemId:taskflowFrameItemId,navRegion:RP.globals.NAV_REGION,navTitle:activeModule?RP.getMessage(activeModule.label):"",taskflows:taskflows,taskflowsEnabled:taskflowsEnabled,modules:modules})]});}};var moduleInitFn=Ext.emptyFn;if(activeModule){moduleInitFn=activeModule.initFn;}
if(Ext.isString(moduleInitFn)){var tmpInitFn=eval(moduleInitFn);if(Ext.isFunction(tmpInitFn)){moduleInitFn=tmpInitFn;}}
if(Ext.isDefined(activeModule)&&Ext.isFunction(moduleInitFn)){moduleInitFn.call(activeModule,createViewportFn);}
else{createViewportFn();}}
var onErrorHandler=function(message,file,line){var msg="An error occured ";if(message.indexOf("nsIXMLHttpRequest.getAllResponseHeaders")>=0){return;}
if(file){msg+="in file "+file;}
if(line){msg+=" at line "+line;}
msg+="\n\n";if(message=="Script error."){message+="\n\nThe message for this error may have been lost due to your browser being at a different domain than the stashURL and staticURL in your rpweb.xml config file.";}
try{while(Ext.AbstractComponent.layoutSuspendCount>0){Ext.resumeLayouts(true);}
logger.logError(msg+message);Ext.defer(RP.showErrorDialog,1,RP,[msg+message]);}
catch(e){}
return false;};return{bootstrap:function(config){logger.setLogToServerURL(RP.globals.getFullyQualifiedPath("PATH_TO_DATA_ROOT")+"logToServer");if(config.logToServerInterval){logger.setLogToServerInterval(config.logToServerInterval);}
if(config.logToServerFlag){logger.setLogToServer(true,false);}
if(config.logMaxEntries){logger.setUIMaxEntries(config.logMaxEntries);}
logger.logTrace("[PageBootstrapper] bootstrap()...");var scriptUrls=[];Ext.Array.each(RP.taskflow.ModuleRegistry.getAllSorted(),function(node){Ext.Array.each(node.scriptUrls,function(scriptUrl){scriptUrls.push(scriptUrl);});});Ext.each(RP.taskflow.TaskflowRegistry.getAll(),function(node){Ext.each(node.scriptUrls,function(scriptUrl){scriptUrls.push(scriptUrl);});});if(!Ext.isEmpty(scriptUrls)){RP.util.ScriptLoader.load(scriptUrls,Ext.emptyFn,Ext.emptyFn);}
Ext.onReady(function(){window.onerror=onErrorHandler;Ext.state.Manager.setProvider(new Ext.state.CookieProvider({expires:new Date(new Date().getTime()+(1000*60*60*24*365))}));RP.util.ScriptLoader.onReady(function(){renderPage(config);if(RP.globals.getValue("SERVER_TYPE")!=="production"&&window.console&&window.console.warn){var host=window.location.host;var staticUrl=RP.globals.getPath("STATIC");var stashUrl=RP.stash.STASH_ROOT;if(!RP.String.contains(staticUrl.toLowerCase(),host.toLowerCase())){console.warn("Your staticURL: "+staticUrl+" is a different host that your browser is at: "+host+". This can cause odd cross-site scripting issues.");}
if(!RP.String.contains(stashUrl.toLowerCase(),host.toLowerCase())){console.warn("Your stashURL: "+stashUrl+" is a different host that your browser is at: "+host+". This can cause odd cross-site scripting issues.");}}
if(RP.globals.getValue("SERVER_TYPE")==="production"&&RP.globals.getValue("UNSTABLE")==="true"){RP.upb.UnstableEnvironmentWindow.show();}
RP.event.AppEventManager.register(RP.upb.AppEvents.ModuleContextChanged,function(){RP.util.Helpers.reload(1);});});});},getTaskflowFrame:function(){return Ext.getCmp(viewPortId).down("#"+taskflowFrameItemId);},isExternallyAuthenticated:function(){return externalAuthentication||false;},isNativeLogin:function(){return nativeLogin;}};})();RP.getTaskflowFrame=RP.upb.PageBootstrapper.getTaskflowFrame;
RP.stash.api.endLoadLib();