Customized jar with infinispan 5.2.5 and 1 modification

diff --git a/core/src/main/java/org/infinispan/factories/components/ComponentMet
index cf2b770..893a3b4 100644
--- a/core/src/main/java/org/infinispan/factories/components/ComponentMetadata.j
+++ b/core/src/main/java/org/infinispan/factories/components/ComponentMetadata.j
@@ -31,6 +31,7 @@
 import java.io.Serializable;
 import java.lang.annotation.Annotation;
 import java.lang.reflect.Method;
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashMap;
 import java.util.LinkedList;
@@ -109,6 +110,8 @@ public ComponentMetadata(Class<?> component, List<Method> in
             InjectMetadata injectMetadata = new InjectMetadata(m.getName());
             
             Class<?>[] parameterTypes = m.getParameterTypes();
+            
+            List<String> paramNames = new ArrayList<String>(parameterTypes.leng
 
             // Add this to our dependencies map
             Annotation[][] annotations = m.getParameterAnnotations();
@@ -118,12 +121,14 @@ public ComponentMetadata(Class<?> component, List<Method> 
                params.add(parameterType);
f (componentName == null) {
                   dependencies.put(parameterType, parameterType);
+                  paramNames.add(null);
                } else {
-                  injectMetadata.addParameterName(i, componentName);
+                  paramNames.add(componentName);
                   dependencies.put(componentName, parameterType);
                }
             }
             injectMetadata.parameters = params.toArray(new String[params.size()
+            injectMetadata.parameterNames = paramNames.toArray(new String[param
             this.injectMetadata[j++] = injectMetadata;
          }
       }
@@ -241,7 +246,7 @@ public int getPriority() {
       transient Method method;
       String[] parameters;
       transient Class<?>[] parameterClasses;
-      Map<Integer, String> parameterNames; 
+      String[] parameterNames; 
 
       private InjectMetadata(String methodName) {
          this.methodName = methodName;
@@ -256,19 +261,14 @@ public String getMethodName() {
       }
       
       public String getParameterName(int subscript) {
-         String name = parameterNames == null ? null : parameterNames.get(subsc
+         String name = parameterNames == null ? null : parameterNames[subscript
          return name == null ? parameters[subscript] : name;
       }
 
       public boolean isParameterNameSet(int subscript) {
-         return parameterNames != null && parameterNames.containsKey(subscript)
+         return parameterNames != null && parameterNames[subscript] != null;
       }
       
-      void addParameterName(int subscript, String name) {
-         if (parameterNames == null) parameterNames = new HashMap<Integer, Stri
-         parameterNames.put(subscript, name);
-      }
-
       public synchronized Method getMethod() {
          return method;
       }
