<command>
<name>dump data</name>
<description>Dumps data from a command.</description>
<type>Java Method</type>
<class>CoreService</class>
<method>dumpData</method>
<insecure>yes</insecure>
<argument name="dump_command" datatype="string" required="yes">
</argument>
<argument name="file_name" datatype="string">
</argument>
<argument name="create_directory" default-value="T" datatype="string">
</argument>
<argument name="dump_mode" default-value="CSV" datatype="string">
</argument>
<argument name="dump_append" default-value="F" datatype="string">
</argument>
<argument name="version" default-value="1.0" datatype="string">
</argument>
<argument name="dump_tag" datatype="string">
</argument>
<documentation>
<remarks>
<![CDATA[
 This command dumps the result set from the given command.  The given command
 must end with a call to format data.  
 <br/>
 Environment variables in the filename are expanded.  The directory for the 
 output file will be created if create_directory argument is 'T'.  The mode 
 argument can be either 'CSV' or 'XML'.]]>
 <br/>
 Dump append doesn't work correctly with XML as you will have additional tags.
 A value of 'F' for dump appends means to create a new file.  Any other value 
 will do append.
 <br/>
 Important: This command is meant to be called from unload control files in
            tandem with the "format data" command.  Its use outside of this
            context is limited.
</remarks>
<seealso cref="format data"></seealso>
<retrows>None.  This command just returns a status.</retrows>
<exception value="eOK">The command completed successfully.</exception>
<exception value="eERROR">A general error occurred while executing the command.</exception>
<exception value="eINVALID_ARGS">One or more invalid arguments were passed to the command.</exception>
<exception value="eMOCA_MISSING_ARG">One or more required arguments were not passed to the command.</exception>
<exception value="eFILE_OPENING_ERROR">The given file could not be opened.</exception>
</documentation>
</command>
